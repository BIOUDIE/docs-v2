{
	"id": 0,
	"name": "@thirdweb-dev/react-core",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 188,
			"name": "ISecureStorage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 189,
					"name": "getItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
							"line": 4,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L4"
						}
					],
					"signatures": [
						{
							"id": 190,
							"name": "getItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
									"line": 4,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L4"
								}
							],
							"parameters": [
								{
									"id": 191,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 196,
					"name": "removeItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
							"line": 6,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L6"
						}
					],
					"signatures": [
						{
							"id": 197,
							"name": "removeItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
									"line": 6,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L6"
								}
							],
							"parameters": [
								{
									"id": 198,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 192,
					"name": "setItem",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
							"line": 5,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L5"
						}
					],
					"signatures": [
						{
							"id": 193,
							"name": "setItem",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
									"line": 5,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L5"
								}
							],
							"parameters": [
								{
									"id": 194,
									"name": "key",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 195,
									"name": "value",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Methods",
					"children": [189, 196, 192]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
					"line": 3,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L3"
				}
			]
		},
		{
			"id": 184,
			"name": "ThirdwebAuthConfig",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The configuration to use the react SDK with an [auth](https://portal.thirdweb.com/auth) server."
					}
				]
			},
			"children": [
				{
					"id": 185,
					"name": "authUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The backend URL of the authentication endoints. For example, if your endpoints are\nat "
							},
							{
								"kind": "code",
								"text": "`/api/auth/login`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`/api/auth/logout`"
							},
							{
								"kind": "text",
								"text": ", etc. then this should be set to "
							},
							{
								"kind": "code",
								"text": "`/api/auth`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
							"line": 18,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 186,
					"name": "domain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The frontend domain used to generate the login payload.\nThis domain should match the domain used on your auth backend."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
							"line": 24,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 187,
					"name": "secureStorage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Secure storage to use for storing the auth token when using JWT tokens.\n\nDo not use a storage option that stores values accessible outside\nyour application (like localStorage on web environments) since you may\nbe exposing your auth token to malicious actors.\n\n** By default auth uses cookies so no need to set this unless you want to specifically use JWT tokens **"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
							"line": 35,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L35"
						}
					],
					"type": {
						"type": "reference",
						"target": 188,
						"name": "ISecureStorage",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [185, 186, 187]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
					"line": 13,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L13"
				}
			]
		},
		{
			"id": 9,
			"name": "ThirdwebProviderCoreProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible props for the ThirdwebProvider."
					}
				]
			},
			"children": [
				{
					"id": 18,
					"name": "activeChain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The activeChain prop determines which chain you want your app to be operating on.\n\nThere are 1000+ chains available in the "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/chains`"
							},
							{
								"kind": "text",
								"text": " package. Import the chain you want and pass it to the "
							},
							{
								"kind": "code",
								"text": "`activeChain`"
							},
							{
								"kind": "text",
								"text": " prop.\n\nYou can override the imported object or pass a custom chain object with required properties."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 103,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L103"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 19,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 20,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "chainId"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "slug"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							}
						]
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.activeChain"
					}
				},
				{
					"id": 27,
					"name": "authConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configuration object for setting up [Auth](https://portal.thirdweb.com/auth); allowing users to sign in with their wallet."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 94,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L94"
						}
					],
					"type": {
						"type": "reference",
						"target": 184,
						"name": "ThirdwebAuthConfig",
						"package": "@thirdweb-dev/react-core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.authConfig"
					}
				},
				{
					"id": 12,
					"name": "autoConnect",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether or not to attempt auto-connect to a wallet."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/thirdweb-provider.tsx",
							"line": 55,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-provider.tsx#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 16,
					"name": "autoConnectTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timeout for auto-connecting wallet in milliseconds\n\nIf wallet fails to connect in this time, it will stop trying to connect and user will have to manually connect"
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n15000\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/thirdweb-provider.tsx",
							"line": 76,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-provider.tsx#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 15,
					"name": "autoSwitch",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether or not to automatically switch to wallet's network to active chain"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/thirdweb-provider.tsx",
							"line": 67,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-provider.tsx#L67"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 21,
					"name": "clientId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The clientId prop is required to use the thirdweb infrastructure services with the SDK.\n\nYou can get a client ID by creating an API key on [thirdweb dashboard](https://thirdweb.com/dashboard/settings/api-keys)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 119,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L119"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.clientId"
					}
				},
				{
					"id": 11,
					"name": "dAppMeta",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata to pass to wallet connect and walletlink wallet connect. (Used to show *which* dApp is being connected to in mobile wallets that support it)\nDefaults to just the name being passed as "
							},
							{
								"kind": "code",
								"text": "`thirdweb powered dApp`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/thirdweb-provider.tsx",
							"line": 50,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-provider.tsx#L50"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../wallets/src/core/types/dAppMeta.ts",
							"qualifiedName": "DAppMetaData"
						},
						"name": "DAppMetaData",
						"package": "@thirdweb-dev/wallets"
					}
				},
				{
					"id": 22,
					"name": "queryClient",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If you are using React Query and have your own "
							},
							{
								"kind": "code",
								"text": "`QueryClient`"
							},
							{
								"kind": "text",
								"text": ", you can pass it as the queryClient prop to use that instead of the SDK's default client."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/query-client.tsx",
							"line": 9,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/query-client.tsx#L9"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/queryClient.ts",
							"qualifiedName": "QueryClient"
						},
						"name": "QueryClient",
						"package": "@tanstack/query-core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.queryClient"
					}
				},
				{
					"id": 24,
					"name": "sdkOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thirdweb SDK Options to pass to the thirdweb SDK which includes Gas settings, gasless transactions, RPC configuration, and more.\n\nThis Overrides any of the default values for the SDK. If not provided, it uses sensible defaults."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L47"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 25,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/schema/sdk-options.d.ts",
													"line": 189,
													"character": 3
												}
											]
										}
									}
								]
							},
							{
								"type": "literal",
								"value": "chains"
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.sdkOptions"
					}
				},
				{
					"id": 28,
					"name": "secretKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "secretKey for thirdweb services\nThis is only required if server side rendering is being used."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 125,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L125"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.secretKey"
					}
				},
				{
					"id": 26,
					"name": "storageInterface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Override the default [Storage](https://portal.thirdweb.com/storage) interface used by the SDK.\n\nIt allows you to create an instance of "
							},
							{
								"kind": "code",
								"text": "`ThirdwebStorage`"
							},
							{
								"kind": "text",
								"text": " with your own customized config, and pass it to the SDK.\n\n*This requires the "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/storage`"
							},
							{
								"kind": "text",
								"text": " package to be installed.*"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebSDKProvider } from \"@thirdweb-dev/react\";\nimport {\n  ThirdwebStorage,\n  StorageDownloader,\n  IpfsUploader,\n} from \"@thirdweb-dev/storage\";\n\n// Configure a custom ThirdwebStorage instance\nconst gatewayUrls = {\n  \"ipfs://\": [\n    \"https://gateway.ipfscdn.io/ipfs/\",\n    \"https://cloudflare-ipfs.com/ipfs/\",\n    \"https://ipfs.io/ipfs/\",\n  ],\n};\nconst downloader = new StorageDownloader();\nconst uploader = new IpfsUploader();\nconst storage = new ThirdwebStorage({ uploader, downloader, gatewayUrls });\n\n// Provide the custom storage instance to the SDK\nfunction MyApp() {\n  return (\n    <ThirdwebSDKProvider\n      storageInterface={storage}\n    >\n      <YourApp />\n    </ThirdwebSDKProvider>\n  );\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../storage/src/types/index.ts",
							"qualifiedName": "IThirdwebStorage"
						},
						"name": "IThirdwebStorage",
						"package": "@thirdweb-dev/storage"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.storageInterface"
					}
				},
				{
					"id": 23,
					"name": "supportedChains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of chains supported by your app.\nThere are 1000+ chains available in the "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/chains`"
							},
							{
								"kind": "text",
								"text": " package. You can import the chain you want and pass it to the "
							},
							{
								"kind": "code",
								"text": "`supportedChains`"
							},
							{
								"kind": "text",
								"text": " prop in an array.\n\nIf not provided, it will default to the default supported chains supported by the thirdweb SDK."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nimport { Ethereum, Polygon } from \"@thirdweb-dev/chains\";\n\nfunction Example() {\n return (\n   <ThirdwebSDKProvider supportedChains={[ Ethereum, Polygon ]} activeChain={Ethereum}>\n      <App />\n   </ThirdwebSDKProvider>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TChains",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Omit.supportedChains"
					}
				},
				{
					"id": 10,
					"name": "supportedWallets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of wallets that the dApp supports\nIf not provided, will default to Metamask (injected), Coinbase wallet and Device wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can Import the wallets you want to support from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/wallets`"
									},
									{
										"kind": "text",
										"text": " and pass them to "
									},
									{
										"kind": "code",
										"text": "`supportedWallets`"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx title=\"App.jsx\"\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/thirdweb-provider.tsx",
							"line": 44,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-provider.tsx#L44"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 106,
							"name": "WalletConfig",
							"package": "@thirdweb-dev/react-core"
						}
					}
				},
				{
					"id": 13,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/thirdweb-provider.tsx",
							"line": 57,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-provider.tsx#L57"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "light"
							},
							{
								"type": "literal",
								"value": "dark"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [18, 27, 12, 16, 15, 21, 11, 22, 24, 28, 26, 23, 10, 13]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/src/core/providers/thirdweb-provider.tsx",
					"line": 23,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-provider.tsx#L23"
				}
			],
			"typeParameters": [
				{
					"id": 29,
					"name": "TChains",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 986,
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "TChains",
									"refersToTypeParameter": true
								}
							],
							"name": "ThirdwebSDKProviderProps",
							"package": "@thirdweb-dev/react-core"
						},
						{
							"type": "literal",
							"value": "signer"
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 986,
			"name": "ThirdwebSDKProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 993,
					"name": "activeChain",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The activeChain prop determines which chain you want your app to be operating on.\n\nThere are 1000+ chains available in the "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/chains`"
							},
							{
								"kind": "text",
								"text": " package. Import the chain you want and pass it to the "
							},
							{
								"kind": "code",
								"text": "`activeChain`"
							},
							{
								"kind": "text",
								"text": " prop.\n\nYou can override the imported object or pass a custom chain object with required properties."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 103,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L103"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 994,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "intersection",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 995,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {}
										}
									}
								]
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "chainId"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							},
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "slug"
								},
								"objectType": {
									"type": "indexedAccess",
									"indexType": {
										"type": "intrinsic",
										"name": "number"
									},
									"objectType": {
										"type": "reference",
										"target": -1,
										"name": "TChains",
										"refersToTypeParameter": true
									}
								}
							}
						]
					}
				},
				{
					"id": 992,
					"name": "authConfig",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The configuration object for setting up [Auth](https://portal.thirdweb.com/auth); allowing users to sign in with their wallet."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 94,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L94"
						}
					],
					"type": {
						"type": "reference",
						"target": 184,
						"name": "ThirdwebAuthConfig",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 996,
					"name": "clientId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The clientId prop is required to use the thirdweb infrastructure services with the SDK.\n\nYou can get a client ID by creating an API key on [thirdweb dashboard](https://thirdweb.com/dashboard/settings/api-keys)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 119,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L119"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 998,
					"name": "queryClient",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If you are using React Query and have your own "
							},
							{
								"kind": "code",
								"text": "`QueryClient`"
							},
							{
								"kind": "text",
								"text": ", you can pass it as the queryClient prop to use that instead of the SDK's default client."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/query-client.tsx",
							"line": 9,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/query-client.tsx#L9"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/queryClient.ts",
							"qualifiedName": "QueryClient"
						},
						"name": "QueryClient",
						"package": "@tanstack/query-core"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "QueryClientProviderProps.queryClient"
					}
				},
				{
					"id": 989,
					"name": "sdkOptions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thirdweb SDK Options to pass to the thirdweb SDK which includes Gas settings, gasless transactions, RPC configuration, and more.\n\nThis Overrides any of the default values for the SDK. If not provided, it uses sensible defaults."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L47"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 990,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/schema/sdk-options.d.ts",
													"line": 189,
													"character": 3
												}
											]
										}
									}
								]
							},
							{
								"type": "literal",
								"value": "chains"
							}
						],
						"name": "Omit",
						"package": "typescript"
					}
				},
				{
					"id": 997,
					"name": "secretKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "secretKey for thirdweb services\nThis is only required if server side rendering is being used."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 125,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L125"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 988,
					"name": "signer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A signer is an abstraction of an Ethereum Account, which can be used to sign messages and initiate transactions.\n\nSince the ThirdwebSDKProvider is used when you want to provide your own wallet connection logic, you will need to provide a signer prop to inform the SDK of the wallet you want to use to sign transactions.\n\nLibraries such as ethers.js, web3.js, wagmi, etc. all provide ways to get a signer.\n\nTo use this signer with the SDK, pass it to the "
							},
							{
								"kind": "code",
								"text": "`signer`"
							},
							{
								"kind": "text",
								"text": " prop. If the signer is connected, the SDK will use this wallet to sign transactions for all write operations on the blockchain."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L40"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
							"qualifiedName": "Signer"
						},
						"name": "Signer",
						"package": "@ethersproject/abstract-signer"
					}
				},
				{
					"id": 991,
					"name": "storageInterface",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Override the default [Storage](https://portal.thirdweb.com/storage) interface used by the SDK.\n\nIt allows you to create an instance of "
							},
							{
								"kind": "code",
								"text": "`ThirdwebStorage`"
							},
							{
								"kind": "text",
								"text": " with your own customized config, and pass it to the SDK.\n\n*This requires the "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/storage`"
							},
							{
								"kind": "text",
								"text": " package to be installed.*"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebSDKProvider } from \"@thirdweb-dev/react\";\nimport {\n  ThirdwebStorage,\n  StorageDownloader,\n  IpfsUploader,\n} from \"@thirdweb-dev/storage\";\n\n// Configure a custom ThirdwebStorage instance\nconst gatewayUrls = {\n  \"ipfs://\": [\n    \"https://gateway.ipfscdn.io/ipfs/\",\n    \"https://cloudflare-ipfs.com/ipfs/\",\n    \"https://ipfs.io/ipfs/\",\n  ],\n};\nconst downloader = new StorageDownloader();\nconst uploader = new IpfsUploader();\nconst storage = new ThirdwebStorage({ uploader, downloader, gatewayUrls });\n\n// Provide the custom storage instance to the SDK\nfunction MyApp() {\n  return (\n    <ThirdwebSDKProvider\n      storageInterface={storage}\n    >\n      <YourApp />\n    </ThirdwebSDKProvider>\n  );\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 89,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L89"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../storage/src/types/index.ts",
							"qualifiedName": "IThirdwebStorage"
						},
						"name": "IThirdwebStorage",
						"package": "@thirdweb-dev/storage"
					}
				},
				{
					"id": 987,
					"name": "supportedChains",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of chains supported by your app.\nThere are 1000+ chains available in the "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/chains`"
							},
							{
								"kind": "text",
								"text": " package. You can import the chain you want and pass it to the "
							},
							{
								"kind": "code",
								"text": "`supportedChains`"
							},
							{
								"kind": "text",
								"text": " prop in an array.\n\nIf not provided, it will default to the default supported chains supported by the thirdweb SDK."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nimport { Ethereum, Polygon } from \"@thirdweb-dev/chains\";\n\nfunction Example() {\n return (\n   <ThirdwebSDKProvider supportedChains={[ Ethereum, Polygon ]} activeChain={Ethereum}>\n      <App />\n   </ThirdwebSDKProvider>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/types.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L29"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TChains",
						"refersToTypeParameter": true
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [993, 992, 996, 998, 989, 997, 988, 991, 987]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/providers/types.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/types.ts#L8"
				}
			],
			"typeParameters": [
				{
					"id": 999,
					"name": "TChains",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "src/core/providers/query-client.tsx",
						"qualifiedName": "QueryClientProviderProps"
					},
					"name": "QueryClientProviderProps",
					"package": "@thirdweb-dev/react-core"
				}
			]
		},
		{
			"id": 896,
			"name": "UserWithData",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 898,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/auth/dist/declarations/src/core/schema/common.d.ts",
							"line": 12,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "User.address"
					}
				},
				{
					"id": 897,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
							"line": 12,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L12"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TData",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 899,
					"name": "session",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/auth/dist/declarations/src/core/schema/common.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TContext",
						"refersToTypeParameter": true
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "User.session"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [898, 897, 899]
				}
			],
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L8"
				}
			],
			"typeParameters": [
				{
					"id": 900,
					"name": "TData",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					}
				},
				{
					"id": 901,
					"name": "TContext",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../auth/src/core/schema/common.ts",
							"qualifiedName": "Json"
						},
						"name": "Json",
						"package": "@thirdweb-dev/auth"
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../auth/src/core/schema/common.ts",
						"qualifiedName": "User"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": -1,
							"name": "TContext",
							"refersToTypeParameter": true
						}
					],
					"name": "User",
					"package": "@thirdweb-dev/auth"
				}
			]
		},
		{
			"id": 1098,
			"name": "AcceptDirectOffer",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 231,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L231"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1099,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1101,
							"name": "addressOfOfferor",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 233,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L233"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1100,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 232,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L232"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1101, 1100]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 231,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L231"
						}
					]
				}
			}
		},
		{
			"id": 1051,
			"name": "AirdropNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params to pass to "
					},
					{
						"kind": "code",
						"text": "`useTransferBatchNFT`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 124,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L124"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1052,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1054,
							"name": "addresses",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 126,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L126"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/airdrop/airdrop.ts",
									"qualifiedName": "AirdropInput"
								},
								"name": "AirdropInput",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1053,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 125,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L125"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1054, 1053]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 124,
							"character": 31,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L124"
						}
					]
				}
			}
		},
		{
			"id": 1067,
			"name": "BurnNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useBurnNFT",
						"target": 750
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 162,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L162"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1068,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1070,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 162,
									"character": 53,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L162"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1069,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 162,
									"character": 30,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L162"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1070, 1069]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 162,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L162"
						}
					]
				}
			}
		},
		{
			"id": 1105,
			"name": "BuyNowParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 239,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L239"
				}
			],
			"typeParameters": [
				{
					"id": 1114,
					"name": "TListingType",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
							"qualifiedName": "ListingType"
						},
						"name": "ListingType",
						"package": "@thirdweb-dev/sdk"
					}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "TListingType",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
						"qualifiedName": "ListingType.Direct"
					},
					"name": "ListingType.Direct",
					"package": "@thirdweb-dev/sdk"
				},
				"trueType": {
					"type": "reflection",
					"declaration": {
						"id": 1106,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 1109,
								"name": "buyAmount",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/src/evm/types.ts",
										"line": 244,
										"character": 8,
										"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L244"
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
										"qualifiedName": "BigNumberish"
									},
									"name": "BigNumberish",
									"package": "@ethersproject/bignumber"
								}
							},
							{
								"id": 1110,
								"name": "buyForWallet",
								"variant": "declaration",
								"kind": 1024,
								"flags": {
									"isOptional": true
								},
								"sources": [
									{
										"fileName": "packages/react-core/src/evm/types.ts",
										"line": 245,
										"character": 8,
										"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L245"
									}
								],
								"type": {
									"type": "reference",
									"target": 1035,
									"name": "WalletAddress",
									"package": "@thirdweb-dev/react-core"
								}
							},
							{
								"id": 1107,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/src/evm/types.ts",
										"line": 242,
										"character": 8,
										"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L242"
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
										"qualifiedName": "BigNumberish"
									},
									"name": "BigNumberish",
									"package": "@ethersproject/bignumber"
								}
							},
							{
								"id": 1108,
								"name": "type",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/src/evm/types.ts",
										"line": 243,
										"character": 8,
										"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L243"
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
										"qualifiedName": "ListingType.Direct"
									},
									"name": "ListingType.Direct",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [1109, 1110, 1107, 1108]
							}
						],
						"sources": [
							{
								"fileName": "packages/react-core/src/evm/types.ts",
								"line": 241,
								"character": 6,
								"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L241"
							}
						]
					}
				},
				"falseType": {
					"type": "reflection",
					"declaration": {
						"id": 1111,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 1112,
								"name": "id",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/src/evm/types.ts",
										"line": 248,
										"character": 8,
										"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L248"
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
										"qualifiedName": "BigNumberish"
									},
									"name": "BigNumberish",
									"package": "@ethersproject/bignumber"
								}
							},
							{
								"id": 1113,
								"name": "type",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "packages/react-core/src/evm/types.ts",
										"line": 249,
										"character": 8,
										"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L249"
									}
								],
								"type": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/enums/marketplace/ListingType.ts",
										"qualifiedName": "ListingType.Auction"
									},
									"name": "ListingType.Auction",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [1112, 1113]
							}
						],
						"sources": [
							{
								"fileName": "packages/react-core/src/evm/types.ts",
								"line": 247,
								"character": 6,
								"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L247"
							}
						]
					}
				}
			}
		},
		{
			"id": 1024,
			"name": "Chain",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 43,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L43"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1025,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1030,
							"name": "blockExplorers",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L48"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reflection",
									"declaration": {
										"id": 1031,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"children": [
											{
												"id": 1032,
												"name": "name",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/src/evm/types.ts",
														"line": 49,
														"character": 4,
														"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L49"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											},
											{
												"id": 1033,
												"name": "url",
												"variant": "declaration",
												"kind": 1024,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/react-core/src/evm/types.ts",
														"line": 50,
														"character": 4,
														"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L50"
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"groups": [
											{
												"title": "Properties",
												"children": [1032, 1033]
											}
										],
										"sources": [
											{
												"fileName": "packages/react-core/src/evm/types.ts",
												"line": 48,
												"character": 19,
												"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L48"
											}
										]
									}
								}
							}
						},
						{
							"id": 1026,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L44"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 1027,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L45"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "chainName"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/evm/types.ts",
										"qualifiedName": "AddEthereumChainParameter"
									},
									"name": "AddEthereumChainParameter",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 1028,
							"name": "nativeCurrency",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L46"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "nativeCurrency"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/evm/types.ts",
										"qualifiedName": "AddEthereumChainParameter"
									},
									"name": "AddEthereumChainParameter",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 1029,
							"name": "rpcUrls",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L47"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "rpcUrls"
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/evm/types.ts",
										"qualifiedName": "AddEthereumChainParameter"
									},
									"name": "AddEthereumChainParameter",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 1034,
							"name": "testnet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1030, 1026, 1027, 1028, 1029, 1034]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 43,
							"character": 20,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L43"
						}
					]
				}
			}
		},
		{
			"id": 215,
			"name": "ClaimIneligibilityParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The options to be passed as the second parameter to the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useClaimIneligibilityReasons",
						"target": 240,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " hook."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 34,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L34"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 216,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 218,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
									"line": 38,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L38"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 217,
							"name": "walletAddress",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
									"line": 36,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L36"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [218, 217]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 34,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L34"
						}
					]
				}
			}
		},
		{
			"id": 1082,
			"name": "ClaimNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useClaimNFT",
						"target": 422
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 205,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L205"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1083,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1086,
							"name": "options",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 208,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L208"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
									"qualifiedName": "ClaimOptions"
								},
								"name": "ClaimOptions",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1085,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 207,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L207"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 1084,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 206,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L206"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1087,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "tokenId is only used for ERC1155 tokens"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 212,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L212"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1086, 1085, 1084, 1087]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 205,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L205"
						}
					]
				}
			}
		},
		{
			"id": 1088,
			"name": "ClaimNFTReturnType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return type of the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useClaimNFT",
						"target": 422
					},
					{
						"kind": "text",
						"text": " hook."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 219,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L219"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Awaited"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "claimTo"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
												"qualifiedName": "Erc721"
											},
											"name": "Erc721",
											"package": "@thirdweb-dev/sdk"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						],
						"name": "Awaited",
						"package": "typescript"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Awaited"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "claimTo"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
												"qualifiedName": "Erc1155"
											},
											"name": "Erc1155",
											"package": "@thirdweb-dev/sdk"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						],
						"name": "Awaited",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 1115,
			"name": "ClaimTokenParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 260,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L260"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1116,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1118,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 262,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L262"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1119,
							"name": "checkERC20Allowance",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 263,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L263"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 1117,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 261,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L261"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1118, 1119, 1117]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 260,
							"character": 31,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L260"
						}
					]
				}
			}
		},
		{
			"id": 124,
			"name": "ConnectUIProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/types/wallet.ts",
					"line": 57,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L57"
				}
			],
			"typeParameters": [
				{
					"id": 152,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 125,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 129,
							"name": "connected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 67,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L67"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 130,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 67,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L67"
										}
									],
									"signatures": [
										{
											"id": 131,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "when the wallet is connected, call this function to indicate that the wallet is connected and it is safe to close the Modal"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 136,
							"name": "goBack",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 82,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L82"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 137,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 82,
											"character": 10,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L82"
										}
									],
									"signatures": [
										{
											"id": 138,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "go back to the wallet selector screen in connect wallet modal"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 126,
							"name": "hide",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 62,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L62"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 127,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 62,
											"character": 8,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L62"
										}
									],
									"signatures": [
										{
											"id": 128,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "temporarily hide the ConnectModal\nThis is useful when you want to open another modal and do not want to show the ConnectModal in the background"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 132,
							"name": "isOpen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "indicates whether the connect wallet modal is open or not"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 72,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L72"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 147,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size of the modal\n\nThis is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on React Native"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 152,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L152"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 148,
							"name": "onLocallyConnected",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 159,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L159"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 149,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 159,
											"character": 23,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L159"
										}
									],
									"signatures": [
										{
											"id": 150,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Called when the wallet is connected but it's\npart of another wallet's connection flow."
													}
												]
											},
											"parameters": [
												{
													"id": 151,
													"name": "walleInstance",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "the instance of the connected wallet"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": 171,
														"name": "WalletInstance",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 141,
							"name": "selectionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "selectionData passed from "
									},
									{
										"kind": "code",
										"text": "`selectUI`"
									},
									{
										"kind": "text",
										"text": "'s "
									},
									{
										"kind": "code",
										"text": "`onSelect`"
									},
									{
										"kind": "text",
										"text": " function"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 134,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L134"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 142,
							"name": "setSelectionData",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 140,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L140"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 143,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 140,
											"character": 20,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L140"
										}
									],
									"signatures": [
										{
											"id": 144,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "set selectionData"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													}
												]
											},
											"parameters": [
												{
													"id": 145,
													"name": "data",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 133,
							"name": "show",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L77"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 134,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 77,
											"character": 8,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L77"
										}
									],
									"signatures": [
										{
											"id": 135,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "show the hidden connect wallet modal again"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 146,
							"name": "supportedWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List of all supported wallets including your wallet."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 145,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L145"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 106,
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 139,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "theme of the connect wallet modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 87,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L87"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									}
								]
							}
						},
						{
							"id": 140,
							"name": "walletConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`WalletConfig`"
									},
									{
										"kind": "text",
										"text": " object of your wallet\n\nyou can use this to connect to your wallet\n\n### 1. Using "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook\n"
									},
									{
										"kind": "code",
										"text": "```ts\n const connect = useConnect();\n\n // call this function to connect to your wallet\n async function handleConnect() {\n   await connect(walletConfig, options);\n }\n\n```"
									},
									{
										"kind": "text",
										"text": "\n\nOR\n\n### 2. Manually creating wallet instance and connecting\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst createWalletInstance = useCreateWalletInstance();\nconst setConnectedWallet = useSetConnectedWallet();\nconst setConnectionStatus = useSetConnectionStatus();\n\n// call this function to connect to your wallet\nasync function handleConnect() {\n  // create instance\n  const walletInstance = createWalletInstance(walletConfig);\n  // connect wallet\n  setConnectionStatus('connecting);\n  try {\n    await walletInstance.connect(options);\n    // set connected wallet\n    setConnectedWallet(walletInstance);\n  } catch {\n    setConnectionStatus('disconnected');\n }\n}\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 129,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L129"
								}
							],
							"type": {
								"type": "reference",
								"target": 106,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "I",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								129, 136, 126, 132, 147, 148, 141, 142, 133, 146, 139, 140
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/core/types/wallet.ts",
							"line": 57,
							"character": 72,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L57"
						}
					]
				}
			}
		},
		{
			"id": 1073,
			"name": "DelayedRevealLazyMintInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useDelayedRevealLazyMint",
						"target": 434
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 186,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L186"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1074,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1076,
							"name": "metadatas",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L188"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFTMetadataInput"
									},
									"name": "NFTMetadataInput",
									"package": "@thirdweb-dev/sdk"
								}
							}
						},
						{
							"id": 1077,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 189,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1075,
							"name": "placeholder",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 187,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L187"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/core/schema/nft.ts",
									"qualifiedName": "NFTMetadataInput"
								},
								"name": "NFTMetadataInput",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1076, 1077, 1075]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 186,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L186"
						}
					]
				}
			}
		},
		{
			"id": 1071,
			"name": "DropContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible DROP contract types."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 169,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L169"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
							"qualifiedName": "NFTDrop"
						},
						"name": "NFTDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/edition-drop.ts",
							"qualifiedName": "EditionDrop"
						},
						"name": "EditionDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
							"qualifiedName": "SignatureDrop"
						},
						"name": "SignatureDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token-drop.ts",
							"qualifiedName": "TokenDrop"
						},
						"name": "TokenDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 1045,
			"name": "Erc721OrErc1155",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Possible NFT contract types."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 110,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L110"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
							"qualifiedName": "Erc721"
						},
						"name": "Erc721",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
							"qualifiedName": "Erc1155"
						},
						"name": "Erc1155",
						"package": "@thirdweb-dev/sdk"
					}
				]
			}
		},
		{
			"id": 1102,
			"name": "ExecuteAuctionSale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 235,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L235"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1103,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1104,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 236,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L236"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1104]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 235,
							"character": 33,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L235"
						}
					]
				}
			}
		},
		{
			"id": 172,
			"name": "ExtraCoreWalletOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/types/wallet.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 173,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 174,
							"name": "chain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 6,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L6"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [174]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/core/types/wallet.ts",
							"line": 5,
							"character": 37,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L5"
						}
					]
				}
			}
		},
		{
			"id": 1089,
			"name": "MakeBidParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 225,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L225"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1090,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1092,
							"name": "bid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 225,
									"character": 55,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L225"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Price"
								},
								"name": "Price",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1091,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 225,
									"character": 30,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L225"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1092, 1091]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 225,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L225"
						}
					]
				}
			}
		},
		{
			"id": 1093,
			"name": "MakeOfferParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 226,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L226"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1094,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1095,
							"name": "listingId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 227,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L227"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 1096,
							"name": "pricePerToken",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 228,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L228"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Price"
								},
								"name": "Price",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1097,
							"name": "quantity",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 229,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L229"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1095, 1096, 1097]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 226,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L226"
						}
					]
				}
			}
		},
		{
			"id": 1060,
			"name": "MintNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useMintNFT",
						"target": 730
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 142,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L142"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1061,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1062,
							"name": "metadata",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 143,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L143"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/core/schema/nft.ts",
									"qualifiedName": "NFTMetadataOrUri"
								},
								"name": "NFTMetadataOrUri",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1064,
							"name": "supply",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 145,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L145"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1063,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 144,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L144"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1062, 1064, 1063]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 142,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L142"
						}
					]
				}
			}
		},
		{
			"id": 1065,
			"name": "MintNFTReturnType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The return type of the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useMintNFT",
						"target": 730
					},
					{
						"kind": "text",
						"text": " hook."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 152,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L152"
				}
			],
			"typeParameters": [
				{
					"id": 1066,
					"name": "TContract",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "conditional",
				"checkType": {
					"type": "reference",
					"target": -1,
					"name": "TContract",
					"refersToTypeParameter": true
				},
				"extendsType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../sdk/src/evm/core/classes/erc-721.ts",
						"qualifiedName": "Erc721"
					},
					"name": "Erc721",
					"package": "@thirdweb-dev/sdk"
				},
				"trueType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Awaited"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
								"qualifiedName": "ReturnType"
							},
							"typeArguments": [
								{
									"type": "indexedAccess",
									"indexType": {
										"type": "literal",
										"value": "to"
									},
									"objectType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/core/classes/erc-721-mintable.ts",
											"qualifiedName": "Erc721Mintable"
										},
										"name": "Erc721Mintable",
										"package": "@thirdweb-dev/sdk"
									}
								}
							],
							"name": "ReturnType",
							"package": "typescript"
						}
					],
					"name": "Awaited",
					"package": "typescript"
				},
				"falseType": {
					"type": "conditional",
					"checkType": {
						"type": "reference",
						"target": -1,
						"name": "TContract",
						"refersToTypeParameter": true
					},
					"extendsType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
							"qualifiedName": "Erc1155"
						},
						"name": "Erc1155",
						"package": "@thirdweb-dev/sdk"
					},
					"trueType": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Awaited"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "ReturnType"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "literal",
											"value": "to"
										},
										"objectType": {
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/core/classes/erc-1155-mintable.ts",
												"qualifiedName": "Erc1155Mintable"
											},
											"name": "Erc1155Mintable",
											"package": "@thirdweb-dev/sdk"
										}
									}
								],
								"name": "ReturnType",
								"package": "typescript"
							}
						],
						"name": "Awaited",
						"package": "typescript"
					},
					"falseType": {
						"type": "intrinsic",
						"name": "never"
					}
				}
			}
		},
		{
			"id": 1055,
			"name": "MintNFTSupplyParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params to pass to "
					},
					{
						"kind": "code",
						"text": "`useMintNFTSupply`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 132,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L132"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1056,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1058,
							"name": "additionalSupply",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 134,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L134"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1059,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 135,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L135"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1057,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 133,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L133"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1058, 1059, 1057]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 132,
							"character": 34,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L132"
						}
					]
				}
			}
		},
		{
			"id": 1043,
			"name": "NFTContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible NFT contract types."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 91,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L91"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-collection.ts",
							"qualifiedName": "NFTCollection"
						},
						"name": "NFTCollection",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/edition.ts",
							"qualifiedName": "Edition"
						},
						"name": "Edition",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/pack.ts",
							"qualifiedName": "Pack"
						},
						"name": "Pack",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/multiwrap.ts",
							"qualifiedName": "Multiwrap"
						},
						"name": "Multiwrap",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Exclude"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1071,
								"name": "DropContract",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "literal",
								"value": "TokenDrop"
							}
						],
						"name": "Exclude",
						"package": "typescript"
					}
				]
			}
		},
		{
			"id": 1078,
			"name": "RevealLazyMintInput",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useRevealLazyMint",
						"target": 442
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 196,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L196"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1079,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1080,
							"name": "batchId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 197,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L197"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 1081,
							"name": "password",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 198,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L198"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1080, 1081]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 196,
							"character": 34,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L196"
						}
					]
				}
			}
		},
		{
			"id": 1072,
			"name": "RevealableContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible revealable contract types."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 180,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L180"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
							"qualifiedName": "NFTDrop"
						},
						"name": "NFTDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
							"qualifiedName": "SignatureDrop"
						},
						"name": "SignatureDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 153,
			"name": "SelectUIProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/types/wallet.ts",
					"line": 162,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L162"
				}
			],
			"typeParameters": [
				{
					"id": 163,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 154,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 162,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Size of the modal\n\nThis is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on React Native"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 195,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L195"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 155,
							"name": "onSelect",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 168,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L168"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 156,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 168,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L168"
										}
									],
									"signatures": [
										{
											"id": 157,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Call this function to \"select\" your wallet and render the screen for connecting the wallet"
													}
												],
												"blockTags": [
													{
														"tag": "@returns",
														"content": []
													}
												]
											},
											"parameters": [
												{
													"id": 158,
													"name": "selectionData",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "selectionData to be passed to "
															},
															{
																"kind": "code",
																"text": "`connectUI`"
															},
															{
																"kind": "text",
																"text": "'s "
															},
															{
																"kind": "code",
																"text": "`selectionData`"
															},
															{
																"kind": "text",
																"text": " prop"
															}
														]
													},
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 160,
							"name": "supportedWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "List of all supported wallets including your wallet.\n\nYou can use this to conditionally render UI based on how many wallets are supported.\nFor example: You can render a larger UI if only one wallet (your wallet) is supported."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 183,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L183"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 106,
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 161,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "theme of the connect wallet modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L188"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									}
								]
							}
						},
						{
							"id": 159,
							"name": "walletConfig",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`WalletConfig`"
									},
									{
										"kind": "text",
										"text": " object of your wallet\n\nyou can use this get metadata of your wallet by doing "
									},
									{
										"kind": "code",
										"text": "`walletConfig.meta`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 175,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L175"
								}
							],
							"type": {
								"type": "reference",
								"target": 106,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "I",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [162, 155, 160, 161, 159]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/core/types/wallet.ts",
							"line": 162,
							"character": 71,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L162"
						}
					]
				}
			}
		},
		{
			"id": 219,
			"name": "SetClaimConditionsParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params for the "
					},
					{
						"kind": "inline-tag",
						"tag": "@link",
						"text": "useSetClaimConditions",
						"target": 250,
						"tsLinkText": ""
					},
					{
						"kind": "text",
						"text": " hook mutation."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 45,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L45"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 220,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 221,
							"name": "phases",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
									"line": 46,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L46"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
										"qualifiedName": "ClaimConditionInput"
									},
									"name": "ClaimConditionInput",
									"package": "@thirdweb-dev/sdk"
								}
							}
						},
						{
							"id": 222,
							"name": "reset",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
									"line": 47,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L47"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [221, 222]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 45,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L45"
						}
					]
				}
			}
		},
		{
			"id": 1040,
			"name": "TokenBurnParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters to pass to the burn function."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 78,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L78"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1041,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1042,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 79,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L79"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1042]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 78,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L78"
						}
					]
				}
			}
		},
		{
			"id": 1044,
			"name": "TokenContract",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible Token contract types."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 105,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L105"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token-drop.ts",
							"qualifiedName": "TokenDrop"
						},
						"name": "TokenDrop",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token.ts",
							"qualifiedName": "Token"
						},
						"name": "Token",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					},
					{
						"type": "literal",
						"value": null
					}
				]
			}
		},
		{
			"id": 1036,
			"name": "TokenParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters to pass to the mint and transfer functions."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 69,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L69"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1037,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1039,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 71,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L71"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1038,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 70,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L70"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1039, 1038]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 69,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L69"
						}
					]
				}
			}
		},
		{
			"id": 1046,
			"name": "TransferNFTParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The params to pass to "
					},
					{
						"kind": "code",
						"text": "`useTransferNFT`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 115,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L115"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1047,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 1050,
							"name": "amount",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 118,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L118"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/currency.ts",
									"qualifiedName": "Amount"
								},
								"name": "Amount",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 1048,
							"name": "to",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 116,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L116"
								}
							],
							"type": {
								"type": "reference",
								"target": 1035,
								"name": "WalletAddress",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 1049,
							"name": "tokenId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/types.ts",
									"line": 117,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L117"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [1050, 1048, 1049]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/types.ts",
							"line": 115,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L115"
						}
					]
				}
			}
		},
		{
			"id": 398,
			"name": "UseContractResult",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 147,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L147"
				}
			],
			"typeParameters": [
				{
					"id": 401,
					"name": "TContract",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/index.ts",
							"qualifiedName": "ValidContractInstance"
						},
						"name": "ValidContractInstance",
						"package": "@thirdweb-dev/sdk"
					},
					"default": {
						"type": "reference",
						"target": {
							"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
							"qualifiedName": "SmartContract"
						},
						"name": "SmartContract",
						"package": "@thirdweb-dev/sdk"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 399,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 400,
									"name": "contract",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
											"line": 150,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L150"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "TContract",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [400]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
									"line": 149,
									"character": 44,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L149"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1139,
			"name": "UseWatchTransactionsParams",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/useTransactions.ts",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useTransactions.ts#L8"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Partial"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/functions/watchTransactions.ts",
											"qualifiedName": "WatchTransactionsParams"
										},
										"name": "WatchTransactionsParams",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "literal",
										"value": "onTransactions"
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						],
						"name": "Partial",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1140,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 1141,
									"name": "limit",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/useTransactions.ts",
											"line": 10,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useTransactions.ts#L10"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [1141]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/useTransactions.ts",
									"line": 10,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useTransactions.ts#L10"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1035,
			"name": "WalletAddress",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A wallet address."
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/types.ts",
					"line": 58,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/types.ts#L58"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../sdk/src/evm/schema/shared/AddressOrEnsSchema.ts",
					"qualifiedName": "AddressOrEns"
				},
				"name": "AddressOrEns",
				"package": "@thirdweb-dev/sdk"
			}
		},
		{
			"id": 164,
			"name": "WalletClass",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/types/wallet.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L13"
				}
			],
			"typeParameters": [
				{
					"id": 170,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 165,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 166,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 167,
							"name": "meta",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L16"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "meta"
								},
								"objectType": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../wallets/src/evm/wallets/base.ts",
											"qualifiedName": "AbstractClientWallet"
										},
										"name": "AbstractClientWallet",
										"package": "@thirdweb-dev/wallets"
									}
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [166, 167]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/core/types/wallet.ts",
							"line": 13,
							"character": 69,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L13"
						}
					],
					"signatures": [
						{
							"id": 168,
							"name": "new WalletClass",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 15,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L15"
								}
							],
							"parameters": [
								{
									"id": 169,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 175,
										"name": "WalletOptions",
										"package": "@thirdweb-dev/react-core"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": -1,
								"name": "I",
								"refersToTypeParameter": true
							}
						}
					]
				}
			}
		},
		{
			"id": 106,
			"name": "WalletConfig",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/types/wallet.ts",
					"line": 19,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L19"
				}
			],
			"typeParameters": [
				{
					"id": 123,
					"name": "I",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					},
					"default": {
						"type": "reference",
						"target": 171,
						"name": "WalletInstance",
						"package": "@thirdweb-dev/react-core"
					}
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 107,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 108,
							"name": "category",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L20"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "socialLogin"
									},
									{
										"type": "literal",
										"value": "walletLogin"
									}
								]
							}
						},
						{
							"id": 115,
							"name": "connectUI",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UI for connecting wallet"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L27"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FC"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 124,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										],
										"name": "ConnectUIProps",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "React.FC",
								"package": "@types/react"
							}
						},
						{
							"id": 111,
							"name": "create",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L23"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 112,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 23,
											"character": 10,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L23"
										}
									],
									"signatures": [
										{
											"id": 113,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"parameters": [
												{
													"id": 114,
													"name": "options",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": 175,
														"name": "WalletOptions",
														"package": "@thirdweb-dev/react-core"
													}
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										}
									]
								}
							}
						},
						{
							"id": 109,
							"name": "id",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 21,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L21"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 122,
							"name": "isHeadless",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If the wallet can sign transactions without user interaction, set this to true."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 54,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L54"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 117,
							"name": "isInstalled",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 32,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L32"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 118,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/types/wallet.ts",
											"line": 32,
											"character": 16,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L32"
										}
									],
									"signatures": [
										{
											"id": 119,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									]
								}
							}
						},
						{
							"id": 110,
							"name": "meta",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L22"
								}
							],
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "literal",
									"value": "meta"
								},
								"objectType": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"target": {
											"sourceFileName": "../wallets/src/evm/wallets/base.ts",
											"qualifiedName": "AbstractClientWallet"
										},
										"name": "AbstractClientWallet",
										"package": "@thirdweb-dev/wallets"
									}
								}
							}
						},
						{
							"id": 120,
							"name": "personalWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of "
									},
									{
										"kind": "code",
										"text": "`WalletConfig`"
									},
									{
										"kind": "text",
										"text": " that users can use as a personal wallet to connect to your wallet\n\nThis is only required if your wallet requires a personal wallet to be connected such as a Safe Wallet or Smart Wallet\n\nproviding the "
									},
									{
										"kind": "code",
										"text": "`personalWallets`"
									},
									{
										"kind": "text",
										"text": " ensures that autoconnect and ConnectWallet modal works properly for your wallet.\n* autoconnect will connect the last connected personal wallet first and then connect your wallet\n* ConnectWallet modal will reopen once the personal wallet is connected so that you can render UI for connecting your wallet as the next step"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 42,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L42"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 106,
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 121,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, this wallet will be tagged as \"recommended\" in ConnectWallet Modal and will be shown at the top of the list"
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 48,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L48"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 116,
							"name": "selectUI",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "UI for selecting wallet - this UI is rendered in the wallet selection screen"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/types/wallet.ts",
									"line": 31,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L31"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FC"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 153,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										],
										"name": "SelectUIProps",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "React.FC",
								"package": "@types/react"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [108, 115, 111, 109, 122, 117, 110, 120, 121, 116]
						}
					],
					"sources": [
						{
							"fileName": "packages/react-core/src/core/types/wallet.ts",
							"line": 19,
							"character": 70,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L19"
						}
					]
				}
			}
		},
		{
			"id": 171,
			"name": "WalletInstance",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/types/wallet.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L11"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../wallets/src/evm/wallets/base.ts",
					"qualifiedName": "AbstractClientWallet"
				},
				"name": "AbstractClientWallet",
				"package": "@thirdweb-dev/wallets"
			}
		},
		{
			"id": 175,
			"name": "WalletOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/types/wallet.ts",
					"line": 9,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/types/wallet.ts#L9"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../wallets/src/evm/wallets/base.ts",
					"qualifiedName": "WalletOptions"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 172,
						"name": "ExtraCoreWalletOptions",
						"package": "@thirdweb-dev/react-core"
					}
				],
				"name": "WalletOptions_",
				"package": "@thirdweb-dev/wallets",
				"qualifiedName": "WalletOptions"
			}
		},
		{
			"id": 978,
			"name": "ThirdwebSDKProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/providers/thirdweb-sdk-provider.tsx",
					"line": 183,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/thirdweb-sdk-provider.tsx#L183"
				}
			],
			"signatures": [
				{
					"id": 979,
					"name": "ThirdwebSDKProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`ThirdwebSDKProvider`"
							},
							{
								"kind": "text",
								"text": " is used when you want to provide your own wallet connection logic and just use the thirdweb SDK to interact with smart contracts and the blockchain.\nThis means you can use everything in the SDK except for wallet connection-related components and hooks. if you need those please use the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " instead.\n\n"
							},
							{
								"kind": "code",
								"text": "`ThirdwebSDKProvider`"
							},
							{
								"kind": "text",
								"text": " allows you to set a provider & signer to the Thirdweb SDK."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Wrap your app in the ThirdwebSDKProvider to access the SDK’s functionality from anywhere in your app.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebSDKProvider } from \"@thirdweb-dev/react\";\nimport { ethers } from \"ethers\";\n\n// Example shows how to get the signer from the injected provider ( wallet extension )\nfunction Example() {\n return (\n   <ThirdwebSDKProvider\n     activeChain=\"ethereum\"\n     clientId=\"YOUR_CLIENT_ID\"\n     signer={new ethers.providers.Web3Provider(window.ethereum).getSigner()}\n   >\n     <App />\n   </ThirdwebSDKProvider>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/providers/thirdweb-sdk-provider.tsx",
							"line": 183,
							"character": 35,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/providers/thirdweb-sdk-provider.tsx#L183"
						}
					],
					"typeParameter": [
						{
							"id": 980,
							"name": "TChains",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 981,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 986,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TChains",
												"refersToTypeParameter": true
											}
										],
										"name": "ThirdwebSDKProviderProps",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 1012,
			"name": "shortenAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/utils/addresses.ts",
					"line": 27,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/utils/addresses.ts#L27"
				}
			],
			"signatures": [
				{
					"id": 1013,
					"name": "shortenAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This function shortens an address if it is a valid EVM address."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The shortened address"
									}
								]
							},
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "Note that this function will not check if the address is an ENS."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Calling shortenAddress with extraShort set to true\n"
									},
									{
										"kind": "code",
										"text": "```ts\nconst address = shortenIfAddress(\"0x1234567890123456789012345678901234567890\", true); // result will be \"0x1234...890\"\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/utils/addresses.ts",
							"line": 27,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/utils/addresses.ts#L27"
						}
					],
					"parameters": [
						{
							"id": 1014,
							"name": "address",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The address to shorten"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 1015,
							"name": "extraShort",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, show the first 4 and last 3 characters"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "true"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			]
		},
		{
			"id": 551,
			"name": "useAcceptDirectListingOffer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 1221,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1221"
				}
			],
			"signatures": [
				{
					"id": 552,
					"name": "useAcceptDirectListingOffer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Accept a specific offer on a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "will accept the latest offer by the given offeror."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: acceptOffer,\n    isLoading,\n    error,\n  } = useAcceptDirectListingOffer(contract);\n\n  if (error) {\n    console.error(\"failed to accept offer\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => acceptOffer({ listingId: 1, addressOfOfferor: \"{{wallet_address}}\" })}\n    >\n      Accept offer\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to accept an offer on a direct listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useacceptdirectlistingoffer?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 1221,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1221"
						}
					],
					"parameters": [
						{
							"id": 553,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 554,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/marketplace-direct.d.ts",
													"line": 146,
													"character": 74
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1098,
								"name": "AcceptDirectOffer",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 863,
			"name": "useAccountAdmins",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
					"line": 70,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L70"
				}
			],
			"signatures": [
				{
					"id": 864,
					"name": "useAccountAdmins",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all admins of account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccountSigners(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all admins of the provided account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountadmins?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
							"line": 70,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L70"
						}
					],
					"parameters": [
						{
							"id": 865,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1035,
									"name": "WalletAddress",
									"package": "@thirdweb-dev/react-core"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 866,
			"name": "useAccountAdminsAndSigners",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
					"line": 101,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L101"
				}
			],
			"signatures": [
				{
					"id": 867,
					"name": "useAccountAdminsAndSigners",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all signers and admins of account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccountSigners(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all admins of the provided account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountadmins?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
							"line": 101,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L101"
						}
					],
					"parameters": [
						{
							"id": 868,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/account.ts",
										"qualifiedName": "SignerWithPermissions"
									},
									"name": "SignerWithPermissions",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 852,
			"name": "useAccountSigners",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
					"line": 39,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L39"
				}
			],
			"signatures": [
				{
					"id": 853,
					"name": "useAccountSigners",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all signers of account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccountSigners(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all signers of the provided account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountsigners?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
							"line": 39,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L39"
						}
					],
					"parameters": [
						{
							"id": 854,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/account.ts",
										"qualifiedName": "SignerWithPermissions"
									},
									"name": "SignerWithPermissions",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 842,
			"name": "useAccounts",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
					"line": 38,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L38"
				}
			],
			"signatures": [
				{
					"id": 843,
					"name": "useAccounts",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all accounts"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accounts, isLoading, error } = useAccounts(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all accounts with their associated admin"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccounts?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
							"line": 38,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L38"
						}
					],
					"parameters": [
						{
							"id": 844,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 848,
			"name": "useAccountsForAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
					"line": 69,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L69"
				}
			],
			"signatures": [
				{
					"id": 849,
					"name": "useAccountsForAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all accounts associated with the provided address"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: accountsForAddress, isLoading, error } = useAccountsForAddress(contract, \"{{account_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of all accounts associated with the address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaccountsforaddress?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
							"line": 69,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L69"
						}
					],
					"parameters": [
						{
							"id": 850,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 851,
							"name": "address",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 92,
			"name": "useActiveChain",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
					"line": 189,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L189"
				}
			],
			"signatures": [
				{
					"id": 93,
					"name": "useActiveChain",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is renamed to "
									},
									{
										"kind": "code",
										"text": "`useChain`"
									},
									{
										"kind": "text",
										"text": "\n\nuse the "
									},
									{
										"kind": "code",
										"text": "`useChain`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
							"line": 189,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L189"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							}
						]
					}
				}
			]
		},
		{
			"id": 223,
			"name": "useActiveClaimCondition",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 68,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L68"
				}
			],
			"signatures": [
				{
					"id": 224,
					"name": "useActiveClaimCondition",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the active claim condition"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: activeClaimCondition, isLoading, error } = useActiveClaimCondition(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the currently active claim condition"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useactiveclaimcondition?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 68,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L68"
						}
					],
					"parameters": [
						{
							"id": 225,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721, ERC1155 or ERC20 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1071,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 226,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 227,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
									"qualifiedName": "ClaimConditionFetchOptions"
								},
								"name": "ClaimConditionFetchOptions",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
											"qualifiedName": "ClaimCondition"
										},
										"name": "ClaimCondition",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 245,
			"name": "useActiveClaimConditionForWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 309,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L309"
				}
			],
			"signatures": [
				{
					"id": 246,
					"name": "useActiveClaimConditionForWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the active claim condition for a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: activeClaimConditionForWallet, isLoading, error } = useActiveClaimConditionForWallet(contract, \"{{wallet_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the active claim condition for the wallet address or null if there is no active claim condition"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useactiveclaimconditionforwallet?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 309,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L309"
						}
					],
					"parameters": [
						{
							"id": 247,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the  ERC20, ERC721 or ERC1155 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1071,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 248,
							"name": "walletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the wallet address to check the active claim condition for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 249,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
											"qualifiedName": "ClaimCondition"
										},
										"name": "ClaimCondition",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 492,
			"name": "useActiveListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 423,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L423"
				}
			],
			"signatures": [
				{
					"id": 493,
					"name": "useActiveListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all active listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: listings, isLoading, error } = useActiveListings(contract, { seller: \"{{wallet_address}}\", tokenContract: \"0x...\", tokenId: 1, start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of listings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useactivelistings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 423,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L423"
						}
					],
					"parameters": [
						{
							"id": 494,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 495,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/types/marketplace/AuctionListing.ts",
												"qualifiedName": "AuctionListing"
											},
											"name": "AuctionListing",
											"package": "@thirdweb-dev/sdk"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/types/marketplace/DirectListing.ts",
												"qualifiedName": "DirectListing"
											},
											"name": "DirectListing",
											"package": "@thirdweb-dev/sdk"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 855,
			"name": "useAddAdmin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
					"line": 248,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L248"
				}
			],
			"signatures": [
				{
					"id": 856,
					"name": "useAddAdmin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add an additional admin on the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: addAdmin,\n    isLoading,\n    error,\n  } = useAddAdmin();\n\n  if (error) {\n    console.error(\"failed to add admin\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => addAdmin(\"0x...\")}\n    >\n      Add admin\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
							"line": 248,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L248"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 88,
			"name": "useAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
					"line": 104,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L104"
				}
			],
			"signatures": [
				{
					"id": 89,
					"name": "useAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for accessing the address of the connected wallet\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useAddress } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "To get the address of the connected wallet, you can use the hook as follows:\n\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useAddress } from \"@thirdweb-dev/react\"\n\nconst App = () => {\n  const address = useAddress()\n\n  return <div>{address}</div>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": " variable will hold the address of the connected wallet if a user has connected using one of the supported wallet connection hooks."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useaddress?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
							"line": 104,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L104"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 746,
			"name": "useAirdropNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 618,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L618"
				}
			],
			"signatures": [
				{
					"id": 747,
					"name": "useAirdropNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Airdrop NFTs to a list of wallets"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: airdropNFT,\n    isLoading,\n    error,\n  } = useAirdropNFT(contract);\n\n  if (error) {\n    console.error(\"failed to transfer batch NFTs\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => airdropNFT({\n         tokenId: 2,\n         addresses: [\n           { address: \"{{wallet_address}}\", quantity: 2 },\n           { address: \"{{wallet_address}}\", quantity: 4 } }\n         ]\n      )}\n    >\n      Airdrop NFT\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer batch NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useairdropnft?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 618,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L618"
						}
					],
					"parameters": [
						{
							"id": 748,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Erc1155",
										"target": {
											"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
											"qualifiedName": "Erc1155"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
									"qualifiedName": "Erc1155"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseERC1155"
												},
												"name": "BaseERC1155",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseSignatureMintERC1155"
												},
												"name": "BaseSignatureMintERC1155",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "Erc1155",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 749,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/erc-1155.d.ts",
													"line": 205,
													"character": 91
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1051,
								"name": "AirdropNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 764,
			"name": "useAllRoleMembers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
					"line": 61,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L61"
				}
			],
			"signatures": [
				{
					"id": 765,
					"name": "useAllRoleMembers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all members of all roles"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: roles, isLoading, error } = useAllRoleMembers(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a list of addresses for all supported roles on the contract."
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useallrolemembers?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
							"line": 61,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L61"
						}
					],
					"typeParameter": [
						{
							"id": 766,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 767,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Awaited"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "src/evm/hooks/async/roles.ts",
													"qualifiedName": "RolesForContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TContract",
														"refersToTypeParameter": true
													}
												],
												"name": "RolesForContract",
												"package": "@thirdweb-dev/react-core"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								],
								"name": "Awaited",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 959,
			"name": "useAppURI",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
					"line": 32,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L32"
				}
			],
			"signatures": [
				{
					"id": 960,
					"name": "useAppURI",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get App URI"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: contractMetadata, isLoading, error } = useAppURI(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the appURI of the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AppURI"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
							"line": 32,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L32"
						}
					],
					"typeParameter": [
						{
							"id": 961,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"parameters": [
						{
							"id": 962,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									},
									{
										"kind": "text",
										"text": " instance of the contract to get the appURI of"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 504,
			"name": "useAuctionWinner",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 536,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L536"
				}
			],
			"signatures": [
				{
					"id": 505,
					"name": "useAuctionWinner",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the winner of an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: auctionWinner, isLoading, error } = useAuctionWinner(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the address of the winner of the auction or undefined if there is no winner yet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useauctionwinner?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 536,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L536"
						}
					],
					"parameters": [
						{
							"id": 506,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
													"qualifiedName": "Marketplace"
												},
												"name": "Marketplace",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
													"qualifiedName": "MarketplaceV3"
												},
												"name": "MarketplaceV3",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 507,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 889,
			"name": "useAuth",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/auth/index.ts",
					"line": 12,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/index.ts#L12"
				}
			],
			"signatures": [
				{
					"id": 890,
					"name": "useAuth",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/auth/index.ts",
							"line": 12,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/index.ts#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/auth.ts",
									"qualifiedName": "ThirdwebAuth"
								},
								"name": "ThirdwebAuth",
								"package": "@thirdweb-dev/auth"
							}
						]
					}
				}
			]
		},
		{
			"id": 82,
			"name": "useBalance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L21"
				}
			],
			"signatures": [
				{
					"id": 83,
					"name": "useBalance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A hook to get the native or (optional) ERC20 token balance of the connected wallet."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the balance of the connected wallet (native or ERC20)"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L21"
						}
					],
					"parameters": [
						{
							"id": 84,
							"name": "tokenAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the token contract, if empty will use the chain's native token"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 85,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/schema/contracts/common/currency.d.ts",
													"line": 27,
													"character": 26
												}
											]
										}
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 96,
			"name": "useBalanceForAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
					"line": 50,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L50"
				}
			],
			"signatures": [
				{
					"id": 97,
					"name": "useBalanceForAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the native token balance of a wallet address on the "
							},
							{
								"kind": "code",
								"text": "`activeChain`"
							},
							{
								"kind": "text",
								"text": " network set in the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the balance of the given wallet address"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
							"line": 50,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L50"
						}
					],
					"parameters": [
						{
							"id": 98,
							"name": "walletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the wallet that you want to get the native balance"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 99,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/evm/schema/contracts/common/currency.d.ts",
											"line": 27,
											"character": 26
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 418,
			"name": "useBatchesToReveal",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 172,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L172"
				}
			],
			"signatures": [
				{
					"id": 419,
					"name": "useBatchesToReveal",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all unrevealed batches"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that gets the batches to still be revealed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Revealable | ERC1155Revealable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usebatchestoreveal?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 172,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L172"
						}
					],
					"typeParameter": [
						{
							"id": 420,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1072,
								"name": "RevealableContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 421,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "RevealableContract",
										"target": 1072,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/delayed-reveal.ts",
										"qualifiedName": "BatchToReveal"
									},
									"name": "BatchToReveal",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 508,
			"name": "useBidBuffer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 587,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L587"
				}
			],
			"signatures": [
				{
					"id": 509,
					"name": "useBidBuffer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the bid buffer for an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: bidBuffer, isLoading, error } = useBidBuffer(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of listings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usebidbuffer?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 587,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L587"
						}
					],
					"parameters": [
						{
							"id": 510,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
													"qualifiedName": "Marketplace"
												},
												"name": "Marketplace",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
													"qualifiedName": "MarketplaceV3"
												},
												"name": "MarketplaceV3",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 511,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check (only necessary for marketplace v3)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 750,
			"name": "useBurnNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 674,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L674"
				}
			],
			"signatures": [
				{
					"id": 751,
					"name": "useBurnNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Burn an NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: burnNFT,\n    isLoading,\n    error,\n  } = useBurnNFT(contract);\n\n  if (error) {\n    console.error(\"failed to burn NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => burnNFT({ tokenId: 0, amount: 1 })}\n    >\n      Burn!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to burn an NFT token from the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Burnable | ERC1155Burnable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useburnnft?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 674,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L674"
						}
					],
					"typeParameter": [
						{
							"id": 752,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1043,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 753,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 754,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/erc-1155.d.ts",
													"line": 1075,
													"character": 68
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1067,
								"name": "BurnNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 833,
			"name": "useBurnToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 425,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L425"
				}
			],
			"signatures": [
				{
					"id": 834,
					"name": "useBurnToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Burn tokens"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: burnTokens,\n    isLoading,\n    error,\n  } = useBurnToken(contract);\n\n  if (error) {\n    console.error(\"failed to burn tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => burnTokens({ amount: 1000 })}\n    >\n      Burn!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to burn tokens from the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20Burnable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useburntoken?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 425,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L425"
						}
					],
					"parameters": [
						{
							"id": 835,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 836,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/erc-20.d.ts",
													"line": 354,
													"character": 48
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1040,
								"name": "TokenBurnParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 695,
			"name": "useBuyDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 1407,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1407"
				}
			],
			"signatures": [
				{
					"id": 696,
					"name": "useBuyDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Buy a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\", \"marketplace-v3\");\n  const {\n    mutate: buyNow,\n    isLoading,\n    error,\n  } = useBuyDirectListing(contract);\n\n  if (error) {\n    console.error(\"failed to buy direct listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => buyNow({listingId: 1, quantity: 1, buyer: \"{{address}}\"})}\n    >\n      Buy listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to buy out a direct listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useBuyDirectListing?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 1407,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1407"
						}
					],
					"parameters": [
						{
							"id": 697,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a MarketplaceV3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 698,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/marketplacev3-direct-listings.d.ts",
													"line": 331,
													"character": 110
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/types.ts",
									"qualifiedName": "BuyFromListingParams"
								},
								"name": "BuyFromListingParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 691,
			"name": "useBuyNow",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 1337,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1337"
				}
			],
			"signatures": [
				{
					"id": 692,
					"name": "useBuyNow",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Buy out an auction listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: buyNow,\n    isLoading,\n    error,\n  } = useBuyNow(contract);\n\n  if (error) {\n    console.error(\"failed to buyout listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => buyNow({listingId: 1, type: ListingType.Auction})}\n    >\n      Buy listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to buy out an auction listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usebuynow?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 1337,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1337"
						}
					],
					"parameters": [
						{
							"id": 693,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 694,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/marketplace-direct.d.ts",
													"line": 175,
													"character": 110
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1105,
								"name": "BuyNowParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 535,
			"name": "useCancelDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 980,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L980"
				}
			],
			"signatures": [
				{
					"id": 536,
					"name": "useCancelDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cancel a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: cancelDirectListing,\n    isLoading,\n    error,\n  } = useCancelDirectListing(contract);\n\n  if (error) {\n    console.error(\"failed to cancel direct listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={cancelDirectListing}\n    >\n      Cancel Direct Listing\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to cancel a direct listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecanceldirectlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 980,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L980"
						}
					],
					"parameters": [
						{
							"id": 537,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 538,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/marketplacev3-direct-listings.d.ts",
													"line": 301,
													"character": 48
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 539,
			"name": "useCancelEnglishAuction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 1041,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1041"
				}
			],
			"signatures": [
				{
					"id": 540,
					"name": "useCancelEnglishAuction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cancel an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: cancelEnglishAuction,\n    isLoading,\n    error,\n  } = useCancelEnglishAuction(contract);\n\n  if (error) {\n    console.error(\"failed to cancel english auction\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={cancelEnglishAuction}\n    >\n      Cancel English Auction\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to cancel an english auction"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecancelenglishauction?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 1041,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1041"
						}
					],
					"parameters": [
						{
							"id": 541,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 542,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/marketplacev3-english-auction.d.ts",
													"line": 311,
													"character": 48
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 527,
			"name": "useCancelListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 899,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L899"
				}
			],
			"signatures": [
				{
					"id": 528,
					"name": "useCancelListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Cancel a listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: cancelListing,\n    isLoading,\n    error,\n  } = useCancelListing(contract);\n\n  if (error) {\n    console.error(\"failed to cancel auction listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={cancelListing}\n    >\n      Cancel Auction Listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to cancel a listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecancellisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 899,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L899"
						}
					],
					"parameters": [
						{
							"id": 529,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 530,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 532,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
															"line": 905,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L905"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 533,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
																	"line": 905,
																	"character": 12,
																	"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L905"
																}
															],
															"signatures": [
																{
																	"id": 534,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 531,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
															"line": 904,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L904"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [532, 531]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
													"line": 903,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L903"
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Pick"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/marketplace/AuctionListing.ts",
													"qualifiedName": "AuctionListing"
												},
												"name": "AuctionListing",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/marketplace/DirectListing.ts",
													"qualifiedName": "DirectListing"
												},
												"name": "DirectListing",
												"package": "@thirdweb-dev/sdk"
											}
										]
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "type"
											},
											{
												"type": "literal",
												"value": "id"
											}
										]
									}
								],
								"name": "Pick",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 94,
			"name": "useChain",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
					"line": 164,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L164"
				}
			],
			"signatures": [
				{
					"id": 95,
					"name": "useChain",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for accessing the active Chain the current wallet is connected to\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useChain } from \"@thirdweb-dev/react-core\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can get the chain of the connected wallet by using the hook as follows:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useChain } from \"@thirdweb-dev/react-core\"\n\nconst App = () => {\n  const chain = useChain()\n\n  return <div>{chain.chainId}</div>\n}\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useActiveChain?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
							"line": 164,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L164"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 90,
			"name": "useChainId",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
					"line": 134,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L134"
				}
			],
			"signatures": [
				{
					"id": 91,
					"name": "useChainId",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for accessing the chain ID of the network the current wallet is connected to\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useChainId } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can get the chain ID of the connected wallet by using the hook as follows:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useChainId } from \"@thirdweb-dev/react\"\n\nconst App = () => {\n  const chainId = useChainId()\n\n  return <div>{chainId}</div>\n}\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usechainid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/wallet.ts",
							"line": 134,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/wallet.ts#L134"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 235,
			"name": "useClaimConditions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 186,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L186"
				}
			],
			"signatures": [
				{
					"id": 236,
					"name": "useClaimConditions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all claim conditions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimConditions, isLoading, error } = useClaimConditions(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the list of claim conditions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimconditions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 186,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L186"
						}
					],
					"parameters": [
						{
							"id": 237,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721, ERC1155 or ERC20 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1071,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 238,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 239,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
									"qualifiedName": "ClaimConditionFetchOptions"
								},
								"name": "ClaimConditionFetchOptions",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/claim-conditions/claim-conditions.ts",
										"qualifiedName": "ClaimCondition"
									},
									"name": "ClaimCondition",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 240,
			"name": "useClaimIneligibilityReasons",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 240,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L240"
				}
			],
			"signatures": [
				{
					"id": 241,
					"name": "useClaimIneligibilityReasons",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the reasons why a specific wallet can't claim"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimIneligibilityReasons, isLoading, error } = useClaimIneligibilityReasons(contract, { walletAddress: \"{{wallet_address}}\" });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the reasons for the claim ineligibility"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimineligibilityreasons?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 240,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L240"
						}
					],
					"parameters": [
						{
							"id": 242,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the  ERC20, ERC721 or ERC1155 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1071,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 243,
							"name": "params",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 215,
								"name": "ClaimIneligibilityParams",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 244,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claim conditions for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/enums/ClaimEligibility.ts",
										"qualifiedName": "ClaimEligibility"
									},
									"name": "ClaimEligibility",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 422,
			"name": "useClaimNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 228,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L228"
				}
			],
			"signatures": [
				{
					"id": 423,
					"name": "useClaimNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Claim an NFT to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: claimNFT,\n    isLoading,\n    error,\n  } = useClaimNFT(contract);\n\n  if (error) {\n    console.error(\"failed to claim nft\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => claimNFT({ to: \"{{wallet_address}}\", quantity: 1 })}\n    >\n      Claim NFT!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to claim a NFT to the wallet specificed in the params"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Claimable | ERC1155Claimable | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimnft?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 228,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L228"
						}
					],
					"typeParameter": [
						{
							"id": 424,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1071,
								"name": "DropContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 425,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1071,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1088,
								"name": "ClaimNFTReturnType",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1082,
								"name": "ClaimNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 821,
			"name": "useClaimToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 239,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L239"
				}
			],
			"signatures": [
				{
					"id": 822,
					"name": "useClaimToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Claim tokens to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: claimTokens,\n    isLoading,\n    error,\n  } = useClaimToken(contract);\n\n  if (error) {\n    console.error(\"failed to claim tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => claimTokens({ to: \"{{wallet_address}}\", amount: 100 })}\n    >\n      Claim Tokens!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to tokens to the wallet specified in the params"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimtoken?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 239,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L239"
						}
					],
					"parameters": [
						{
							"id": 823,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 824,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/erc-20.d.ts",
													"line": 443,
													"character": 112
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1115,
								"name": "ClaimTokenParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 415,
			"name": "useClaimedNFTSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 146,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L146"
				}
			],
			"signatures": [
				{
					"id": 416,
					"name": "useClaimedNFTSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total number of claimed NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the number of NFTs that are claimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimednftsupply?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 146,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L146"
						}
					],
					"parameters": [
						{
							"id": 417,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
													"qualifiedName": "NFTDrop"
												},
												"name": "NFTDrop",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
													"qualifiedName": "SignatureDrop"
												},
												"name": "SignatureDrop",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 407,
			"name": "useClaimedNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 92,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L92"
				}
			],
			"signatures": [
				{
					"id": 408,
					"name": "useClaimedNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all claimed NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "Equivalent to using "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useNFTs",
										"target": 704
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimedNFTs, isLoading, error } = useClaimedNFTs(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of NFTs that are claimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimednfts?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 92,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L92"
						}
					],
					"parameters": [
						{
							"id": 409,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
											"qualifiedName": "NFTDrop"
										},
										"name": "NFTDrop",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 410,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for the sake of pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 411,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 228,
			"name": "useClaimerProofs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 123,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L123"
				}
			],
			"signatures": [
				{
					"id": 229,
					"name": "useClaimerProofs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get claimer proofs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: claimerProofs, isLoading, error } = useClaimerProofs(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object with the snapshot for the provided address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useclaimerproofs?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 123,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L123"
						}
					],
					"parameters": [
						{
							"id": 230,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721, ERC1155 or ERC20 spec and implements the "
									},
									{
										"kind": "code",
										"text": "`claimConditions`"
									},
									{
										"kind": "text",
										"text": " extension."
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1071,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 231,
							"name": "claimerAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the claimer to fetch the claimer proofs for"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 232,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the token to fetch the claimer proofs for (if the contract is an ERC1155 contract)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						},
						{
							"id": 233,
							"name": "claimConditionId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "optional the claim condition id to get the proofs for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 234,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/schema/contracts/common/snapshots.d.ts",
													"line": 75,
													"character": 26
												}
											]
										}
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 316,
			"name": "useCompilerMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 110,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L110"
				}
			],
			"signatures": [
				{
					"id": 317,
					"name": "useCompilerMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 110,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L110"
						}
					],
					"parameters": [
						{
							"id": 318,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/schema/contracts/custom.ts",
											"qualifiedName": "PublishedMetadata"
										},
										"name": "PublishedMetadata",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "literal",
										"value": null
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 36,
			"name": "useConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 115,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L115"
				}
			],
			"signatures": [
				{
					"id": 37,
					"name": "useConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to connect to a wallet class"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 115,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L115"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 38,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
									"line": 77,
									"character": 11,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L77"
								}
							],
							"signatures": [
								{
									"id": 39,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
											"line": 77,
											"character": 11,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L77"
										}
									],
									"typeParameter": [
										{
											"id": 40,
											"name": "I",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 171,
												"name": "WalletInstance",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"parameters": [
										{
											"id": 41,
											"name": "args",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isRest": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
													"qualifiedName": "ConnectFnArgs"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "I",
														"refersToTypeParameter": true
													}
												],
												"name": "ConnectFnArgs",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "I",
												"refersToTypeParameter": true
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 42,
			"name": "useConnectionStatus",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 148,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L148"
				}
			],
			"signatures": [
				{
					"id": 43,
					"name": "useConnectionStatus",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the connection status of the wallet\n\nIt can be one of the following:\n1. "
									},
									{
										"kind": "code",
										"text": "`unknown`"
									},
									{
										"kind": "text",
										"text": " - when wallet connection status is not yet known\n2. "
									},
									{
										"kind": "code",
										"text": "`connecting`"
									},
									{
										"kind": "text",
										"text": " - when wallet is connecting\n3. "
									},
									{
										"kind": "code",
										"text": "`connected`"
									},
									{
										"kind": "text",
										"text": " - when wallet is connected\n4. "
									},
									{
										"kind": "code",
										"text": "`disconnected`"
									},
									{
										"kind": "text",
										"text": " - when wallet is disconnected"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 148,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L148"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
							"qualifiedName": "ConnectionStatus"
						},
						"name": "ConnectionStatus",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 335,
			"name": "useContract",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 153,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L153"
				},
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 176,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L176"
				},
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 194,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L194"
				},
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 218,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L218"
				},
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 223,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L223"
				}
			],
			"signatures": [
				{
					"id": 336,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 153,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L153"
						}
					],
					"typeParameter": [
						{
							"id": 337,
							"name": "TContractAddress",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"parameters": [
						{
							"id": 338,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContractAddress",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"typeArguments": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractAddress",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../generated-abis/src/index.ts",
										"qualifiedName": "ContractAddress"
									},
									"name": "GeneratedContractAddress",
									"package": "@thirdweb-dev/generated-abis",
									"qualifiedName": "ContractAddress"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
										"qualifiedName": "SmartContract"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/types/contract.ts",
												"qualifiedName": "BaseContractForAddress"
											},
											"typeArguments": [
												{
													"type": "reference",
													"target": -1,
													"name": "TContractAddress",
													"refersToTypeParameter": true
												}
											],
											"name": "BaseContractForAddress",
											"package": "@thirdweb-dev/sdk"
										}
									],
									"name": "SmartContract",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
										"qualifiedName": "SmartContract"
									},
									"name": "SmartContract",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 339,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use this resolve a contract address to a smart contract instance."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract, isLoading, error } = useContract(\"{{contract_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract once it is resolved"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontract?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 176,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L176"
						}
					],
					"parameters": [
						{
							"id": 340,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the deployed contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
									"qualifiedName": "SmartContract"
								},
								"name": "SmartContract",
								"package": "@thirdweb-dev/sdk"
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 341,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use this resolve a contract address to a smart contract instance."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract, isLoading, error } = useContract(\"{{contract_address}}\", \"nft-drop\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract once it is resolved"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontract?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 194,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L194"
						}
					],
					"typeParameter": [
						{
							"id": 342,
							"name": "TContractType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "split"
									},
									{
										"type": "literal",
										"value": "edition-drop"
									},
									{
										"type": "literal",
										"value": "edition"
									},
									{
										"type": "literal",
										"value": "marketplace"
									},
									{
										"type": "literal",
										"value": "marketplace-v3"
									},
									{
										"type": "literal",
										"value": "multiwrap"
									},
									{
										"type": "literal",
										"value": "nft-collection"
									},
									{
										"type": "literal",
										"value": "nft-drop"
									},
									{
										"type": "literal",
										"value": "pack"
									},
									{
										"type": "literal",
										"value": "signature-drop"
									},
									{
										"type": "literal",
										"value": "token-drop"
									},
									{
										"type": "literal",
										"value": "token"
									},
									{
										"type": "literal",
										"value": "vote"
									},
									{
										"type": "literal",
										"value": "custom"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 343,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the deployed contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 344,
							"name": "_contractType",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the type of the contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TContractType",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"typeArguments": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractType",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "PrebuiltContractType"
									},
									"name": "PrebuiltContractType",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "ContractForPrebuiltContractType"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContractType",
											"refersToTypeParameter": true
										}
									],
									"name": "ContractForPrebuiltContractType",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
										"qualifiedName": "SmartContract"
									},
									"name": "SmartContract",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				},
				{
					"id": 345,
					"name": "useContract",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use this resolve a contract address to a smart contract instance."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract, isLoading, error } = useContract(\"{{contract_address}}\", ABI);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract once it is resolved"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontract?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 218,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L218"
						}
					],
					"parameters": [
						{
							"id": 346,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the deployed contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 347,
							"name": "_abi",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the ABI of the contract to use"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
									"qualifiedName": "ContractInterface"
								},
								"name": "ContractInterface",
								"package": "@ethersproject/contracts"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 398,
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
									"qualifiedName": "SmartContract"
								},
								"name": "SmartContract",
								"package": "@thirdweb-dev/sdk"
							}
						],
						"name": "UseContractResult",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 366,
			"name": "useContractEvents",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 425,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L425"
				}
			],
			"signatures": [
				{
					"id": 367,
					"name": "useContractEvents",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get or subscribe to contract events"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: contractEvents, isLoading } = useContractEvents(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract events"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontractevents?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 425,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L425"
						}
					],
					"parameters": [
						{
							"id": 368,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidContractInstance",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instance of the contract to listen to events for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 369,
							"name": "eventName",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the name of the event to query for (omit this or pass "
									},
									{
										"kind": "code",
										"text": "`undefined`"
									},
									{
										"kind": "text",
										"text": " to query for all events)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 370,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "options includes the filters ("
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "QueryAllEvents"
									},
									{
										"kind": "text",
										"text": ") for the query as well as if you want to subscribe to real-time updates (default: true)"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 371,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 372,
											"name": "queryFilter",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 428,
													"character": 13,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L428"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/events.ts",
													"qualifiedName": "EventQueryOptions"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "EventQueryOptions",
												"package": "@thirdweb-dev/sdk"
											}
										},
										{
											"id": 373,
											"name": "subscribe",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 428,
													"character": 46,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L428"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [372, 373]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
											"line": 428,
											"character": 11,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L428"
										}
									]
								}
							},
							"defaultValue": "..."
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/events.ts",
										"qualifiedName": "ContractEvent"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "Record"
											},
											"typeArguments": [
												{
													"type": "intrinsic",
													"name": "string"
												},
												{
													"type": "intrinsic",
													"name": "any"
												}
											],
											"name": "Record",
											"package": "typescript"
										}
									],
									"name": "ContractEvent",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 348,
			"name": "useContractMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 317,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L317"
				}
			],
			"signatures": [
				{
					"id": 349,
					"name": "useContractMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: contractMetadata, isLoading } = useContractMetadata(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract metadata of the deployed contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ContractMetadata"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 317,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L317"
						}
					],
					"typeParameter": [
						{
							"id": 350,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"parameters": [
						{
							"id": 351,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidContractInstance",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instance of the contract to get the metadata for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/core/query-utils/required-param.ts",
										"qualifiedName": "RequiredParam"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContract",
											"refersToTypeParameter": true
										}
									],
									"name": "RequiredParam",
									"package": "@thirdweb-dev/react-core"
								},
								"extendsType": {
									"type": "intrinsic",
									"name": "undefined"
								},
								"trueType": {
									"type": "intrinsic",
									"name": "undefined"
								},
								"falseType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Awaited"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
												"qualifiedName": "ReturnType"
											},
											"typeArguments": [
												{
													"type": "indexedAccess",
													"indexType": {
														"type": "literal",
														"value": "get"
													},
													"objectType": {
														"type": "indexedAccess",
														"indexType": {
															"type": "literal",
															"value": "metadata"
														},
														"objectType": {
															"type": "reference",
															"target": -1,
															"name": "TContract",
															"refersToTypeParameter": true
														}
													}
												}
											],
											"name": "ReturnType",
											"package": "typescript"
										}
									],
									"name": "Awaited",
									"package": "typescript"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 352,
			"name": "useContractMetadataUpdate",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 368,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L368"
				}
			],
			"signatures": [
				{
					"id": 353,
					"name": "useContractMetadataUpdate",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Update the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updateContractMetadata,\n    isLoading,\n    error,\n  } = useContractMetadataUpdate(contract);\n\n  if (error) {\n    console.error(\"failed to update contract metadata\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updateContractMetadata({ name: \"New name\", description: \"New description\" })}\n    >\n      Update contract metadata\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the contract metadata of the deployed contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ContractMetadata"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 368,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L368"
						}
					],
					"parameters": [
						{
							"id": 354,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ValidContractInstance",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instance of the contract to get the metadata for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 355,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 357,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 373,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L373"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 358,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
															"line": 373,
															"character": 10,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L373"
														}
													],
													"signatures": [
														{
															"id": 359,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "intrinsic",
																		"name": "any"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 356,
											"name": "receipt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 372,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L372"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
													"qualifiedName": "TransactionReceipt"
												},
												"name": "providers.TransactionReceipt",
												"package": "@ethersproject/abstract-provider",
												"qualifiedName": "TransactionReceipt"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [357, 356]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
											"line": 371,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L371"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 360,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 365,
											"name": "app_uri",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 381,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L381"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 362,
											"name": "description",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 378,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L378"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 364,
											"name": "external_link",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 380,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L380"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 363,
											"name": "image",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 379,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L379"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 361,
											"name": "name",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 377,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L377"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [365, 362, 364, 363, 361]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
											"line": 376,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L376"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 374,
			"name": "useContractRead",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 522,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L522"
				}
			],
			"signatures": [
				{
					"id": 375,
					"name": "useContractRead",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get data from a contract read-function call"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { data, isLoading, error } = useContractRead(contract, \"functionName\", ...args);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the data returned by the function call"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontractread?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 522,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L522"
						}
					],
					"typeParameter": [
						{
							"id": 376,
							"name": "TContractAddress",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 377,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 378,
							"name": "TContractInstance",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 379,
							"name": "TFunctionName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 380,
							"name": "TArgs",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "unknown"
								}
							}
						},
						{
							"id": 381,
							"name": "TReturnType",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"parameters": [
						{
							"id": 382,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the contract instance of the contract to call a function on"
									}
								]
							},
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractInstance",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "ValidContractInstance"
									},
									"name": "ValidContractInstance",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/core/query-utils/required-param.ts",
										"qualifiedName": "RequiredParam"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContractInstance",
											"refersToTypeParameter": true
										}
									],
									"name": "RequiredParam",
									"package": "@thirdweb-dev/react-core"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": -1,
										"name": "TContractAddress",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "never"
									},
									"trueType": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/query-utils/required-param.ts",
											"qualifiedName": "RequiredParam"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/contract.ts",
															"qualifiedName": "BaseContractForAddress"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TContractAddress",
																"refersToTypeParameter": true
															}
														],
														"name": "BaseContractForAddress",
														"package": "@thirdweb-dev/sdk"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									},
									"falseType": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/query-utils/required-param.ts",
											"qualifiedName": "RequiredParam"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									}
								}
							}
						},
						{
							"id": 383,
							"name": "functionName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the name of the function to call"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "TFunctionName",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 384,
							"name": "args",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The arguments to pass to the function (if any), with optional call arguments as the last parameter"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "TArgs",
								"refersToTypeParameter": true
							}
						},
						{
							"id": 385,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
									"qualifiedName": "CallOverrides"
								},
								"name": "CallOverrides",
								"package": "@ethersproject/contracts"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": -1,
								"name": "TReturnType",
								"refersToTypeParameter": true
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 297,
			"name": "useContractType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 59,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L59"
				}
			],
			"signatures": [
				{
					"id": 298,
					"name": "useContractType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 59,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L59"
						}
					],
					"parameters": [
						{
							"id": 299,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": null
									},
									{
										"type": "literal",
										"value": "split"
									},
									{
										"type": "literal",
										"value": "edition-drop"
									},
									{
										"type": "literal",
										"value": "edition"
									},
									{
										"type": "literal",
										"value": "marketplace"
									},
									{
										"type": "literal",
										"value": "marketplace-v3"
									},
									{
										"type": "literal",
										"value": "multiwrap"
									},
									{
										"type": "literal",
										"value": "nft-collection"
									},
									{
										"type": "literal",
										"value": "nft-drop"
									},
									{
										"type": "literal",
										"value": "pack"
									},
									{
										"type": "literal",
										"value": "signature-drop"
									},
									{
										"type": "literal",
										"value": "token-drop"
									},
									{
										"type": "literal",
										"value": "token"
									},
									{
										"type": "literal",
										"value": "vote"
									},
									{
										"type": "literal",
										"value": "custom"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 386,
			"name": "useContractWrite",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
					"line": 598,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L598"
				}
			],
			"signatures": [
				{
					"id": 387,
					"name": "useContractWrite",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mke a write call to your contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { mutate: myFunction, isLoading, error } = useContractWrite(contract, \"myFunction\");\n\n// the function can be called as follows:\n// myFunction([\"param 1\", \"param 2\", ...])\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the write function to call"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecontractwrite?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
							"line": 598,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L598"
						}
					],
					"typeParameter": [
						{
							"id": 388,
							"name": "TContractAddress",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 389,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 390,
							"name": "TContractInstance",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/index.ts",
									"qualifiedName": "ValidContractInstance"
								},
								"name": "ValidContractInstance",
								"package": "@thirdweb-dev/sdk"
							}
						},
						{
							"id": 391,
							"name": "TFunctionName",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 392,
							"name": "TArgs",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						}
					],
					"parameters": [
						{
							"id": 393,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the contract instance of the contract to call a function on"
									}
								]
							},
							"type": {
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TContractInstance",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/index.ts",
										"qualifiedName": "ValidContractInstance"
									},
									"name": "ValidContractInstance",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/core/query-utils/required-param.ts",
										"qualifiedName": "RequiredParam"
									},
									"typeArguments": [
										{
											"type": "reference",
											"target": -1,
											"name": "TContractInstance",
											"refersToTypeParameter": true
										}
									],
									"name": "RequiredParam",
									"package": "@thirdweb-dev/react-core"
								},
								"falseType": {
									"type": "conditional",
									"checkType": {
										"type": "reference",
										"target": -1,
										"name": "TContractAddress",
										"refersToTypeParameter": true
									},
									"extendsType": {
										"type": "intrinsic",
										"name": "never"
									},
									"trueType": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/query-utils/required-param.ts",
											"qualifiedName": "RequiredParam"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/contract.ts",
															"qualifiedName": "BaseContractForAddress"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TContractAddress",
																"refersToTypeParameter": true
															}
														],
														"name": "BaseContractForAddress",
														"package": "@thirdweb-dev/sdk"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									},
									"falseType": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/query-utils/required-param.ts",
											"qualifiedName": "RequiredParam"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										],
										"name": "RequiredParam",
										"package": "@thirdweb-dev/react-core"
									}
								}
							}
						},
						{
							"id": 394,
							"name": "functionName",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the name of the function to call"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"target": -1,
												"name": "TFunctionName",
												"refersToTypeParameter": true
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/core/types.ts",
											"qualifiedName": "TransactionResultWithMetadata"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "TransactionResultWithMetadata",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 395,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 396,
											"name": "args",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 637,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L637"
												}
											],
											"type": {
												"type": "reference",
												"target": -1,
												"name": "TArgs",
												"refersToTypeParameter": true
											}
										},
										{
											"id": 397,
											"name": "overrides",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
													"line": 638,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L638"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "CallOverrides"
												},
												"name": "CallOverrides",
												"package": "@ethersproject/contracts"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [396, 397]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contracts.ts",
											"line": 636,
											"character": 7,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contracts.ts#L636"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 845,
			"name": "useCreateAccount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
					"line": 161,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L161"
				}
			],
			"signatures": [
				{
					"id": 846,
					"name": "useCreateAccount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a account"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: createAccount,\n    isLoading,\n    error,\n  } = useCreateAccount(contract);\n\n  if (error) {\n    console.error(\"failed to create account\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createAccount(\"0x...\")}\n    >\n      Create Account\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to create a account"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecreateaccount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
							"line": 161,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L161"
						}
					],
					"parameters": [
						{
							"id": 847,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResultWithAddress"
								},
								"name": "TransactionResultWithAddress",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 522,
			"name": "useCreateAuctionListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 821,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L821"
				}
			],
			"signatures": [
				{
					"id": 523,
					"name": "useCreateAuctionListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: createAuctionListing,\n    isLoading,\n    error,\n  } = useCreateAuctionListing(contract);\n\n  if (error) {\n    console.error(\"failed to create auction listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createAuctionListing(auctionListingData)}\n    >\n      Create Auction Listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to create a new auction listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecreateauctionlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 821,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L821"
						}
					],
					"typeParameter": [
						{
							"id": 524,
							"name": "TMarketplace",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 525,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TMarketplace",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResultWithId"
								},
								"name": "TransactionResultWithId",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TMarketplace",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
										"qualifiedName": "Marketplace"
									},
									"name": "Marketplace",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplace/NewAuctionListing.ts",
										"qualifiedName": "NewAuctionListing"
									},
									"name": "NewAuctionListing",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reflection",
									"declaration": {
										"id": 526,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"sources": [
											{
												"fileName": "packages/sdk/dist/declarations/src/evm/schema/marketplacev3/english-auctions.d.ts",
												"line": 65,
												"character": 3
											}
										]
									}
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 517,
			"name": "useCreateDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 742,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L742"
				}
			],
			"signatures": [
				{
					"id": 518,
					"name": "useCreateDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a new direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: createDirectListing,\n    isLoading,\n    error,\n  } = useCreateDirectListing(contract);\n\n  if (error) {\n    console.error(\"failed to create direct listing\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createDirectListing(directListingData)}\n    >\n      Create Direct Listing!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to create a new direct listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usecreatedirectlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 742,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L742"
						}
					],
					"typeParameter": [
						{
							"id": 519,
							"name": "TMarketplace",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 520,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TMarketplace",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResultWithId"
								},
								"name": "TransactionResultWithId",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "conditional",
								"checkType": {
									"type": "reference",
									"target": -1,
									"name": "TMarketplace",
									"refersToTypeParameter": true
								},
								"extendsType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
										"qualifiedName": "Marketplace"
									},
									"name": "Marketplace",
									"package": "@thirdweb-dev/sdk"
								},
								"trueType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplace/NewDirectListing.ts",
										"qualifiedName": "NewDirectListing"
									},
									"name": "NewDirectListing",
									"package": "@thirdweb-dev/sdk"
								},
								"falseType": {
									"type": "reflection",
									"declaration": {
										"id": 521,
										"name": "__type",
										"variant": "declaration",
										"kind": 65536,
										"flags": {},
										"sources": [
											{
												"fileName": "packages/sdk/dist/declarations/src/evm/schema/marketplacev3/direct-listings.d.ts",
												"line": 49,
												"character": 3
											}
										]
									}
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 859,
			"name": "useCreateSessionKey",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
					"line": 166,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L166"
				}
			],
			"signatures": [
				{
					"id": 860,
					"name": "useCreateSessionKey",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create and add a session key for the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: createSessionKey,\n    isLoading,\n    error,\n  } = useCreateSessionKey();\n\n  if (error) {\n    console.error(\"failed to create session key\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => createSessionKey(\n        \"0x...\",\n        {\n          approvedCallTargets: [\"0x...\"], // the addresses of contracts that the session key can call\n          nativeTokenLimitPerTransaction: 0.1, // the maximum amount of native token (in ETH) that the session key can spend per transaction\n          startDate: new Date(), // the date when the session key becomes active\n          expirationDate = new Date(Date.now() + 24 * 60 * 60 * 1000); // the date when the session key expires\n        }\n       )}\n    >\n      Create Session Key\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
							"line": 166,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L166"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/account.ts",
									"qualifiedName": "CreateSessionKeyInput"
								},
								"name": "CreateSessionKeyInput",
								"package": "@thirdweb-dev/react-core"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 44,
			"name": "useCreateWalletInstance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 174,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L174"
				}
			],
			"signatures": [
				{
					"id": 45,
					"name": "useCreateWalletInstance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to create an instance of given wallet class"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 174,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L174"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 46,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
									"line": 81,
									"character": 24,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L81"
								}
							],
							"signatures": [
								{
									"id": 47,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
											"line": 81,
											"character": 24,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L81"
										}
									],
									"typeParameter": [
										{
											"id": 48,
											"name": "I",
											"variant": "typeParam",
											"kind": 131072,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 171,
												"name": "WalletInstance",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"parameters": [
										{
											"id": 49,
											"name": "Wallet",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 106,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "I",
														"refersToTypeParameter": true
													}
												],
												"name": "WalletConfig",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": -1,
										"name": "I",
										"refersToTypeParameter": true
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 434,
			"name": "useDelayedRevealLazyMint",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 389,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L389"
				}
			],
			"signatures": [
				{
					"id": 435,
					"name": "useDelayedRevealLazyMint",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Lazy mint NFTs with delayed reveal"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: delayedRevealLazyMint,\n    isLoading,\n    error,\n  } = useDelayedRevealLazyMint(contract);\n\n  if (error) {\n    console.error(\"failed to lazy mint NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => delayedRevealLazyMint({ metadatas: [{ name: \"My NFT!\"}] })}\n    >\n      Delayed Reveal Lazy mint NFT!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to lazy mint a batch of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Revealable | ERC1155Revealable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedelayedreveallazymint?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 389,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L389"
						}
					],
					"typeParameter": [
						{
							"id": 436,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1072,
								"name": "RevealableContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 437,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1071,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 438,
							"name": "onProgress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an optional callback that will be called with the progress of the upload"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 439,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
											"line": 391,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L391"
										}
									],
									"signatures": [
										{
											"id": 440,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
													"line": 391,
													"character": 15,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L391"
												}
											],
											"parameters": [
												{
													"id": 441,
													"name": "progress",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/events.ts",
															"qualifiedName": "UploadProgressEvent"
														},
														"name": "UploadProgressEvent",
														"package": "@thirdweb-dev/sdk"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/core/types.ts",
										"qualifiedName": "TransactionResultWithId"
									},
									"name": "TransactionResultWithId",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1073,
								"name": "DelayedRevealLazyMintInput",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 455,
			"name": "useDirectListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 94,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L94"
				}
			],
			"signatures": [
				{
					"id": 456,
					"name": "useDirectListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get a direct listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0; // the listing id to check\nconst { data: directListing, isLoading, error } = useListing(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the desired direct listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedirectlisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 94,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L94"
						}
					],
					"parameters": [
						{
							"id": 457,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 458,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplacev3/DirectListingV3.ts",
									"qualifiedName": "DirectListingV3"
								},
								"name": "DirectListingV3",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 467,
			"name": "useDirectListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 198,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L198"
				}
			],
			"signatures": [
				{
					"id": 468,
					"name": "useDirectListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all direct listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: directListings, isLoading, error } = useDirectListings(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of direct listings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedirectlistings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 198,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L198"
						}
					],
					"parameters": [
						{
							"id": 469,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 470,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplacev3/DirectListingV3.ts",
										"qualifiedName": "DirectListingV3"
									},
									"name": "DirectListingV3",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 486,
			"name": "useDirectListingsCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 363,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L363"
				}
			],
			"signatures": [
				{
					"id": 487,
					"name": "useDirectListingsCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total count of direct listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: directListingsCount, isLoading, error } = useDirectListingsCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the direct listings count"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usedirectlistingscount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 363,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L363"
						}
					],
					"parameters": [
						{
							"id": 488,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 50,
			"name": "useDisconnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 128,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L128"
				}
			],
			"signatures": [
				{
					"id": 51,
					"name": "useDisconnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to disconnect from the current active wallet"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 128,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L128"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 52,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
									"line": 78,
									"character": 14,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L78"
								}
							],
							"signatures": [
								{
									"id": 53,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
											"line": 78,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L78"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 905,
			"name": "useEdition",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useEdition.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useEdition.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 906,
					"name": "useEdition",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`Edition`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is used to interface with ERC1155 compliant NFTs."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"edition\")\n\n  // Now you can use the edition contract in the rest of the component\n\n  // For example, this function will return all the NFTs on this contract\n  async function getNFTs() {\n    const nfts = await contract.getAll()\n    return nfts\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const edition = useEdition(\"0x1234...\");\n+ const edition = useContract(\"0x1234...\", \"edition\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useEdition.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useEdition.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 907,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Edition contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/edition.ts",
									"qualifiedName": "Edition"
								},
								"name": "Edition",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 902,
			"name": "useEditionDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useEditionDrop.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useEditionDrop.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 903,
					"name": "useEditionDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`EditionDrop`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is used to interface with ERC1155 compliant NFTs that can be lazily minted."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"edition-drop\")\n\n  // Now you can use the edition drop contract in the rest of the component\n\n  // For example, this function will let the connected wallet claim a new NFT\n  async function claim(tokenId, quantity) {\n    await contract.claim(tokenId, quantity)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const editionDrop = useEditionDrop(\"0x1234...\");\n+ const editionDrop = useContract(\"0x1234...\", \"edition-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useEditionDrop.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useEditionDrop.ts#L34"
						}
					],
					"parameters": [
						{
							"id": 904,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Edition Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/edition-drop.ts",
									"qualifiedName": "EditionDrop"
								},
								"name": "EditionDrop",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 459,
			"name": "useEnglishAuction",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 131,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L131"
				}
			],
			"signatures": [
				{
					"id": 460,
					"name": "useEnglishAuction",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst auctionId = 0; // the listing id to check\nconst { data: englishAuction, isLoading, error } = useEnglishAuction(contract, auctionId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the desired english auction"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 131,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L131"
						}
					],
					"parameters": [
						{
							"id": 461,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 462,
							"name": "auctionId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the auction id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplacev3/EnglishAuction.ts",
									"qualifiedName": "EnglishAuction"
								},
								"name": "EnglishAuction",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 500,
			"name": "useEnglishAuctionWinningBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 496,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L496"
				}
			],
			"signatures": [
				{
					"id": 501,
					"name": "useEnglishAuctionWinningBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the winning bid for an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: winningBid, isLoading, error } = useWinningBid(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Bid"
									},
									{
										"kind": "text",
										"text": " that is winning the auction"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctionwinningbid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 496,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L496"
						}
					],
					"parameters": [
						{
							"id": 502,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 503,
							"name": "auctionId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the auction id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/marketplacev3/Bid.ts",
											"qualifiedName": "Bid"
										},
										"name": "Bid",
										"package": "@thirdweb-dev/sdk"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 475,
			"name": "useEnglishAuctions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 268,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L268"
				}
			],
			"signatures": [
				{
					"id": 476,
					"name": "useEnglishAuctions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all english auctions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: englishAuctions, isLoading, error } = useEnglishAuctions(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of english auctions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 268,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L268"
						}
					],
					"parameters": [
						{
							"id": 477,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 478,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplacev3/EnglishAuction.ts",
										"qualifiedName": "EnglishAuction"
									},
									"name": "EnglishAuction",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 489,
			"name": "useEnglishAuctionsCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 392,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L392"
				}
			],
			"signatures": [
				{
					"id": 490,
					"name": "useEnglishAuctionsCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total count of english auctions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: englishAuctionsCount, isLoading, error } = useEnglishAuctionsCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the direct english actions count"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useenglishauctionscount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 392,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L392"
						}
					],
					"parameters": [
						{
							"id": 491,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 555,
			"name": "useExecuteAuctionSale",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 1280,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1280"
				}
			],
			"signatures": [
				{
					"id": 556,
					"name": "useExecuteAuctionSale",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Execute an auction sale. Can only be executed once the auction has ended and the auction has a winning bid."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: executeAuctionSale,\n    isLoading,\n    error,\n  } = useExecuteAuctionSale(contract);\n\n  if (error) {\n    console.error(\"failed to execute sale\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => executeAuctionSale({ listingId: 1 })}\n    >\n      Execute sale\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to accept an offer on a direct listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useexecuteauctionsale?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 1280,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1280"
						}
					],
					"parameters": [
						{
							"id": 557,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 558,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/marketplace-auction.d.ts",
													"line": 232,
													"character": 48
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1102,
								"name": "ExecuteAuctionSale",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 783,
			"name": "useGrantRole",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
					"line": 247,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L247"
				}
			],
			"signatures": [
				{
					"id": 784,
					"name": "useGrantRole",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Grant a role to a specific address"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: grantRole,\n    isLoading,\n    error,\n  } = useGrantRole(contract);\n\n  if (error) {\n    console.error(\"failed to grant role\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => grantRole({ role: \"admin\", address: {{wallet_address}} })}\n    >\n      Grant Role\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to grant a member of a role on the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions | PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usegrantrole?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
							"line": 247,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L247"
						}
					],
					"typeParameter": [
						{
							"id": 785,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 786,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 787,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 789,
											"name": "address",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
													"line": 257,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L257"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 788,
											"name": "role",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
													"line": 256,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L256"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/evm/hooks/async/roles.ts",
													"qualifiedName": "RolesForContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TContract",
														"refersToTypeParameter": true
													}
												],
												"name": "RolesForContract",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [789, 788]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
											"line": 255,
											"character": 19,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L255"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 837,
			"name": "useIsAccountDeployed",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
					"line": 104,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L104"
				}
			],
			"signatures": [
				{
					"id": 838,
					"name": "useIsAccountDeployed",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if a account has been deployed for the given admin"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: isAccountDeployed, isLoading, error } = useIsAccountDeployed(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a boolean indicating if a account has been deployed for the given admin"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AccountFactory"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useisaccountdeployed?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account-factory.ts",
							"line": 104,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account-factory.ts#L104"
						}
					],
					"parameters": [
						{
							"id": 839,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a account factory contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
													"qualifiedName": "BaseContract"
												},
												"name": "BaseContract",
												"package": "@ethersproject/contracts"
											}
										],
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 840,
							"name": "admin",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 841,
							"name": "extraData",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/index.ts",
									"qualifiedName": "BytesLike"
								},
								"name": "BytesLike",
								"package": "@ethersproject/bytes"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "boolean"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 773,
			"name": "useIsAddressRole",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
					"line": 126,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L126"
				}
			],
			"signatures": [
				{
					"id": 774,
					"name": "useIsAddressRole",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Check if an address is a member of a specific role"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: isMember, isLoading, error } = useIsAddressRole(contract, \"admin\", \"{{wallet_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "true if the address is a member of the role, or false if not"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useisaddressrole?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
							"line": 126,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L126"
						}
					],
					"typeParameter": [
						{
							"id": 775,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 776,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 777,
							"name": "role",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the role to check the member against, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Role",
										"target": {
											"sourceFileName": "../sdk/src/evm/common/role.ts",
											"qualifiedName": "Role"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "RolesForContract"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RolesForContract",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 778,
							"name": "walletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 426,
			"name": "useLazyMint",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 317,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L317"
				}
			],
			"signatures": [
				{
					"id": 427,
					"name": "useLazyMint",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Lazy mint NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: lazyMint,\n    isLoading,\n    error,\n  } = useLazyMint(contract);\n\n  if (error) {\n    console.error(\"failed to lazy mint NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => lazyMint({ metadatas: [{ name: \"My NFT!\"}] })}\n    >\n      Lazy mint NFT!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to lazy mint a batch of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable | ERC1155LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselazymint?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 317,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L317"
						}
					],
					"typeParameter": [
						{
							"id": 428,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1071,
								"name": "DropContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 429,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043
									},
									{
										"kind": "text",
										"text": " with the drop extension"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 430,
							"name": "onProgress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an optional callback that will be called with the progress of the upload"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 431,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
											"line": 319,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L319"
										}
									],
									"signatures": [
										{
											"id": 432,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
													"line": 319,
													"character": 15,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L319"
												}
											],
											"parameters": [
												{
													"id": 433,
													"name": "progress",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../sdk/src/evm/types/events.ts",
															"qualifiedName": "UploadProgressEvent"
														},
														"name": "UploadProgressEvent",
														"package": "@thirdweb-dev/sdk"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 451,
			"name": "useListing",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 60,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L60"
				}
			],
			"signatures": [
				{
					"id": 452,
					"name": "useListing",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get a listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0; // the listing id to check\nconst { data: listing, isLoading, error } = useListing(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the desired listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselisting?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 60,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L60"
						}
					],
					"parameters": [
						{
							"id": 453,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 454,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/marketplace/AuctionListing.ts",
											"qualifiedName": "AuctionListing"
										},
										"name": "AuctionListing",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/marketplace/DirectListing.ts",
											"qualifiedName": "DirectListing"
										},
										"name": "DirectListing",
										"package": "@thirdweb-dev/sdk"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 463,
			"name": "useListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 166,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L166"
				}
			],
			"signatures": [
				{
					"id": 464,
					"name": "useListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: listings, isLoading, error } = useListings(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of listings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselistings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 166,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L166"
						}
					],
					"parameters": [
						{
							"id": 465,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 466,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/types/marketplace/AuctionListing.ts",
												"qualifiedName": "AuctionListing"
											},
											"name": "AuctionListing",
											"package": "@thirdweb-dev/sdk"
										},
										{
											"type": "reference",
											"target": {
												"sourceFileName": "../sdk/src/evm/types/marketplace/DirectListing.ts",
												"qualifiedName": "DirectListing"
											},
											"name": "DirectListing",
											"package": "@thirdweb-dev/sdk"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 483,
			"name": "useListingsCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 336,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L336"
				}
			],
			"signatures": [
				{
					"id": 484,
					"name": "useListingsCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total count of listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: listingsCount, isLoading, error } = useListingsCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the listing count"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselistingscount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 336,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L336"
						}
					],
					"parameters": [
						{
							"id": 485,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 869,
			"name": "useLogin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/auth/useLogin.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogin.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 870,
					"name": "useLogin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to securely login to a backend with the connected wallet. The backend\nauthentication URL must be configured on the ThirdwebProvider."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- A function to invoke to login with the connected wallet, and an isLoading state."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselogin?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/auth/useLogin.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogin.ts#L18"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 871,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 875,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useLogin.ts",
											"line": 87,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogin.ts#L87"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "login.isLoading"
								},
								{
									"id": 872,
									"name": "login",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useLogin.ts",
											"line": 86,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogin.ts#L86"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 873,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/auth/useLogin.ts",
													"line": 86,
													"character": 11,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogin.ts#L86"
												}
											],
											"signatures": [
												{
													"id": 874,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/auth/useLogin.ts",
															"line": 86,
															"character": 11,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogin.ts#L86"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									},
									"defaultValue": "..."
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [875, 872]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/auth/useLogin.ts",
									"line": 85,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogin.ts#L85"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 876,
			"name": "useLogout",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/auth/useLogout.ts",
					"line": 16,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogout.ts#L16"
				}
			],
			"signatures": [
				{
					"id": 877,
					"name": "useLogout",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to logout the connected wallet from the backend.\nThe backend logout URL must be configured on the ThirdwebProvider."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- A function to invoke to logout."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.uselogout?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/auth/useLogout.ts",
							"line": 16,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogout.ts#L16"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 878,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 880,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useLogout.ts",
											"line": 41,
											"character": 39,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogout.ts#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "logout.isLoading"
								},
								{
									"id": 879,
									"name": "logout",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useLogout.ts",
											"line": 41,
											"character": 11,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogout.ts#L41"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
											"qualifiedName": "UseMutateAsyncFunction"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											},
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "UseMutateAsyncFunction",
										"package": "@tanstack/react-query"
									},
									"defaultValue": "logout.mutateAsync"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [880, 879]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/auth/useLogout.ts",
									"line": 41,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useLogout.ts#L41"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 543,
			"name": "useMakeBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 1103,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1103"
				}
			],
			"signatures": [
				{
					"id": 544,
					"name": "useMakeBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Make a bid on an auction listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: makeBid,\n    isLoading,\n    error,\n  } = useMakeBid(contract);\n\n  if (error) {\n    console.error(\"failed to make a bid\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => makeBid({ listingId: 1, bid: 2 })}\n    >\n      Bid!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to make a bid on an auction listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemakebid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 1103,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1103"
						}
					],
					"parameters": [
						{
							"id": 545,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 546,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/marketplace-auction.d.ts",
													"line": 160,
													"character": 80
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1089,
								"name": "MakeBidParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 547,
			"name": "useMakeOffer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 1161,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1161"
				}
			],
			"signatures": [
				{
					"id": 548,
					"name": "useMakeOffer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Nake an offer on a direct or auction listing"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: makeOffer,\n    isLoading,\n    error,\n  } = useMakeOffer(contract);\n\n  if (error) {\n    console.error(\"failed to make a bid\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => makeOffer({ listingId: 1, pricePerToken: 0.5, quantity: 1 })}\n    >\n      Bid!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to make a bid on an auction listing"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemakeoffer?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 1161,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L1161"
						}
					],
					"parameters": [
						{
							"id": 549,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 550,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/contracts/prebuilt-implementations/marketplace.d.ts",
													"line": 299,
													"character": 117
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1093,
								"name": "MakeOfferParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 911,
			"name": "useMarketplace",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useMarketplace.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useMarketplace.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 912,
					"name": "useMarketplace",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Marketplace`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is used to support marketplace for purchase and sale of on-chain assets."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"marketplace\")\n\n  // Now you can use the marketplace contract in the rest of the component\n\n  // For example, this function will return all the listings on the marketplace\n  async function getListings() {\n    const listings = await contract.getAll()\n    return listings\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const marketplace = useMarketplace(\"0x1234...\");\n+ const marketplace = useContract(\"0x1234...\", \"marketplace\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useMarketplace.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useMarketplace.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 913,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Marketplace contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
									"qualifiedName": "Marketplace"
								},
								"name": "Marketplace",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 291,
			"name": "useMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 334,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L334"
				}
			],
			"signatures": [
				{
					"id": 292,
					"name": "useMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: metadata, isLoading, error } = useMetadata(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "CustomContractMetadata",
										"target": {
											"sourceFileName": "../sdk/src/evm/schema/contracts/custom.ts",
											"qualifiedName": "CustomContractMetadata"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " object containing the metadata"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemetadata?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 334,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L334"
						}
					],
					"parameters": [
						{
							"id": 293,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 512,
			"name": "useMinimumNextBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 641,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L641"
				}
			],
			"signatures": [
				{
					"id": 513,
					"name": "useMinimumNextBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the minimum next bid for an english auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: minimumNextBid, isLoading, error } = useMinimumNextBid(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the minimum next bid for the auction listing"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAucton"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useminimumnextbid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 641,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L641"
						}
					],
					"parameters": [
						{
							"id": 514,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
													"qualifiedName": "Marketplace"
												},
												"name": "Marketplace",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
													"qualifiedName": "MarketplaceV3"
												},
												"name": "MarketplaceV3",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 515,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 516,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/evm/schema/contracts/common/currency.d.ts",
											"line": 27,
											"character": 26
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 730,
			"name": "useMintNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 396,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L396"
				}
			],
			"signatures": [
				{
					"id": 731,
					"name": "useMintNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mint an NFT to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: mintNft,\n    isLoading,\n    error,\n  } = useMintNFT(contract);\n\n  if (error) {\n    console.error(\"failed to mint NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => mintNft({ name: \"My awesome NFT!\", to: \"{{wallet_address}}\" })}\n    >\n      Mint!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to mint a new NFT token to the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Mintable | ERC1155Mintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemintnft?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 396,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L396"
						}
					],
					"typeParameter": [
						{
							"id": 732,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1043,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 733,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": 1065,
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "MintNFTReturnType",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1060,
								"name": "MintNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 734,
			"name": "useMintNFTSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 468,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L468"
				}
			],
			"signatures": [
				{
					"id": 735,
					"name": "useMintNFTSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Increase the supply of an existing NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: mintNftSupply,\n    isLoading,\n    error,\n  } = useMintNFTSupply(contract);\n\n  if (error) {\n    console.error(\"failed to mint additional supply\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => mintNftSupply({ tokenId: 0, additionalSupply: 100, to: \"{{wallet_address}}\"})}\n    >\n      Mint Additional Supply!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to mint a more supply of a token id to the provided wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC1155Mintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usemintnftsupply?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 468,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L468"
						}
					],
					"parameters": [
						{
							"id": 736,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Erc1155",
										"target": {
											"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
											"qualifiedName": "Erc1155"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
									"qualifiedName": "Erc1155"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseERC1155"
												},
												"name": "BaseERC1155",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/types/eips.ts",
													"qualifiedName": "BaseSignatureMintERC1155"
												},
												"name": "BaseSignatureMintERC1155",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "Erc1155",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResultWithId"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/core/schema/nft.ts",
											"qualifiedName": "NFT"
										},
										"name": "NFT",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "TransactionResultWithId",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1055,
								"name": "MintNFTSupplyParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 813,
			"name": "useMintToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 167,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L167"
				}
			],
			"signatures": [
				{
					"id": 814,
					"name": "useMintToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Mint tokens"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: mintTokens,\n    isLoading,\n    error,\n  } = useMintToken(contract);\n\n  if (error) {\n    console.error(\"failed to mint tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => mintTokens({ to: \"{{wallet_address}}\", amount: 1000 })}\n    >\n      Mint!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to mint new tokens to the connected wallet"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20Mintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useminttoken?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 167,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L167"
						}
					],
					"parameters": [
						{
							"id": 815,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 816,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 818,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
															"line": 173,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L173"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 819,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
																	"line": 173,
																	"character": 12,
																	"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L173"
																}
															],
															"signatures": [
																{
																	"id": 820,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 817,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
															"line": 172,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L172"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [818, 817]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
													"line": 171,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L171"
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1036,
								"name": "TokenParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 932,
			"name": "useMultiwrap",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useMultiwrap.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useMultiwrap.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 933,
					"name": "useMultiwrap",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`Multiwrap`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is an ERC721 in which you can wrap ERC721, ERC1155 and ERC20 tokens."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"multiwrap\")\n\n  // Now you can use the multiwrap contract in the rest of the component\n\n  // For example, this function will let the connected wallet wrap tokens\n  async function wrap(tokensToWrap, wrappedNFTMetadata) {\n    await contract.wrap(tokensToWrap, wrappedNFTMetadata)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const multiwrap = useMultiwrap(\"0x1234...\");\n+ const multiwrap = useContract(\"0x1234...\", \"multiwrap\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useMultiwrap.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useMultiwrap.ts#L34"
						}
					],
					"parameters": [
						{
							"id": 934,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Multiwrap contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/multiwrap.ts",
									"qualifiedName": "Multiwrap"
								},
								"name": "Multiwrap",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 699,
			"name": "useNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 52,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L52"
				}
			],
			"signatures": [
				{
					"id": 700,
					"name": "useNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get a single NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst tokenId = 0; // the tokenId to look up\nconst { data: nft, isLoading, error } = useNFT(contract, tokenId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the metadata for the given tokenId"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721 | ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenft?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 52,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L52"
						}
					],
					"typeParameter": [
						{
							"id": 701,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1043,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 702,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 703,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the tokenId to look up"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/core/schema/nft.ts",
									"qualifiedName": "NFT"
								},
								"name": "NFT",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 725,
			"name": "useNFTBalance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 282,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L282"
				}
			],
			"signatures": [
				{
					"id": 726,
					"name": "useNFTBalance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get NFT balance of a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: ownerBalance, isLoading, error } = useNFTBalance(contract, \"{{wallet_address}}\");\n// for ERC1155 contracts, you can also pass a tokenId\nconst tokenId = 0;\nconst { data: ownerBalance, isLoading, error } = useNFTBalance(contract, \"{{wallet_address}}\", tokenId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total balance of the owner"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721 | ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenftbalance?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 282,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L282"
						}
					],
					"parameters": [
						{
							"id": 727,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1043,
										"name": "NFTContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 728,
							"name": "ownerWalletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the wallet address to check the balance of"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 729,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "required for ERC1155, the tokenId to look up"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 914,
			"name": "useNFTCollection",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useNFTCollection.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useNFTCollection.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 915,
					"name": "useNFTCollection",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`NFTCollection`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is meant to interface with ERC721 compliant NFTs."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract, isLoading, error } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"nft-collection\")\n\n  // Now you can use the nftCollection contract in the rest of the component\n\n  // For example, this function will return all the NFTs on this contract\n  async function getNFTs() {\n    const nfts = await contract.getAll()\n    return nfts\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const nftCollection = useNFTCollection(\"0x1234...\");\n+ const nftCollection = useContract(\"0x1234...\", \"nft-collection\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useNFTCollection.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useNFTCollection.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 916,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the NFT Collection contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-collection.ts",
									"qualifiedName": "NFTCollection"
								},
								"name": "NFTCollection",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 908,
			"name": "useNFTDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useNFTDrop.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useNFTDrop.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 909,
					"name": "useNFTDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`NFTDrop`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is meant to interface with ERC721 compliant NFTs that can be lazily minted."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"nft-drop\")\n\n  // Now you can use the nft drop contract in the rest of the component\n\n  // For example, this function will let the connected wallet claim a new NFT\n  async function claim(quantity) {\n    await contract.claim(quantity)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const nftDrop = useNFTDrop(\"0x1234...\");\n+ const nftDrop = useContract(\"0x1234...\", \"nft-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useNFTDrop.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useNFTDrop.ts#L34"
						}
					],
					"parameters": [
						{
							"id": 910,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the NFT Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
									"qualifiedName": "NFTDrop"
								},
								"name": "NFTDrop",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 704,
			"name": "useNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 94,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L94"
				}
			],
			"signatures": [
				{
					"id": 705,
					"name": "useNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: nfts, isLoading, error } = useNFTs(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Supply | ERC721Enumerable | ERC1155Enumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenfts?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 94,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L94"
						}
					],
					"typeParameter": [
						{
							"id": 706,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1043,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 707,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 708,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 709,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 74,
			"name": "useNetwork",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/useNetwork.ts",
					"line": 56,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/useNetwork.ts#L56"
				}
			],
			"signatures": [
				{
					"id": 75,
					"name": "useNetwork",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting metadata about the network the current wallet is connected to and switching networks\n\nIt's important to note that some wallet apps do not support programmatic network switching and switchNetwork will be undefined.\nFor those situations, you can typically switch networks in the wallet app this hook will still work."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useNetwork } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  const [, switchNetwork] = useNetwork();\n  return (\n     // switchNetwork is undefined if the wallet does not support programmatic network switching\n     // 137 is the chainId for Polygon in this example\n    <button onClick={() => switchNetwork(137)}>\n       Switch Network\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "- use "
									},
									{
										"kind": "code",
										"text": "`useChain`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`useSwitchChain`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`useChainId`"
									},
									{
										"kind": "text",
										"text": " instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/useNetwork.ts",
							"line": 56,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/useNetwork.ts#L56"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/hooks/useNetwork.ts",
									"qualifiedName": "NetworkMetadata"
								},
								"name": "NetworkMetadata",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/core/hooks/useNetwork.ts",
											"qualifiedName": "SwitchNetwork"
										},
										"name": "SwitchNetwork",
										"package": "@thirdweb-dev/react-core"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						]
					}
				}
			]
		},
		{
			"id": 944,
			"name": "useNetworkMismatch",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/useNetworkMismatch.ts",
					"line": 31,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useNetworkMismatch.ts#L31"
				}
			],
			"signatures": [
				{
					"id": 945,
					"name": "useNetworkMismatch",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for checking whether the connected wallet is on the correct network specified by the "
							},
							{
								"kind": "code",
								"text": "`network`"
							},
							{
								"kind": "text",
								"text": " passed to the "
							},
							{
								"kind": "code",
								"text": "`<ThirdwebProvider />`"
							},
							{
								"kind": "text",
								"text": ".\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useNetworkMismatch } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the chainId of the connected wallet is different from the chainId of the network passed into "
									},
									{
										"kind": "code",
										"text": "`<ThirdwebProvider />`"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usenetworkmismatch?utm_source=sdk"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can check if a users wallet is connected to the correct chain ID as follows:\n"
									},
									{
										"kind": "code",
										"text": "```javascript\nimport { useNetworkMismatch } from \"@thirdweb-dev/react\"\n\nconst App = () => {\n  const isMismatched = useNetworkMismatch()\n\n  return <div>{isMismatched}</div>\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nFrom here, you can prompt users to switch their network using the "
									},
									{
										"kind": "code",
										"text": "`useNetwork`"
									},
									{
										"kind": "text",
										"text": " hook."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/useNetworkMismatch.ts",
							"line": 31,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useNetworkMismatch.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 559,
			"name": "useOffers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 692,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L692"
				}
			],
			"signatures": [
				{
					"id": 560,
					"name": "useOffers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all the offers for a listing"
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "Fetch all the offers for a specified direct or auction listing."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: offers, isLoading, error } = useOffers(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useoffers?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 692,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L692"
						}
					],
					"parameters": [
						{
							"id": 561,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a Marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 562,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the id of the listing to fetch offers for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reflection",
								"declaration": {
									"id": 563,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 564,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
													"line": 699,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L699"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 572,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 565,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 275,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 576,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 233,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 573,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 230,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 574,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 231,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 575,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 232,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 594,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 251,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
													"qualifiedName": "FetchStatus"
												},
												"name": "FetchStatus",
												"package": "@tanstack/query-core"
											}
										},
										{
											"id": 566,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 276,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 577,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 235,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 578,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 236,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 579,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 237,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 580,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 240,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 567,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 277,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 568,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 278,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 581,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 241,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 582,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 242,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 583,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 243,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 569,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 279,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 584,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 245,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 585,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 246,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 570,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 280,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 586,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 248,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 587,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 248,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 588,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 248,
																	"character": 13
																}
															],
															"typeParameter": [
																{
																	"id": 589,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {
																		"isExternal": true
																	}
																}
															],
															"parameters": [
																{
																	"id": 590,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchOptions"
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/query-core"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchQueryFilters"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": -1,
																						"name": "TPageData",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/query-core"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																			"qualifiedName": "QueryObserverResult"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../sdk/src/evm/types/events.ts",
																						"qualifiedName": "ContractEvent"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Record"
																							},
																							"typeArguments": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "any"
																								}
																							],
																							"name": "Record",
																							"package": "typescript"
																						}
																					],
																					"name": "ContractEvent",
																					"package": "@thirdweb-dev/sdk"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "QueryObserverResult",
																		"package": "@tanstack/query-core"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 591,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 249,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 592,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 249,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 593,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 249,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 571,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 281,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												564, 572, 565, 576, 573, 574, 575, 594, 566, 577, 578,
												579, 580, 567, 568, 581, 582, 583, 569, 584, 585, 570,
												586, 591, 571
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
											"line": 697,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L697"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 595,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 596,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
													"line": 699,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L699"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 604,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 597,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 285,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										},
										{
											"id": 608,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 233,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 605,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 230,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 606,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 231,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 607,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 232,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 626,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 251,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
													"qualifiedName": "FetchStatus"
												},
												"name": "FetchStatus",
												"package": "@tanstack/query-core"
											}
										},
										{
											"id": 598,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 286,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 609,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 235,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 610,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 236,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 611,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 237,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 612,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 240,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 599,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 287,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 600,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 288,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 613,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 241,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 614,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 242,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 615,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 243,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 601,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 289,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 616,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 245,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 617,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 246,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 602,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 290,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 618,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 248,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 619,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 248,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 620,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 248,
																	"character": 13
																}
															],
															"typeParameter": [
																{
																	"id": 621,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {
																		"isExternal": true
																	}
																}
															],
															"parameters": [
																{
																	"id": 622,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchOptions"
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/query-core"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchQueryFilters"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": -1,
																						"name": "TPageData",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/query-core"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																			"qualifiedName": "QueryObserverResult"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../sdk/src/evm/types/events.ts",
																						"qualifiedName": "ContractEvent"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Record"
																							},
																							"typeArguments": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "any"
																								}
																							],
																							"name": "Record",
																							"package": "typescript"
																						}
																					],
																					"name": "ContractEvent",
																					"package": "@thirdweb-dev/sdk"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "QueryObserverResult",
																		"package": "@tanstack/query-core"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 623,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 249,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 624,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 249,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 625,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 249,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 603,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 291,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "success"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												596, 604, 597, 608, 605, 606, 607, 626, 598, 609, 610,
												611, 612, 599, 600, 613, 614, 615, 601, 616, 617, 602,
												618, 623, 603
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
											"line": 697,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L697"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 627,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 628,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
													"line": 699,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L699"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 636,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 629,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 265,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 640,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 233,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 637,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 230,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 638,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 231,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 639,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 232,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 658,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 251,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
													"qualifiedName": "FetchStatus"
												},
												"name": "FetchStatus",
												"package": "@tanstack/query-core"
											}
										},
										{
											"id": 630,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 266,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 641,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 235,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 642,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 236,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 643,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 237,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 644,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 240,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 631,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 267,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 632,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 268,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 645,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 241,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 646,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 242,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 647,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 243,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 633,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 269,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 648,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 245,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 649,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 246,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 634,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 270,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 650,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 248,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 651,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 248,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 652,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 248,
																	"character": 13
																}
															],
															"typeParameter": [
																{
																	"id": 653,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {
																		"isExternal": true
																	}
																}
															],
															"parameters": [
																{
																	"id": 654,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchOptions"
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/query-core"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchQueryFilters"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": -1,
																						"name": "TPageData",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/query-core"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																			"qualifiedName": "QueryObserverResult"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../sdk/src/evm/types/events.ts",
																						"qualifiedName": "ContractEvent"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Record"
																							},
																							"typeArguments": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "any"
																								}
																							],
																							"name": "Record",
																							"package": "typescript"
																						}
																					],
																					"name": "ContractEvent",
																					"package": "@thirdweb-dev/sdk"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "QueryObserverResult",
																		"package": "@tanstack/query-core"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 655,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 249,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 656,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 249,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 657,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 249,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 635,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 271,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "error"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												628, 636, 629, 640, 637, 638, 639, 658, 630, 641, 642,
												643, 644, 631, 632, 645, 646, 647, 633, 648, 649, 634,
												650, 655, 635
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
											"line": 697,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L697"
										}
									]
								}
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 659,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 660,
											"name": "data",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
													"line": 699,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L699"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																"qualifiedName": "Record"
															},
															"typeArguments": [
																{
																	"type": "intrinsic",
																	"name": "string"
																},
																{
																	"type": "intrinsic",
																	"name": "any"
																}
															],
															"name": "Record",
															"package": "typescript"
														}
													}
												]
											},
											"defaultValue": "..."
										},
										{
											"id": 668,
											"name": "dataUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 228,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 661,
											"name": "error",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 255,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": null
											}
										},
										{
											"id": 672,
											"name": "errorUpdateCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 233,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 669,
											"name": "errorUpdatedAt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 230,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 670,
											"name": "failureCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 231,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 671,
											"name": "failureReason",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 232,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "unknown"
											}
										},
										{
											"id": 690,
											"name": "fetchStatus",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 251,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
													"qualifiedName": "FetchStatus"
												},
												"name": "FetchStatus",
												"package": "@tanstack/query-core"
											}
										},
										{
											"id": 662,
											"name": "isError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 256,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 673,
											"name": "isFetched",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 235,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 674,
											"name": "isFetchedAfterMount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 236,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 675,
											"name": "isFetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 237,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 676,
											"name": "isInitialLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 240,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 663,
											"name": "isLoading",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 257,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": true
											}
										},
										{
											"id": 664,
											"name": "isLoadingError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 258,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 677,
											"name": "isPaused",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 241,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 678,
											"name": "isPlaceholderData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 242,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 679,
											"name": "isPreviousData",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 243,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 665,
											"name": "isRefetchError",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 259,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 680,
											"name": "isRefetching",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 245,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 681,
											"name": "isStale",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 246,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 666,
											"name": "isSuccess",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 260,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": false
											}
										},
										{
											"id": 682,
											"name": "refetch",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 248,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 683,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 248,
															"character": 13
														}
													],
													"signatures": [
														{
															"id": 684,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 248,
																	"character": 13
																}
															],
															"typeParameter": [
																{
																	"id": 685,
																	"name": "TPageData",
																	"variant": "typeParam",
																	"kind": 131072,
																	"flags": {
																		"isExternal": true
																	}
																}
															],
															"parameters": [
																{
																	"id": 686,
																	"name": "options",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {
																		"isExternal": true,
																		"isOptional": true
																	},
																	"type": {
																		"type": "intersection",
																		"types": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchOptions"
																				},
																				"name": "RefetchOptions",
																				"package": "@tanstack/query-core"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																					"qualifiedName": "RefetchQueryFilters"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": -1,
																						"name": "TPageData",
																						"refersToTypeParameter": true
																					}
																				],
																				"name": "RefetchQueryFilters",
																				"package": "@tanstack/query-core"
																			}
																		]
																	}
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																	"qualifiedName": "Promise"
																},
																"typeArguments": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
																			"qualifiedName": "QueryObserverResult"
																		},
																		"typeArguments": [
																			{
																				"type": "array",
																				"elementType": {
																					"type": "reference",
																					"target": {
																						"sourceFileName": "../sdk/src/evm/types/events.ts",
																						"qualifiedName": "ContractEvent"
																					},
																					"typeArguments": [
																						{
																							"type": "reference",
																							"target": {
																								"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																								"qualifiedName": "Record"
																							},
																							"typeArguments": [
																								{
																									"type": "intrinsic",
																									"name": "string"
																								},
																								{
																									"type": "intrinsic",
																									"name": "any"
																								}
																							],
																							"name": "Record",
																							"package": "typescript"
																						}
																					],
																					"name": "ContractEvent",
																					"package": "@thirdweb-dev/sdk"
																				}
																			},
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "QueryObserverResult",
																		"package": "@tanstack/query-core"
																	}
																],
																"name": "Promise",
																"package": "typescript"
															}
														}
													]
												}
											}
										},
										{
											"id": 687,
											"name": "remove",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 249,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 688,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
															"line": 249,
															"character": 12
														}
													],
													"signatures": [
														{
															"id": 689,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {
																"isExternal": true
															},
															"sources": [
																{
																	"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
																	"line": 249,
																	"character": 12
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 667,
											"name": "status",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/build/lib/types.d.ts",
													"line": 261,
													"character": 4
												}
											],
											"type": {
												"type": "literal",
												"value": "loading"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												660, 668, 661, 672, 669, 670, 671, 690, 662, 673, 674,
												675, 676, 663, 664, 677, 678, 679, 665, 680, 681, 666,
												682, 687, 667
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
											"line": 697,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L697"
										}
									]
								}
							}
						]
					}
				}
			]
		},
		{
			"id": 718,
			"name": "useOwnedNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 237,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L237"
				}
			],
			"signatures": [
				{
					"id": 719,
					"name": "useOwnedNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all NFTs owned by a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: ownedNFTs, isLoading, error } = useOwnedNFTs(contract, \"{{wallet_address}}\", { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the list of owned tokens"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Enumerable | ERC1155Enumerable | ERC721Supply"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useownednfts?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 237,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L237"
						}
					],
					"typeParameter": [
						{
							"id": 720,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1043,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 721,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 722,
							"name": "ownerWalletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the wallet address to get owned tokens for"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 723,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 724,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 917,
			"name": "usePack",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/usePack.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/usePack.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 918,
					"name": "usePack",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Pack`"
							},
							{
								"kind": "text",
								"text": " contract. This contract supports the creation of on-chain luck-based lootboxes."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = usePack(\"<YOUR-CONTRACT-ADDRESS>\", \"pack\")\n\n  // Now you can use the pack contract in the rest of the component\n\n  // For example, this function will get all the packs on this contract\n  async function getPacks() {\n    const packs = await contract.getAll()\n    return packs\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const pack = usePack(\"0x1234...\");\n+ const pack = useContract(\"0x1234...\", \"pack\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/usePack.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/usePack.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 919,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Pack contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/pack.ts",
									"qualifiedName": "Pack"
								},
								"name": "Pack",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 78,
			"name": "usePersonalWalletAddress",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/usePersonalWalletAddress.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/usePersonalWalletAddress.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 79,
					"name": "usePersonalWalletAddress",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/usePersonalWalletAddress.ts",
							"line": 4,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/usePersonalWalletAddress.ts#L4"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			]
		},
		{
			"id": 280,
			"name": "usePlatformFees",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 239,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L239"
				}
			],
			"signatures": [
				{
					"id": 281,
					"name": "usePlatformFees",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the platform fee recipient and basis points"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: platformFees, isLoading, error } = usePlatformFees(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "an object containing the platform fee basis points and the fee recipient address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PlatformFee"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useplatformfees?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 239,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L239"
						}
					],
					"parameters": [
						{
							"id": 282,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 283,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/contract-platform-fee.d.ts",
											"line": 34,
											"character": 19
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 261,
			"name": "usePrimarySaleRecipient",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 41,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L41"
				}
			],
			"signatures": [
				{
					"id": 262,
					"name": "usePrimarySaleRecipient",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the primary sale recipient"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: primarySaleRecipient, isLoading, error } = usePrimarySalesRecipient(contract);\n```"
									},
									{
										"kind": "text",
										"text": "\n\nUse this to get the primary sales recipient of your "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the wallet address of the primary sales recipient"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PrimarySale"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useprimarysalerecipient?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 41,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L41"
						}
					],
					"parameters": [
						{
							"id": 263,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 857,
			"name": "useRemoveAdmin",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
					"line": 289,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L289"
				}
			],
			"signatures": [
				{
					"id": 858,
					"name": "useRemoveAdmin",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Add an additional admin on the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: removeAdmin,\n    isLoading,\n    error,\n  } = useRemoveAdmin();\n\n  if (error) {\n    console.error(\"failed to remove admin\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => removeAdmin(\"0x...\")}\n    >\n      Remove admin\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
							"line": 289,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L289"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 256,
			"name": "useResetClaimConditions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 542,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L542"
				}
			],
			"signatures": [
				{
					"id": 257,
					"name": "useResetClaimConditions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reset claim conditions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: resetClaimConditions,\n    isLoading,\n    error,\n  } = useResetClaimConditions(contract);\n\n  if (error) {\n    console.error(\"failed to reset claim conditions\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={resetClaimConditions}\n    >\n      Reset Claim Conditions\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to reset claim conditions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 542,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L542"
						}
					],
					"parameters": [
						{
							"id": 258,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1071,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1071,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 259,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 260,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/drop-erc1155-claim-conditions.d.ts",
													"line": 132,
													"character": 62
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 442,
			"name": "useRevealLazyMint",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 469,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L469"
				}
			],
			"signatures": [
				{
					"id": 443,
					"name": "useRevealLazyMint",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reveal a batch of delayed reveal NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: revealLazyMint,\n    isLoading,\n    error,\n  } = useRevealLazyMint(contract);\n\n  if (error) {\n    console.error(\"failed to reveal batch\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => revealLazyMint({ batchId: \"0\", password: \"my-password\" })}\n    >\n      Reveal batch!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to reveal a batch of delayed reveal NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Revealable | ERC1155Revealable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usereveallazymint?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 469,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L469"
						}
					],
					"typeParameter": [
						{
							"id": 444,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1072,
								"name": "RevealableContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 445,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "RevealableContract",
										"target": 1072,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 446,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 448,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
															"line": 475,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L475"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 449,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
																	"line": 475,
																	"character": 12,
																	"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L475"
																}
															],
															"signatures": [
																{
																	"id": 450,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 447,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
															"line": 474,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L474"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [448, 447]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
													"line": 473,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L473"
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1078,
								"name": "RevealLazyMintInput",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 790,
			"name": "useRevokeRole",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
					"line": 307,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L307"
				}
			],
			"signatures": [
				{
					"id": 791,
					"name": "useRevokeRole",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Revoke a role from a specific address"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: revokeRole,\n    isLoading,\n    error,\n  } = useRevokeRole(contract);\n\n  if (error) {\n    console.error(\"failed to revoke role\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => revokeRole({ role: \"admin\", address: {{wallet_address}} })}\n    >\n      Revoke Role\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to revoke a role from a member on the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions | PermissionsEnumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.userevokerole?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
							"line": 307,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L307"
						}
					],
					"typeParameter": [
						{
							"id": 792,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 793,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 794,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 796,
											"name": "address",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
													"line": 316,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L316"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 795,
											"name": "role",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
													"line": 315,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L315"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/evm/hooks/async/roles.ts",
													"qualifiedName": "RolesForContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TContract",
														"refersToTypeParameter": true
													}
												],
												"name": "RolesForContract",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [796, 795]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
											"line": 314,
											"character": 19,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L314"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 861,
			"name": "useRevokeSessionKey",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
					"line": 207,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L207"
				}
			],
			"signatures": [
				{
					"id": 862,
					"name": "useRevokeSessionKey",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Revoke a session key on the smart wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: revokeSessionKey,\n    isLoading,\n    error,\n  } = useRevokeSessionKey();\n\n  if (error) {\n    console.error(\"failed to revoke session key\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => revokeSessionKey(\"0x...\")}\n    >\n      Revoke Session Key\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Account"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/account.ts",
							"line": 207,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/account.ts#L207"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/types.ts",
									"qualifiedName": "TransactionResult"
								},
								"name": "TransactionResult",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 768,
			"name": "useRoleMembers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
					"line": 93,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L93"
				}
			],
			"signatures": [
				{
					"id": 769,
					"name": "useRoleMembers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all members of a specific role"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: members, isLoading, error } = useRoleMembers(SmartContract, \"admin\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a list of addresses that are members of the role"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.userolemembers?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
							"line": 93,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L93"
						}
					],
					"typeParameter": [
						{
							"id": 770,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 771,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 772,
							"name": "role",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the role to get the members of, see "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Role",
										"target": {
											"sourceFileName": "../sdk/src/evm/common/role.ts",
											"qualifiedName": "Role"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "RolesForContract"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RolesForContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 269,
			"name": "useRoyaltySettings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 142,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L142"
				}
			],
			"signatures": [
				{
					"id": 270,
					"name": "useRoyaltySettings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the royalty recipient and fee"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst { data: settings, isLoading, error } = useRoyaltySettings(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "an object containing recipient address and the royalty basis points"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Royalty"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useroyaltysettings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 142,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L142"
						}
					],
					"parameters": [
						{
							"id": 271,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 272,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/contract-royalty.d.ts",
											"line": 38,
											"character": 37
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 982,
			"name": "useSDK",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/useSDK.ts",
					"line": 28,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useSDK.ts#L28"
				}
			],
			"signatures": [
				{
					"id": 983,
					"name": "useSDK",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "ThirdwebSDK"
									},
									{
										"kind": "text",
										"text": "\nAccess the instance of the thirdweb SDK created by the ThirdwebProvider\nto call methods using the connected wallet on the desiredChainId."
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst sdk = useSDK();\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/useSDK.ts",
							"line": 28,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useSDK.ts#L28"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/core/sdk.ts",
									"qualifiedName": "ThirdwebSDK"
								},
								"name": "ThirdwebSDK",
								"package": "@thirdweb-dev/sdk"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 779,
			"name": "useSetAllRoleMembers",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
					"line": 188,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L188"
				}
			],
			"signatures": [
				{
					"id": 780,
					"name": "useSetAllRoleMembers",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Overwrite the list of members for specific roles"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: overwriteRoles,\n    isLoading,\n    error,\n  } = useSetAllRoleMembers(contract);\n\n  if (error) {\n    console.error(\"failed to overwrite roles\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => overwriteRoles({ rolesWithAddresses: { minter: [\"{{wallet_address}\"] } })}\n    >\n      Overwrite Roles\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to overwrite all roles on the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Permissions"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/roles.ts",
							"line": 188,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/roles.ts#L188"
						}
					],
					"typeParameter": [
						{
							"id": 781,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/async/roles.ts",
									"qualifiedName": "ContractWithRoles"
								},
								"name": "ContractWithRoles",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 782,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "void"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "mapped",
								"parameter": "role",
								"parameterType": {
									"type": "intrinsic",
									"name": "any"
								},
								"templateType": {
									"type": "array",
									"elementType": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 963,
			"name": "useSetAppURI",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
					"line": 78,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L78"
				}
			],
			"signatures": [
				{
					"id": 964,
					"name": "useSetAppURI",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set App URI"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const {\n    mutate: useSetAppURI,\n    isLoading,\n    error,\n  } = useSetAppURI(contract);\n\n  if (error) {\n    console.error(\"failed to update appURI\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => useSetAppURI({ uri })}\n    >\n      Update App URI\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the appURI of a contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "AppUR"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
							"line": 78,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L78"
						}
					],
					"parameters": [
						{
							"id": 965,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 966,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 968,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
															"line": 84,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L84"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 969,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
																	"line": 84,
																	"character": 12,
																	"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L84"
																}
															],
															"signatures": [
																{
																	"id": 970,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 967,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
															"line": 83,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L83"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [968, 967]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
													"line": 82,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L82"
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 971,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 972,
											"name": "uri",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
													"line": 90,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L90"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [972]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/app.ts",
											"line": 89,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/app.ts#L89"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 250,
			"name": "useSetClaimConditions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
					"line": 464,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L464"
				}
			],
			"signatures": [
				{
					"id": 251,
					"name": "useSetClaimConditions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set claim conditions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: setClaimConditions,\n    isLoading,\n    error,\n  } = useSetClaimConditions(contract);\n\n  if (error) {\n    console.error(\"failed to set claim conditions\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => setClaimConditions({ phases: [{ price: 2, maxClaimableSupply: 100 }] })}\n    >\n      Set Claim Conditions!\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to set claim conditions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20ClaimPhasesV2 | ERC20ClaimPhasesV1 | ERC20ClaimConditionsV2 | ERC20ClaimConditionsV1 | ERC721ClaimPhasesV2 | ERC721ClaimPhasesV1 | ERC721ClaimConditionsV2 | ERC721ClaimConditionsV1 | ERC1155ClaimPhasesV2 | ERC1155ClaimPhasesV1 | ERC1155ClaimConditionsV2 | ERC1155ClaimConditionsV1"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usesetclaimconditions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
							"line": 464,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L464"
						}
					],
					"parameters": [
						{
							"id": 252,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "DropContract",
										"target": 1071,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1071,
										"name": "DropContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 253,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumberish"
								},
								"name": "BigNumberish",
								"package": "@ethersproject/bignumber"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 254,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 255,
											"name": "receipt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
													"line": 468,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L468"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
													"qualifiedName": "TransactionReceipt"
												},
												"name": "providers.TransactionReceipt",
												"package": "@ethersproject/abstract-provider",
												"qualifiedName": "TransactionReceipt"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [255]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/claim-conditions.ts",
											"line": 468,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/claim-conditions.ts#L468"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 219,
								"name": "SetClaimConditionsParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 68,
			"name": "useSetConnectedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 200,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L200"
				}
			],
			"signatures": [
				{
					"id": 69,
					"name": "useSetConnectedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to set a connected wallet instance"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 200,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L200"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 70,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
									"line": 89,
									"character": 22,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L89"
								}
							],
							"signatures": [
								{
									"id": 71,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
											"line": 89,
											"character": 22,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L89"
										}
									],
									"parameters": [
										{
											"id": 72,
											"name": "wallet",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 171,
												"name": "WalletInstance",
												"package": "@thirdweb-dev/react-core"
											}
										},
										{
											"id": 73,
											"name": "params",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/interfaces/connector.ts",
													"qualifiedName": "ConnectParams"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												],
												"name": "ConnectParams",
												"package": "@thirdweb-dev/wallets"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 63,
			"name": "useSetConnectionStatus",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 161,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L161"
				}
			],
			"signatures": [
				{
					"id": 64,
					"name": "useSetConnectionStatus",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to create an instance of given wallet class"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 161,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L161"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 65,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
									"line": 80,
									"character": 23,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L80"
								}
							],
							"signatures": [
								{
									"id": 66,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
											"line": 80,
											"character": 23,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L80"
										}
									],
									"parameters": [
										{
											"id": 67,
											"name": "status",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
													"qualifiedName": "ConnectionStatus"
												},
												"name": "ConnectionStatus",
												"package": "@thirdweb-dev/react-core"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 755,
			"name": "useSharedMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 335,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L335"
				}
			],
			"signatures": [
				{
					"id": 756,
					"name": "useSharedMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the shared metadata of an Open Edition NFT contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: sharedMetadata, isLoading, error } = useSharedMetadata(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the shared metadata of the contract"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721SharedMetadata"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usesharedmetadata?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 335,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L335"
						}
					],
					"parameters": [
						{
							"id": 757,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1043,
										"name": "NFTContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/core/schema/nft.ts",
											"qualifiedName": "BasicNFTInput"
										},
										"name": "BasicNFTInput",
										"package": "@thirdweb-dev/sdk"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 935,
			"name": "useSignatureDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useSignatureDrop.ts",
					"line": 34,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useSignatureDrop.ts#L34"
				}
			],
			"signatures": [
				{
					"id": 936,
					"name": "useSignatureDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`SignatureDrop`"
							},
							{
								"kind": "text",
								"text": " contract. This contract is meant to interface with ERC721 compliant NFTs that can be lazily minted."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"signature-drop\")\n\n  // Now you can use the Signature drop contract in the rest of the component\n\n  // For example, this function will let the connected wallet claim a new NFT\n  async function claim(quantity) {\n    await contract.claim(quantity)\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const signatureDrop = useSignatureDrop(\"0x1234...\");\n+ const signatureDrop = useContract(\"0x1234...\", \"signature-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useSignatureDrop.ts",
							"line": 34,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useSignatureDrop.ts#L34"
						}
					],
					"parameters": [
						{
							"id": 937,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the NFT Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
									"qualifiedName": "SignatureDrop"
								},
								"name": "SignatureDrop",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 929,
			"name": "useSplit",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useSplit.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useSplit.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 930,
					"name": "useSplit",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Split`"
							},
							{
								"kind": "text",
								"text": " contract. This contract supports fund distribution to multiple parties."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"split\")\n\n  // Now you can use the split contract in the rest of the component\n\n  // For example, this function will return all the recipients of the split\n  async function getRecipients() {\n    const recipients = await contract.getAllRecipients()\n    return recipients\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const split = useSplit(\"0x1234...\");\n+ const split = useContract(\"0x1234...\", \"split\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useSplit.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useSplit.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 931,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Split contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/split.ts",
									"qualifiedName": "Split"
								},
								"name": "Split",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 942,
			"name": "useStorage",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/storage/index.ts",
					"line": 10,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/storage/index.ts#L10"
				}
			],
			"signatures": [
				{
					"id": 943,
					"name": "useStorage",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the configured "
							},
							{
								"kind": "code",
								"text": "`ThirdwebStorage`"
							},
							{
								"kind": "text",
								"text": " instance"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The "
									},
									{
										"kind": "code",
										"text": "`storageInterface`"
									},
									{
										"kind": "text",
										"text": " configured on the "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usestorage?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/storage/index.ts",
							"line": 10,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/storage/index.ts#L10"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../storage/src/core/storage.ts",
									"qualifiedName": "ThirdwebStorage"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../storage/src/types/upload.ts",
											"qualifiedName": "IpfsUploadBatchOptions"
										},
										"name": "IpfsUploadBatchOptions",
										"package": "@thirdweb-dev/storage"
									}
								],
								"name": "ThirdwebStorage",
								"package": "@thirdweb-dev/storage"
							}
						]
					}
				}
			]
		},
		{
			"id": 938,
			"name": "useStorageUpload",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/storage/useStorageUpload.ts",
					"line": 40,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/storage/useStorageUpload.ts#L40"
				}
			],
			"signatures": [
				{
					"id": 939,
					"name": "useStorageUpload",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook used to upload any files or JSON data to decentralized storage systems like IPFS,\nusing the "
							},
							{
								"kind": "code",
								"text": "`storageInterface`"
							},
							{
								"kind": "text",
								"text": " configured on the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "Function used to upload files or JSON to decentralized storage systems"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nimport { useStorageUpload } from \"@thirdweb-dev/react\";\n\nexport default function Component() {\n  const { mutateAsync: upload, isLoading } = useStorageUpload();\n\n  async function uploadData() {\n    const filesToUpload = [...];\n    const uris = await upload({ data: files });\n    console.log(uris);\n  }\n\n  return (\n    <button onClick={uploadData}>\n      Upload\n    </button>\n  )\n}\n```"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usestorageupload?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/storage/useStorageUpload.ts",
							"line": 40,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/storage/useStorageUpload.ts#L40"
						}
					],
					"typeParameter": [
						{
							"id": 940,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../storage/src/types/upload.ts",
									"qualifiedName": "UploadOptions"
								},
								"name": "UploadOptions",
								"package": "@thirdweb-dev/storage"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../storage/src/types/upload.ts",
									"qualifiedName": "IpfsUploadBatchOptions"
								},
								"name": "IpfsUploadBatchOptions",
								"package": "@thirdweb-dev/storage"
							}
						}
					],
					"parameters": [
						{
							"id": 941,
							"name": "uploadOptions",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/hooks/storage/useStorageUpload.ts",
									"qualifiedName": "StorageUploadOptions"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "T",
										"refersToTypeParameter": true
									}
								],
								"name": "StorageUploadOptions",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 954,
			"name": "useSupportedChains",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/useSupportedChains.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useSupportedChains.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 955,
					"name": "useSupportedChains",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/useSupportedChains.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useSupportedChains.ts#L5"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			]
		},
		{
			"id": 956,
			"name": "useSupportedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/useSupportedWallet.ts",
					"line": 3,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useSupportedWallet.ts#L3"
				}
			],
			"signatures": [
				{
					"id": 957,
					"name": "useSupportedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/useSupportedWallet.ts",
							"line": 3,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useSupportedWallet.ts#L3"
						}
					],
					"parameters": [
						{
							"id": 958,
							"name": "id",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 106,
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 891,
			"name": "useSwitchAccount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts",
					"line": 14,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts#L14"
				}
			],
			"signatures": [
				{
					"id": 892,
					"name": "useSwitchAccount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to switch the account of the active wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- A function to invoke to switch account."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useswitchaccount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts",
							"line": 14,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts#L14"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 893,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 895,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts",
											"line": 46,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts#L46"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "switchAccount.isLoading"
								},
								{
									"id": 894,
									"name": "switchAccount",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts",
											"line": 45,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts#L45"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
											"qualifiedName": "UseMutateAsyncFunction"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											},
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "unknown"
											}
										],
										"name": "UseMutateAsyncFunction",
										"package": "@tanstack/react-query"
									},
									"defaultValue": "switchAccount.mutateAsync"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [895, 894]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts",
									"line": 44,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useSwitchAccount.ts#L44"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 54,
			"name": "useSwitchChain",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 187,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L187"
				}
			],
			"signatures": [
				{
					"id": 55,
					"name": "useSwitchChain",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a method to connect the wallet to network/chain with given chainId"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 187,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L187"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 56,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
									"line": 86,
									"character": 15,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L86"
								}
							],
							"signatures": [
								{
									"id": 57,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
											"line": 86,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L86"
										}
									],
									"parameters": [
										{
											"id": 58,
											"name": "chain",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 176,
			"name": "useThirdwebAuthContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
					"line": 44,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L44"
				}
			],
			"signatures": [
				{
					"id": 177,
					"name": "useThirdwebAuthContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-auth.tsx",
							"line": 44,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-auth.tsx#L44"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
									"qualifiedName": "ThirdwebAuthContext"
								},
								"name": "ThirdwebAuthContext",
								"package": "@thirdweb-dev/react-core"
							}
						]
					}
				}
			]
		},
		{
			"id": 213,
			"name": "useThirdwebConnectedWalletContext",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/contexts/thirdweb-wallet.tsx",
					"line": 120,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-wallet.tsx#L120"
				}
			],
			"signatures": [
				{
					"id": 214,
					"name": "useThirdwebConnectedWalletContext",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/contexts/thirdweb-wallet.tsx",
							"line": 120,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/contexts/thirdweb-wallet.tsx#L120"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/evm/contexts/thirdweb-wallet.tsx",
							"qualifiedName": "ThirdwebConnectedWalletContext"
						},
						"name": "ThirdwebConnectedWalletContext",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 920,
			"name": "useToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useToken.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useToken.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 921,
					"name": "useToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Token`"
							},
							{
								"kind": "text",
								"text": " contract. This contract supports ERC20 compliant tokens."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"token\")\n\n  // Now you can use the token contract in the rest of the component\n\n  // For example, this function will get the connected wallets token balance\n  async function balance() {\n    const balance = await contract.balance()\n    return balance\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const token = useToken(\"0x1234...\");\n+ const token = useContract(\"0x1234...\", \"token\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useToken.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useToken.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 922,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Token contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token.ts",
									"qualifiedName": "Token"
								},
								"name": "Token",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 805,
			"name": "useTokenBalance",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 75,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L75"
				}
			],
			"signatures": [
				{
					"id": 806,
					"name": "useTokenBalance",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get token balance for a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: balance, isLoading, error } = useTokenBalance(contract, \"{{wallet_address}}\");\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the balance of the address"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetokenbalance?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 75,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L75"
						}
					],
					"parameters": [
						{
							"id": 807,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 808,
							"name": "walletAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 809,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/evm/schema/contracts/common/currency.d.ts",
											"line": 27,
											"character": 26
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 810,
			"name": "useTokenDecimals",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 111,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L111"
				}
			],
			"signatures": [
				{
					"id": 811,
					"name": "useTokenDecimals",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get token decimals"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: decimals, isLoading, error } = useTokenDecimals(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the decimals of the ERC20 token"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetokendecimals?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 111,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L111"
						}
					],
					"parameters": [
						{
							"id": 812,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 923,
			"name": "useTokenDrop",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useTokenDrop.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useTokenDrop.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 924,
					"name": "useTokenDrop",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of a "
							},
							{
								"kind": "code",
								"text": "`Token Drop`"
							},
							{
								"kind": "text",
								"text": " contract."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"token-drop\")\n\n  // Now you can use the token drop contract in the rest of the component\n\n  // For example, this function will get the connected wallets token balance\n  async function balance() {\n    const balance = await contract.balance()\n    return balance\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const token = useTokenDrop(\"0x1234...\");\n+ const token = useContract(\"0x1234...\", \"token-drop\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useTokenDrop.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useTokenDrop.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 925,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Token Drop contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/token-drop.ts",
									"qualifiedName": "TokenDrop"
								},
								"name": "TokenDrop",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 801,
			"name": "useTokenSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 44,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L44"
				}
			],
			"signatures": [
				{
					"id": 802,
					"name": "useTokenSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the total supply for this token"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: totalSupply, isLoading, error } = useTokenSupply(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total minted supply"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetokensupply?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 44,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L44"
						}
					],
					"parameters": [
						{
							"id": 803,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 804,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/evm/schema/contracts/common/currency.d.ts",
											"line": 27,
											"character": 26
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 714,
			"name": "useTotalCirculatingSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 184,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L184"
				}
			],
			"signatures": [
				{
					"id": 715,
					"name": "useTotalCirculatingSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get total minted supply count"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { data: totalCirculatingSupply, isLoading, error } = useTotalCirculatingSupply(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total minted supply"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Supply | ERC1155Enumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetotalcirculatingsupply?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 184,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L184"
						}
					],
					"parameters": [
						{
							"id": 716,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1043,
										"name": "NFTContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 717,
							"name": "tokenId",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "required for ERC1155, the tokenId to look up"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 710,
			"name": "useTotalCount",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 136,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L136"
				}
			],
			"signatures": [
				{
					"id": 711,
					"name": "useTotalCount",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get total supply count"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { contract } = useContract(\"{{contract_address}}\");\nconst { data: count, isLoading, error } = useTotalCount(contract);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the total count of NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721Supply | ERC1155Enumerable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetotalcount?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 136,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L136"
						}
					],
					"typeParameter": [
						{
							"id": 712,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1043,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 713,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 829,
			"name": "useTransferBatchToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 359,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L359"
				}
			],
			"signatures": [
				{
					"id": 830,
					"name": "useTransferBatchToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Airdrop tokens to a list of wallets"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: transferBatchTokens,\n    isLoading,\n    error,\n  } = useTransferToken(contract);\n\n  if (error) {\n    console.error(\"failed to transfer batch tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => transferBatchTokens([{ to: \"{{wallet_address}}\", amount: 1000 }, { to: \"{{wallet_address}}\", amount: 2000 }])}\n    >\n      Airdrop\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer batch tokens"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetransferbatchtoken?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 359,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L359"
						}
					],
					"parameters": [
						{
							"id": 831,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 832,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/erc-20.d.ts",
													"line": 233,
													"character": 27
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1036,
									"name": "TokenParams",
									"package": "@thirdweb-dev/react-core"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 737,
			"name": "useTransferNFT",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
					"line": 534,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L534"
				}
			],
			"signatures": [
				{
					"id": 738,
					"name": "useTransferNFT",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transfer an NFT"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: transferNFT,\n    isLoading,\n    error,\n  } = useTransferNFT(contract);\n\n  if (error) {\n    console.error(\"failed to transfer NFT\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => transferNFT({\n        to: \"{{wallet_address}}\",\n        tokenId: 2\n      })}\n    >\n      Transfer\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer NFTs"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721 | ERC1155"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetransfernft?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
							"line": 534,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L534"
						}
					],
					"typeParameter": [
						{
							"id": 739,
							"name": "TContract",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1043,
								"name": "NFTContract",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 740,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "NFTContract",
										"target": 1043,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "TContract",
										"refersToTypeParameter": true
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 741,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 743,
													"name": "data",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
															"line": 540,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L540"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 744,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
																	"line": 540,
																	"character": 12,
																	"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L540"
																}
															],
															"signatures": [
																{
																	"id": 745,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"type": {
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																			"qualifiedName": "Promise"
																		},
																		"typeArguments": [
																			{
																				"type": "intrinsic",
																				"name": "unknown"
																			}
																		],
																		"name": "Promise",
																		"package": "typescript"
																	}
																}
															]
														}
													}
												},
												{
													"id": 742,
													"name": "receipt",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
															"line": 539,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L539"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
															"qualifiedName": "TransactionReceipt"
														},
														"name": "providers.TransactionReceipt",
														"package": "@ethersproject/abstract-provider",
														"qualifiedName": "TransactionReceipt"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [743, 742]
												}
											],
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/nft.ts",
													"line": 538,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/nft.ts#L538"
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1046,
								"name": "TransferNFTParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 825,
			"name": "useTransferToken",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
					"line": 300,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L300"
				}
			],
			"signatures": [
				{
					"id": 826,
					"name": "useTransferToken",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Transfer tokens to a specific wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: transferTokens,\n    isLoading,\n    error,\n  } = useTransferToken(contract);\n\n  if (error) {\n    console.error(\"failed to transfer tokens\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => transferTokens({ to: \"{{wallet_address}}\", amount: 1000 })}\n    >\n      Transfer\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to transfer tokens"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC20"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usetransfertoken?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/token.ts",
							"line": 300,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/token.ts#L300"
						}
					],
					"parameters": [
						{
							"id": 827,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "TokenContract",
										"target": 1044,
										"tsLinkText": ""
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1044,
										"name": "TokenContract",
										"package": "@thirdweb-dev/react-core"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 828,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/erc-20.d.ts",
													"line": 147,
													"character": 60
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reference",
								"target": 1036,
								"name": "TokenParams",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 412,
			"name": "useUnclaimedNFTSupply",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 119,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L119"
				}
			],
			"signatures": [
				{
					"id": 413,
					"name": "useUnclaimedNFTSupply",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the number of NFTs that are unclaimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useunclaimednftsupply?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 119,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L119"
						}
					],
					"parameters": [
						{
							"id": 414,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": null
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
													"qualifiedName": "NFTDrop"
												},
												"name": "NFTDrop",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/signature-drop.ts",
													"qualifiedName": "SignatureDrop"
												},
												"name": "SignatureDrop",
												"package": "@thirdweb-dev/sdk"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
													"qualifiedName": "SmartContract"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
															"qualifiedName": "BaseContract"
														},
														"name": "BaseContract",
														"package": "@ethersproject/contracts"
													}
												],
												"name": "SmartContract",
												"package": "@thirdweb-dev/sdk"
											}
										]
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
									"qualifiedName": "BigNumber"
								},
								"name": "BigNumber",
								"package": "@ethersproject/bignumber"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 402,
			"name": "useUnclaimedNFTs",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
					"line": 56,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L56"
				}
			],
			"signatures": [
				{
					"id": 403,
					"name": "useUnclaimedNFTs",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all unclaimed NFTs"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: unclaimedNfts, isLoading, error } = useUnclaimedNFTs(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of NFTs that are unclaimed"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "ERC721LazyMintable"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useunclaimednfts?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/drop.ts",
							"line": 56,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/drop.ts#L56"
						}
					],
					"parameters": [
						{
							"id": 404,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a contract that extends the ERC721 spec (NFT drop, Signature Drop, or any custom contract that extends the ERC721 spec)"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/nft-drop.ts",
											"qualifiedName": "NFTDrop"
										},
										"name": "NFTDrop",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 405,
							"name": "queryParams",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "query params to pass to the query for the sake of pagination"
									}
								]
							},
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 406,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/QueryParams.d.ts",
											"line": 12,
											"character": 3
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/core/schema/nft.ts",
										"qualifiedName": "NFT"
									},
									"name": "NFT",
									"package": "@thirdweb-dev/sdk"
								}
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 294,
			"name": "useUpdateMetadata",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 387,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L387"
				}
			],
			"signatures": [
				{
					"id": 295,
					"name": "useUpdateMetadata",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the metadata of this contract"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updateMetadata,\n    isLoading,\n    error,\n  } = useUpdateMetadata(contract);\n\n  if (error) {\n    console.error(\"failed to update metadata\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updateMetadata({\n       name: \"My Contract\",\n       description: \"This is my contract\"\n      })}\n    >\n      Update Contract Metadata\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the metadata"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdatemetadata?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 387,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L387"
						}
					],
					"parameters": [
						{
							"id": 296,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							},
							{
								"type": "intrinsic",
								"name": "any"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 284,
			"name": "useUpdatePlatformFees",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 289,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L289"
				}
			],
			"signatures": [
				{
					"id": 285,
					"name": "useUpdatePlatformFees",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the platform fee recipient and basis points"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updatePlatformFees,\n    isLoading,\n    error,\n  } = useUpdatePlatformFees(contract);\n\n  if (error) {\n    console.error(\"failed to update platform fees\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updatePlatformFees({ updatePayload: { fee_recipient: \"{{wallet_address}}\", platform_fee_basis_points: 5_00 } })}\n    >\n      Update Platform fees\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the platform fees settings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PlatformFee"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdateplatformfees?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 289,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L289"
						}
					],
					"parameters": [
						{
							"id": 286,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 287,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/contract-platform-fee.d.ts",
													"line": 56,
													"character": 25
												}
											]
										}
									},
									{
										"type": "literal",
										"value": "data"
									}
								],
								"name": "Omit",
								"package": "typescript"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 288,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 290,
											"name": "fee_recipient",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
													"line": 298,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L298"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 289,
											"name": "platform_fee_basis_points",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
													"line": 297,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L297"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [290, 289]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
											"line": 296,
											"character": 20,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L296"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 264,
			"name": "useUpdatePrimarySaleRecipient",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 92,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L92"
				}
			],
			"signatures": [
				{
					"id": 265,
					"name": "useUpdatePrimarySaleRecipient",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the primary sale recipient"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updatePrimarySalesRecipient,\n    isLoading,\n    error,\n  } = useUpdatePrimarySaleRecipient(contract);\n\n  if (error) {\n    console.error(\"failed to update recipient\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updatePrimarySalesRecipient({ newRecipient: \"{{wallet_address}}\" })}\n    >\n      Update Recipient\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the primary sales recipient"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "PrimarySale"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdateprimarysalerecipient?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 92,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L92"
						}
					],
					"parameters": [
						{
							"id": 266,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 267,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 268,
											"name": "receipt",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
													"line": 96,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L96"
												}
											],
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-provider@5.7.0/node_modules/@ethersproject/abstract-provider/src.ts/index.ts",
													"qualifiedName": "TransactionReceipt"
												},
												"name": "providers.TransactionReceipt",
												"package": "@ethersproject/abstract-provider",
												"qualifiedName": "TransactionReceipt"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [268]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
											"line": 95,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L95"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 273,
			"name": "useUpdateRoyaltySettings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
					"line": 193,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L193"
				}
			],
			"signatures": [
				{
					"id": 274,
					"name": "useUpdateRoyaltySettings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the royalty recipient and fee"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const { contract } = useContract(\"{{contract_address}}\");\n  const {\n    mutate: updateRoyaltySettings,\n    isLoading,\n    error,\n  } = useUpdateRoyaltySettings(contract);\n\n  if (error) {\n    console.error(\"failed to update royalty settings\", error);\n  }\n\n  return (\n    <button\n      disabled={isLoading}\n      onClick={() => updateRoyaltySettings({ updatePayload: { fee_recipient: \"{{wallet_address}}\", seller_fee_basis_points: 5_00 } })}\n    >\n      Update Royalty Settings\n    </button>\n  );\n};\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a mutation object that can be used to update the royalty settings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "Royalty"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useupdateroyaltysettings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
							"line": 193,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L193"
						}
					],
					"parameters": [
						{
							"id": 275,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "SmartContract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/index.ts",
											"qualifiedName": "ValidContractInstance"
										},
										"name": "ValidContractInstance",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseMutationResult"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 276,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/evm/core/classes/contract-royalty.d.ts",
											"line": 75,
											"character": 20
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 277,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 279,
											"name": "fee_recipient",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
													"line": 202,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L202"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 278,
											"name": "seller_fee_basis_points",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
													"line": 201,
													"character": 6,
													"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L201"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [279, 278]
										}
									],
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/async/contract-settings.ts",
											"line": 200,
											"character": 20,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/contract-settings.ts#L200"
										}
									]
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseMutationResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 881,
			"name": "useUser",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
					"line": 23,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L23"
				}
			],
			"signatures": [
				{
					"id": 882,
					"name": "useUser",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to get the currently logged in user."
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "- The currently logged in user or null if not logged in, as well as a loading state."
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.useuser?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
							"line": 23,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L23"
						}
					],
					"typeParameter": [
						{
							"id": 883,
							"name": "TData",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							}
						},
						{
							"id": 884,
							"name": "TContext",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							},
							"default": {
								"type": "reference",
								"target": {
									"sourceFileName": "../auth/src/core/schema/common.ts",
									"qualifiedName": "Json"
								},
								"name": "Json",
								"package": "@thirdweb-dev/auth"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 885,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 888,
									"name": "isLoading",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
											"line": 68,
											"character": 37,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								},
								{
									"id": 887,
									"name": "isLoggedIn",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
											"line": 68,
											"character": 17,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L68"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"defaultValue": "!!user"
								},
								{
									"id": 886,
									"name": "user",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
											"line": 68,
											"character": 11,
											"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L68"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"target": 896,
												"typeArguments": [
													{
														"type": "reference",
														"target": -1,
														"name": "TData",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": -1,
														"name": "TContext",
														"refersToTypeParameter": true
													}
												],
												"name": "UserWithData",
												"package": "@thirdweb-dev/react-core"
											}
										]
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [888, 887, 886]
								}
							],
							"sources": [
								{
									"fileName": "packages/react-core/src/evm/hooks/auth/useUser.ts",
									"line": 68,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/auth/useUser.ts#L68"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 471,
			"name": "useValidDirectListings",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 233,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L233"
				}
			],
			"signatures": [
				{
					"id": 472,
					"name": "useValidDirectListings",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all valid direct listings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: validDirectListings, isLoading, error } = useValidDirectListings(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of direct listings"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "DirectListings"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usevaliddirectlistings?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 233,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L233"
						}
					],
					"parameters": [
						{
							"id": 473,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 474,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplacev3/DirectListingV3.ts",
										"qualifiedName": "DirectListingV3"
									},
									"name": "DirectListingV3",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 479,
			"name": "useValidEnglishAuctions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 303,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L303"
				}
			],
			"signatures": [
				{
					"id": 480,
					"name": "useValidEnglishAuctions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get all valid english auctions"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst { data: validEnglishAuctions, isLoading, error } = useValidEnglishAuctions(contract, { start: 0, count: 100 });\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes an array of english auctions"
									}
								]
							},
							{
								"tag": "@twfeature",
								"content": [
									{
										"kind": "text",
										"text": "EnglishAuctions"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usevalidenglishauctions?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 303,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L303"
						}
					],
					"parameters": [
						{
							"id": 481,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace v3 contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplacev3.ts",
											"qualifiedName": "MarketplaceV3"
										},
										"name": "MarketplaceV3",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 482,
							"name": "filter",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "filter to pass to the query for the sake of pagination & filtering"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/types/marketplace/MarketPlaceFilter.ts",
									"qualifiedName": "MarketplaceFilter"
								},
								"name": "MarketplaceFilter",
								"package": "@thirdweb-dev/sdk"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../sdk/src/evm/types/marketplacev3/EnglishAuction.ts",
										"qualifiedName": "EnglishAuction"
									},
									"name": "EnglishAuction",
									"package": "@thirdweb-dev/sdk"
								}
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 926,
			"name": "useVote",
			"variant": "declaration",
			"kind": 64,
			"flags": {
				"isPublic": true
			},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/contracts/useVote.ts",
					"line": 35,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useVote.ts#L35"
				}
			],
			"signatures": [
				{
					"id": 927,
					"name": "useVote",
					"variant": "signature",
					"kind": 4096,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook for getting an instance of an "
							},
							{
								"kind": "code",
								"text": "`Vote`"
							},
							{
								"kind": "text",
								"text": " contract. This contract enables fully featured voting-based decentralized governance systems."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { useContract } from '@thirdweb-dev/react'\n\nexport default function Component() {\n  const { contract } = useContract(\"<YOUR-CONTRACT-ADDRESS>\", \"vote\")\n\n  // Now you can use the vote contract in the rest of the component\n\n  // For example, this function will get all the proposals on this contract\n  async function getProposals() {\n    const proposals = await contract.getAll()\n    return proposals\n  }\n\n  ...\n}\n```"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "This hook is deprecated and will be removed in a future major version. You should use "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "useContract",
										"target": 335,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " instead.\n"
									},
									{
										"kind": "code",
										"text": "```diff\n- const vote = useVote(\"0x1234...\");\n+ const vote = useContract(\"0x1234...\", \"vote\").contract;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/contracts/useVote.ts",
							"line": 35,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/contracts/useVote.ts#L35"
						}
					],
					"parameters": [
						{
							"id": 928,
							"name": "contractAddress",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the address of the Vote contract, found in your thirdweb dashboard"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/vote.ts",
									"qualifiedName": "Vote"
								},
								"name": "Vote",
								"package": "@thirdweb-dev/sdk"
							}
						]
					}
				}
			]
		},
		{
			"id": 31,
			"name": "useWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 57,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L57"
				},
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 60,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L60"
				},
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 61,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L61"
				}
			],
			"signatures": [
				{
					"id": 32,
					"name": "useWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the current active wallet instance"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 57,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L57"
						}
					],
					"typeParameter": [
						{
							"id": 33,
							"name": "T",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/hooks/wallet-hooks.ts",
									"qualifiedName": "WalletId"
								},
								"name": "WalletId",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 34,
							"name": "walletId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": -1,
								"name": "T",
								"refersToTypeParameter": true
							}
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": -1,
									"name": "T",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": {
										"sourceFileName": "src/core/hooks/wallet-hooks.ts",
										"qualifiedName": "WalletIdToWalletTypeMap"
									},
									"name": "WalletIdToWalletTypeMap",
									"package": "@thirdweb-dev/react-core"
								}
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				},
				{
					"id": 35,
					"name": "useWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 60,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L60"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 171,
								"name": "WalletInstance",
								"package": "@thirdweb-dev/react-core"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					}
				}
			]
		},
		{
			"id": 61,
			"name": "useWalletConfig",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 89,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L89"
				}
			],
			"signatures": [
				{
					"id": 62,
					"name": "useWalletConfig",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the current active wallet's configuration object"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 89,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L89"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 106,
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						]
					}
				}
			]
		},
		{
			"id": 80,
			"name": "useWalletConnectHandler",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
					"line": 621,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L621"
				}
			],
			"signatures": [
				{
					"id": 81,
					"name": "useWalletConnectHandler",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx",
							"line": 621,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/providers/thirdweb-wallet-provider.tsx#L621"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/core/types/walletConnect.ts",
									"qualifiedName": "WalletConnectHandler"
								},
								"name": "WalletConnectHandler",
								"package": "@thirdweb-dev/wallets"
							}
						]
					}
				}
			]
		},
		{
			"id": 59,
			"name": "useWallets",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
					"line": 102,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L102"
				}
			],
			"signatures": [
				{
					"id": 60,
					"name": "useWallets",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "code",
										"text": "`supportedWallets`"
									},
									{
										"kind": "text",
										"text": " configured in the "
									},
									{
										"kind": "code",
										"text": "`<ThirdwebProvider/>`"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/core/hooks/wallet-hooks.ts",
							"line": 102,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/core/hooks/wallet-hooks.ts#L102"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 106,
							"name": "WalletConfig",
							"package": "@thirdweb-dev/react-core"
						}
					}
				}
			]
		},
		{
			"id": 1136,
			"name": "useWatchTransactions",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/useTransactions.ts",
					"line": 29,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useTransactions.ts#L29"
				}
			],
			"signatures": [
				{
					"id": 1137,
					"name": "useWatchTransactions",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook that listens to transactions on a given chain for a given address.\n\n"
							},
							{
								"kind": "code",
								"text": "```javascript\nimport { useWatchTransactions } from \"@thirdweb-dev/react\"\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```js\nconst transactions = useWatchTransactions({\n address: \"0x1234\",\n network: \"ethereum\",\n});\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "an array of "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Transaction",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/src.ts/index.ts",
											"qualifiedName": "Transaction"
										},
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " objects"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/useTransactions.ts",
							"line": 29,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/useTransactions.ts#L29"
						}
					],
					"parameters": [
						{
							"id": 1138,
							"name": "watchTransactionParams",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1139,
								"name": "UseWatchTransactionsParams",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../../node_modules/.pnpm/@ethersproject+transactions@5.7.0/node_modules/@ethersproject/transactions/src.ts/index.ts",
								"qualifiedName": "Transaction"
							},
							"name": "Transaction",
							"package": "@ethersproject/transactions"
						}
					}
				}
			]
		},
		{
			"id": 496,
			"name": "useWinningBid",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
					"line": 456,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L456"
				}
			],
			"signatures": [
				{
					"id": 497,
					"name": "useWinningBid",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Get the winning bid for an auction"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nconst listingId = 0;\nconst { data: winningBid, isLoading, error } = useWinningBid(contract, listingId);\n```"
									}
								]
							},
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a response object that includes the "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Offer"
									},
									{
										"kind": "text",
										"text": " that is winning the auction"
									}
								]
							},
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "Documentation",
										"target": "https://portal.thirdweb.com/react/react.usewinningbid?utm_source=sdk"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react-core/src/evm/hooks/async/marketplace.ts",
							"line": 456,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/668fba483/packages/react-core/src/evm/hooks/async/marketplace.ts#L456"
						}
					],
					"parameters": [
						{
							"id": 498,
							"name": "contract",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "an instance of a marketplace contract"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
											"qualifiedName": "Marketplace"
										},
										"name": "Marketplace",
										"package": "@thirdweb-dev/sdk"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 499,
							"name": "listingId",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the listing id to check"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/core/query-utils/required-param.ts",
									"qualifiedName": "RequiredParam"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
											"qualifiedName": "BigNumberish"
										},
										"name": "BigNumberish",
										"package": "@ethersproject/bignumber"
									}
								],
								"name": "RequiredParam",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/types/marketplace/Offer.ts",
											"qualifiedName": "Offer"
										},
										"name": "Offer",
										"package": "@thirdweb-dev/sdk"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "unknown"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [188, 184, 9, 986, 896]
		},
		{
			"title": "Type Aliases",
			"children": [
				1098, 1051, 1067, 1105, 1024, 215, 1082, 1088, 1115, 124, 1073, 1071,
				1045, 1102, 172, 1089, 1093, 1060, 1065, 1055, 1043, 1078, 1072, 153,
				219, 1040, 1044, 1036, 1046, 398, 1139, 1035, 164, 106, 171, 175
			]
		},
		{
			"title": "Functions",
			"children": [
				978, 1012, 551, 863, 866, 852, 842, 848, 92, 223, 245, 492, 855, 88,
				746, 764, 959, 504, 889, 82, 96, 418, 508, 750, 833, 695, 691, 535, 539,
				527, 94, 90, 235, 240, 422, 821, 415, 407, 228, 316, 36, 42, 335, 366,
				348, 352, 374, 297, 386, 845, 522, 517, 859, 44, 434, 455, 467, 486, 50,
				905, 902, 459, 500, 475, 489, 555, 783, 837, 773, 426, 451, 463, 483,
				869, 876, 543, 547, 911, 291, 512, 730, 734, 813, 932, 699, 725, 914,
				908, 704, 74, 944, 559, 718, 917, 78, 280, 261, 857, 256, 442, 790, 861,
				768, 269, 982, 779, 963, 250, 68, 63, 755, 935, 929, 942, 938, 954, 956,
				891, 54, 176, 213, 920, 805, 810, 923, 801, 714, 710, 829, 737, 825,
				412, 402, 294, 284, 264, 273, 881, 471, 479, 926, 31, 61, 80, 59, 1136,
				496
			]
		}
	],
	"packageName": "@thirdweb-dev/react-core",
	"readme": [
		{
			"kind": "text",
			"text": "<p align=\"center\">\n<br />\n<a href=\"https://thirdweb.com\"><img src=\"https://github.com/thirdweb-dev/js/blob/main/packages/sdk/logo.svg?raw=true\" width=\"200\" alt=\"\"/></a>\n<br />\n</p>\n<h1 align=\"center\">thirdweb React Core SDK</h1>\n<p align=\"center\">\n<a href=\"https://www.npmjs.com/package/@thirdweb-dev/react-core\"><img src=\"https://img.shields.io/npm/v/@thirdweb-dev/react-core?color=red&label=npm&logo=npm\" alt=\"npm version\"/></a>\n<a href=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml\"><img alt=\"Build Status\" src=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml/badge.svg\"/></a>\n<a href=\"https://discord.gg/thirdweb\"><img alt=\"Join our Discord!\" src=\"https://img.shields.io/discord/834227967404146718.svg?color=7289da&label=discord&logo=discord&style=flat\"/></a>\n\n</p>\n<p align=\"center\"><strong>Proudly powering react and react-native.</strong></p>\n<br />\n\n<br />\n\nYou are likely looking for [@thirdweb-dev/react](https://www.npmjs.com/package/@thirdweb-dev/react)."
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"9": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps"
		},
		"10": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.supportedWallets"
		},
		"11": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.dAppMeta"
		},
		"12": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.autoConnect"
		},
		"13": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.theme"
		},
		"15": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.autoSwitch"
		},
		"16": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.autoConnectTimeout"
		},
		"18": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "activeChain"
		},
		"19": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"20": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"21": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "clientId"
		},
		"22": {
			"sourceFileName": "src/core/providers/query-client.tsx",
			"qualifiedName": "queryClient"
		},
		"23": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "supportedChains"
		},
		"24": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "sdkOptions"
		},
		"25": {
			"sourceFileName": "../sdk/src/evm/schema/sdk-options.ts",
			"qualifiedName": "__type"
		},
		"26": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "storageInterface"
		},
		"27": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "authConfig"
		},
		"28": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "secretKey"
		},
		"29": {
			"sourceFileName": "src/core/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderCoreProps.TChains"
		},
		"31": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallet"
		},
		"32": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallet"
		},
		"33": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "T"
		},
		"34": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "walletId"
		},
		"35": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallet"
		},
		"36": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnect"
		},
		"37": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnect"
		},
		"38": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"39": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"40": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "I"
		},
		"41": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "args"
		},
		"42": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnectionStatus"
		},
		"43": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useConnectionStatus"
		},
		"44": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useCreateWalletInstance"
		},
		"45": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useCreateWalletInstance"
		},
		"46": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"47": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"48": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "I"
		},
		"49": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "Wallet"
		},
		"50": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useDisconnect"
		},
		"51": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useDisconnect"
		},
		"52": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"53": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"54": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSwitchChain"
		},
		"55": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSwitchChain"
		},
		"56": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"57": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"58": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "chain"
		},
		"59": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallets"
		},
		"60": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWallets"
		},
		"61": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWalletConfig"
		},
		"62": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useWalletConfig"
		},
		"63": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectionStatus"
		},
		"64": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectionStatus"
		},
		"65": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"66": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"67": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "status"
		},
		"68": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectedWallet"
		},
		"69": {
			"sourceFileName": "src/core/hooks/wallet-hooks.ts",
			"qualifiedName": "useSetConnectedWallet"
		},
		"70": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"71": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "__type"
		},
		"72": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "wallet"
		},
		"73": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "params"
		},
		"74": {
			"sourceFileName": "src/core/hooks/useNetwork.ts",
			"qualifiedName": "useNetwork"
		},
		"75": {
			"sourceFileName": "src/core/hooks/useNetwork.ts",
			"qualifiedName": "useNetwork"
		},
		"78": {
			"sourceFileName": "src/evm/hooks/usePersonalWalletAddress.ts",
			"qualifiedName": "usePersonalWalletAddress"
		},
		"79": {
			"sourceFileName": "src/evm/hooks/usePersonalWalletAddress.ts",
			"qualifiedName": "usePersonalWalletAddress"
		},
		"80": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "useWalletConnectHandler"
		},
		"81": {
			"sourceFileName": "src/core/providers/thirdweb-wallet-provider.tsx",
			"qualifiedName": "useWalletConnectHandler"
		},
		"82": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useBalance"
		},
		"83": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useBalance"
		},
		"84": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "tokenAddress"
		},
		"85": {
			"sourceFileName": "../sdk/src/evm/schema/contracts/common/currency.ts",
			"qualifiedName": "__type"
		},
		"88": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useAddress"
		},
		"89": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useAddress"
		},
		"90": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useChainId"
		},
		"91": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useChainId"
		},
		"92": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useActiveChain"
		},
		"93": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useActiveChain"
		},
		"94": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useChain"
		},
		"95": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useChain"
		},
		"96": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useBalanceForAddress"
		},
		"97": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "useBalanceForAddress"
		},
		"98": {
			"sourceFileName": "src/evm/hooks/wallet.ts",
			"qualifiedName": "walletAddress"
		},
		"99": {
			"sourceFileName": "../sdk/src/evm/schema/contracts/common/currency.ts",
			"qualifiedName": "__type"
		},
		"106": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "WalletConfig"
		},
		"107": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"108": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.category"
		},
		"109": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.id"
		},
		"110": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.meta"
		},
		"111": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.create"
		},
		"112": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"113": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"114": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "options"
		},
		"115": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.connectUI"
		},
		"116": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.selectUI"
		},
		"117": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.isInstalled"
		},
		"118": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"119": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"120": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.personalWallets"
		},
		"121": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.recommended"
		},
		"122": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.isHeadless"
		},
		"123": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"124": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "ConnectUIProps"
		},
		"125": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"126": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.hide"
		},
		"127": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"128": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"129": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.connected"
		},
		"130": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"131": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"132": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.isOpen"
		},
		"133": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.show"
		},
		"134": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"135": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"136": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.goBack"
		},
		"137": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"138": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"139": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.theme"
		},
		"140": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.walletConfig"
		},
		"141": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.selectionData"
		},
		"142": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.setSelectionData"
		},
		"143": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"144": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"145": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "data"
		},
		"146": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.supportedWallets"
		},
		"147": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.modalSize"
		},
		"148": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.onLocallyConnected"
		},
		"149": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"150": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"151": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "walleInstance"
		},
		"152": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"153": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "SelectUIProps"
		},
		"154": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"155": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.onSelect"
		},
		"156": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"157": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"158": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "selectionData"
		},
		"159": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.walletConfig"
		},
		"160": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.supportedWallets"
		},
		"161": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.theme"
		},
		"162": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.modalSize"
		},
		"163": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"164": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "WalletClass"
		},
		"165": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"166": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.id"
		},
		"167": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.meta"
		},
		"168": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"169": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "options"
		},
		"170": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "I"
		},
		"171": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "WalletInstance"
		},
		"172": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "ExtraCoreWalletOptions"
		},
		"173": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type"
		},
		"174": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "__type.chain"
		},
		"175": {
			"sourceFileName": "src/core/types/wallet.ts",
			"qualifiedName": "WalletOptions"
		},
		"176": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "useThirdwebAuthContext"
		},
		"177": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "useThirdwebAuthContext"
		},
		"184": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig"
		},
		"185": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig.authUrl"
		},
		"186": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig.domain"
		},
		"187": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ThirdwebAuthConfig.secureStorage"
		},
		"188": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage"
		},
		"189": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.getItem"
		},
		"190": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.getItem"
		},
		"191": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "key"
		},
		"192": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.setItem"
		},
		"193": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.setItem"
		},
		"194": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "key"
		},
		"195": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "value"
		},
		"196": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.removeItem"
		},
		"197": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "ISecureStorage.removeItem"
		},
		"198": {
			"sourceFileName": "src/evm/contexts/thirdweb-auth.tsx",
			"qualifiedName": "key"
		},
		"213": {
			"sourceFileName": "src/evm/contexts/thirdweb-wallet.tsx",
			"qualifiedName": "useThirdwebConnectedWalletContext"
		},
		"214": {
			"sourceFileName": "src/evm/contexts/thirdweb-wallet.tsx",
			"qualifiedName": "useThirdwebConnectedWalletContext"
		},
		"215": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "ClaimIneligibilityParams"
		},
		"216": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"217": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.walletAddress"
		},
		"218": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.quantity"
		},
		"219": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "SetClaimConditionsParams"
		},
		"220": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"221": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.phases"
		},
		"222": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.reset"
		},
		"223": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimCondition"
		},
		"224": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimCondition"
		},
		"225": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"226": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"227": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "options"
		},
		"228": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimerProofs"
		},
		"229": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimerProofs"
		},
		"230": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"231": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "claimerAddress"
		},
		"232": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"233": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "claimConditionId"
		},
		"234": {
			"sourceFileName": "../sdk/src/evm/schema/contracts/common/snapshots.ts",
			"qualifiedName": "__type"
		},
		"235": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimConditions"
		},
		"236": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimConditions"
		},
		"237": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"238": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"239": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "options"
		},
		"240": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimIneligibilityReasons"
		},
		"241": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useClaimIneligibilityReasons"
		},
		"242": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"243": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "params"
		},
		"244": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"245": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimConditionForWallet"
		},
		"246": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useActiveClaimConditionForWallet"
		},
		"247": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"248": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "walletAddress"
		},
		"249": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"250": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useSetClaimConditions"
		},
		"251": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useSetClaimConditions"
		},
		"252": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"253": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"254": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"255": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "__type.receipt"
		},
		"256": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useResetClaimConditions"
		},
		"257": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "useResetClaimConditions"
		},
		"258": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "contract"
		},
		"259": {
			"sourceFileName": "src/evm/hooks/async/claim-conditions.ts",
			"qualifiedName": "tokenId"
		},
		"260": {
			"sourceFileName": "../sdk/src/evm/core/classes/drop-erc1155-claim-conditions.ts",
			"qualifiedName": "__type"
		},
		"261": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePrimarySaleRecipient"
		},
		"262": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePrimarySaleRecipient"
		},
		"263": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"264": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePrimarySaleRecipient"
		},
		"265": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePrimarySaleRecipient"
		},
		"266": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"267": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"268": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.receipt"
		},
		"269": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useRoyaltySettings"
		},
		"270": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useRoyaltySettings"
		},
		"271": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"272": {
			"sourceFileName": "../sdk/src/evm/core/classes/contract-royalty.ts",
			"qualifiedName": "__type"
		},
		"273": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateRoyaltySettings"
		},
		"274": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateRoyaltySettings"
		},
		"275": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"276": {
			"sourceFileName": "../sdk/src/evm/core/classes/contract-royalty.ts",
			"qualifiedName": "__type"
		},
		"277": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"278": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.seller_fee_basis_points"
		},
		"279": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.fee_recipient"
		},
		"280": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePlatformFees"
		},
		"281": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "usePlatformFees"
		},
		"282": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"283": {
			"sourceFileName": "../sdk/src/evm/core/classes/contract-platform-fee.ts",
			"qualifiedName": "__type"
		},
		"284": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePlatformFees"
		},
		"285": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdatePlatformFees"
		},
		"286": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"287": {
			"sourceFileName": "../sdk/src/evm/core/classes/contract-platform-fee.ts",
			"qualifiedName": "__type"
		},
		"288": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type"
		},
		"289": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.platform_fee_basis_points"
		},
		"290": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "__type.fee_recipient"
		},
		"291": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useMetadata"
		},
		"292": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useMetadata"
		},
		"293": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"294": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateMetadata"
		},
		"295": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "useUpdateMetadata"
		},
		"296": {
			"sourceFileName": "src/evm/hooks/async/contract-settings.ts",
			"qualifiedName": "contract"
		},
		"297": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractType"
		},
		"298": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractType"
		},
		"299": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"316": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useCompilerMetadata"
		},
		"317": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useCompilerMetadata"
		},
		"318": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"335": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"336": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"337": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractAddress"
		},
		"338": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"339": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"340": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"341": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"342": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractType"
		},
		"343": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"344": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "_contractType"
		},
		"345": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContract"
		},
		"346": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contractAddress"
		},
		"347": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "_abi"
		},
		"348": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadata"
		},
		"349": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadata"
		},
		"350": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"351": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"352": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadataUpdate"
		},
		"353": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractMetadataUpdate"
		},
		"354": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"355": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"356": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.receipt"
		},
		"357": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.data"
		},
		"358": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"359": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"360": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"361": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.name"
		},
		"362": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.description"
		},
		"363": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.image"
		},
		"364": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.external_link"
		},
		"365": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.app_uri"
		},
		"366": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractEvents"
		},
		"367": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractEvents"
		},
		"368": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"369": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "eventName"
		},
		"370": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "options"
		},
		"371": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"372": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.queryFilter"
		},
		"373": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.subscribe"
		},
		"374": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractRead"
		},
		"375": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractRead"
		},
		"376": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractAddress"
		},
		"377": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"378": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractInstance"
		},
		"379": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TFunctionName"
		},
		"380": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TArgs"
		},
		"381": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TReturnType"
		},
		"382": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"383": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "functionName"
		},
		"384": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "args"
		},
		"385": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "overrides"
		},
		"386": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractWrite"
		},
		"387": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "useContractWrite"
		},
		"388": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractAddress"
		},
		"389": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"390": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContractInstance"
		},
		"391": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TFunctionName"
		},
		"392": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TArgs"
		},
		"393": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "contract"
		},
		"394": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "functionName"
		},
		"395": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"396": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.args"
		},
		"397": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.overrides"
		},
		"398": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "UseContractResult"
		},
		"399": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type"
		},
		"400": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "__type.contract"
		},
		"401": {
			"sourceFileName": "src/evm/hooks/async/contracts.ts",
			"qualifiedName": "TContract"
		},
		"402": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTs"
		},
		"403": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTs"
		},
		"404": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"405": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "queryParams"
		},
		"406": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"407": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTs"
		},
		"408": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTs"
		},
		"409": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"410": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "queryParams"
		},
		"411": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"412": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTSupply"
		},
		"413": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useUnclaimedNFTSupply"
		},
		"414": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"415": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTSupply"
		},
		"416": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimedNFTSupply"
		},
		"417": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"418": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useBatchesToReveal"
		},
		"419": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useBatchesToReveal"
		},
		"420": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"421": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"422": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimNFT"
		},
		"423": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useClaimNFT"
		},
		"424": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"425": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"426": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useLazyMint"
		},
		"427": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useLazyMint"
		},
		"428": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"429": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"430": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "onProgress"
		},
		"431": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"432": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"433": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "progress"
		},
		"434": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useDelayedRevealLazyMint"
		},
		"435": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useDelayedRevealLazyMint"
		},
		"436": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"437": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"438": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "onProgress"
		},
		"439": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"440": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"441": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "progress"
		},
		"442": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useRevealLazyMint"
		},
		"443": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "useRevealLazyMint"
		},
		"444": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "TContract"
		},
		"445": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "contract"
		},
		"446": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"447": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type.receipt"
		},
		"448": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type.data"
		},
		"449": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"450": {
			"sourceFileName": "src/evm/hooks/async/drop.ts",
			"qualifiedName": "__type"
		},
		"451": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListing"
		},
		"452": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListing"
		},
		"453": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"454": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"455": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListing"
		},
		"456": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListing"
		},
		"457": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"458": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"459": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuction"
		},
		"460": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuction"
		},
		"461": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"462": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "auctionId"
		},
		"463": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListings"
		},
		"464": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListings"
		},
		"465": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"466": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"467": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListings"
		},
		"468": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListings"
		},
		"469": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"470": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"471": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidDirectListings"
		},
		"472": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidDirectListings"
		},
		"473": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"474": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"475": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctions"
		},
		"476": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctions"
		},
		"477": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"478": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"479": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidEnglishAuctions"
		},
		"480": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useValidEnglishAuctions"
		},
		"481": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"482": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"483": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListingsCount"
		},
		"484": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useListingsCount"
		},
		"485": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"486": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListingsCount"
		},
		"487": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useDirectListingsCount"
		},
		"488": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"489": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionsCount"
		},
		"490": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionsCount"
		},
		"491": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"492": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useActiveListings"
		},
		"493": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useActiveListings"
		},
		"494": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"495": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "filter"
		},
		"496": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useWinningBid"
		},
		"497": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useWinningBid"
		},
		"498": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"499": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"500": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionWinningBid"
		},
		"501": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useEnglishAuctionWinningBid"
		},
		"502": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"503": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "auctionId"
		},
		"504": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAuctionWinner"
		},
		"505": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAuctionWinner"
		},
		"506": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"507": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"508": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBidBuffer"
		},
		"509": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBidBuffer"
		},
		"510": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"511": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"512": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMinimumNextBid"
		},
		"513": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMinimumNextBid"
		},
		"514": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"515": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"516": {
			"sourceFileName": "../sdk/src/evm/schema/contracts/common/currency.ts",
			"qualifiedName": "__type"
		},
		"517": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateDirectListing"
		},
		"518": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateDirectListing"
		},
		"519": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TMarketplace"
		},
		"520": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"521": {
			"sourceFileName": "../sdk/src/evm/schema/marketplacev3/direct-listings.ts",
			"qualifiedName": "__type"
		},
		"522": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateAuctionListing"
		},
		"523": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCreateAuctionListing"
		},
		"524": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "TMarketplace"
		},
		"525": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"526": {
			"sourceFileName": "../sdk/src/evm/schema/marketplacev3/english-auctions.ts",
			"qualifiedName": "__type"
		},
		"527": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelListing"
		},
		"528": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelListing"
		},
		"529": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"530": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"531": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.receipt"
		},
		"532": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type.data"
		},
		"533": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"534": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__type"
		},
		"535": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelDirectListing"
		},
		"536": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelDirectListing"
		},
		"537": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"538": {
			"sourceFileName": "../sdk/src/evm/core/classes/marketplacev3-direct-listings.ts",
			"qualifiedName": "__type"
		},
		"539": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelEnglishAuction"
		},
		"540": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useCancelEnglishAuction"
		},
		"541": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"542": {
			"sourceFileName": "../sdk/src/evm/core/classes/marketplacev3-english-auction.ts",
			"qualifiedName": "__type"
		},
		"543": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeBid"
		},
		"544": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeBid"
		},
		"545": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"546": {
			"sourceFileName": "../sdk/src/evm/core/classes/marketplace-auction.ts",
			"qualifiedName": "__type"
		},
		"547": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeOffer"
		},
		"548": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useMakeOffer"
		},
		"549": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"550": {
			"sourceFileName": "../sdk/src/evm/contracts/prebuilt-implementations/marketplace.ts",
			"qualifiedName": "__type"
		},
		"551": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAcceptDirectListingOffer"
		},
		"552": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useAcceptDirectListingOffer"
		},
		"553": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"554": {
			"sourceFileName": "../sdk/src/evm/core/classes/marketplace-direct.ts",
			"qualifiedName": "__type"
		},
		"555": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useExecuteAuctionSale"
		},
		"556": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useExecuteAuctionSale"
		},
		"557": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"558": {
			"sourceFileName": "../sdk/src/evm/core/classes/marketplace-auction.ts",
			"qualifiedName": "__type"
		},
		"559": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useOffers"
		},
		"560": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useOffers"
		},
		"561": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"562": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "listingId"
		},
		"563": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object"
		},
		"564": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object.data"
		},
		"565": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverRefetchErrorResult.error"
		},
		"566": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverRefetchErrorResult.isError"
		},
		"567": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverRefetchErrorResult.isLoading"
		},
		"568": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverRefetchErrorResult.isLoadingError"
		},
		"569": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverRefetchErrorResult.isRefetchError"
		},
		"570": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverRefetchErrorResult.isSuccess"
		},
		"571": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverRefetchErrorResult.status"
		},
		"572": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.dataUpdatedAt"
		},
		"573": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdatedAt"
		},
		"574": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureCount"
		},
		"575": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureReason"
		},
		"576": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdateCount"
		},
		"577": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetched"
		},
		"578": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetchedAfterMount"
		},
		"579": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetching"
		},
		"580": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isInitialLoading"
		},
		"581": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPaused"
		},
		"582": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPlaceholderData"
		},
		"583": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPreviousData"
		},
		"584": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isRefetching"
		},
		"585": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isStale"
		},
		"586": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.refetch"
		},
		"587": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"588": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"589": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "TPageData"
		},
		"590": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "options"
		},
		"591": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.remove"
		},
		"592": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"593": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"594": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.fetchStatus"
		},
		"595": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object"
		},
		"596": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object.data"
		},
		"597": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverSuccessResult.error"
		},
		"598": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverSuccessResult.isError"
		},
		"599": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverSuccessResult.isLoading"
		},
		"600": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverSuccessResult.isLoadingError"
		},
		"601": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverSuccessResult.isRefetchError"
		},
		"602": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverSuccessResult.isSuccess"
		},
		"603": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverSuccessResult.status"
		},
		"604": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.dataUpdatedAt"
		},
		"605": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdatedAt"
		},
		"606": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureCount"
		},
		"607": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureReason"
		},
		"608": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdateCount"
		},
		"609": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetched"
		},
		"610": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetchedAfterMount"
		},
		"611": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetching"
		},
		"612": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isInitialLoading"
		},
		"613": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPaused"
		},
		"614": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPlaceholderData"
		},
		"615": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPreviousData"
		},
		"616": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isRefetching"
		},
		"617": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isStale"
		},
		"618": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.refetch"
		},
		"619": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"620": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"621": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "TPageData"
		},
		"622": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "options"
		},
		"623": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.remove"
		},
		"624": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"625": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"626": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.fetchStatus"
		},
		"627": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object"
		},
		"628": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object.data"
		},
		"629": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingErrorResult.error"
		},
		"630": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingErrorResult.isError"
		},
		"631": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingErrorResult.isLoading"
		},
		"632": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingErrorResult.isLoadingError"
		},
		"633": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingErrorResult.isRefetchError"
		},
		"634": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingErrorResult.isSuccess"
		},
		"635": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingErrorResult.status"
		},
		"636": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.dataUpdatedAt"
		},
		"637": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdatedAt"
		},
		"638": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureCount"
		},
		"639": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureReason"
		},
		"640": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdateCount"
		},
		"641": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetched"
		},
		"642": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetchedAfterMount"
		},
		"643": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetching"
		},
		"644": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isInitialLoading"
		},
		"645": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPaused"
		},
		"646": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPlaceholderData"
		},
		"647": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPreviousData"
		},
		"648": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isRefetching"
		},
		"649": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isStale"
		},
		"650": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.refetch"
		},
		"651": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"652": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"653": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "TPageData"
		},
		"654": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "options"
		},
		"655": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.remove"
		},
		"656": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"657": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"658": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.fetchStatus"
		},
		"659": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object"
		},
		"660": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "__object.data"
		},
		"661": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingResult.error"
		},
		"662": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingResult.isError"
		},
		"663": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingResult.isLoading"
		},
		"664": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingResult.isLoadingError"
		},
		"665": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingResult.isRefetchError"
		},
		"666": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingResult.isSuccess"
		},
		"667": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverLoadingResult.status"
		},
		"668": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.dataUpdatedAt"
		},
		"669": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdatedAt"
		},
		"670": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureCount"
		},
		"671": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.failureReason"
		},
		"672": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.errorUpdateCount"
		},
		"673": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetched"
		},
		"674": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetchedAfterMount"
		},
		"675": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isFetching"
		},
		"676": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isInitialLoading"
		},
		"677": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPaused"
		},
		"678": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPlaceholderData"
		},
		"679": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isPreviousData"
		},
		"680": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isRefetching"
		},
		"681": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.isStale"
		},
		"682": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.refetch"
		},
		"683": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"684": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"685": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "TPageData"
		},
		"686": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "options"
		},
		"687": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.remove"
		},
		"688": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"689": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "__type"
		},
		"690": {
			"sourceFileName": "../../node_modules/.pnpm/@tanstack+query-core@4.33.0/node_modules/@tanstack/query-core/src/types.ts",
			"qualifiedName": "QueryObserverBaseResult.fetchStatus"
		},
		"691": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyNow"
		},
		"692": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyNow"
		},
		"693": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"694": {
			"sourceFileName": "../sdk/src/evm/core/classes/marketplace-direct.ts",
			"qualifiedName": "__type"
		},
		"695": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyDirectListing"
		},
		"696": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "useBuyDirectListing"
		},
		"697": {
			"sourceFileName": "src/evm/hooks/async/marketplace.ts",
			"qualifiedName": "contract"
		},
		"698": {
			"sourceFileName": "../sdk/src/evm/core/classes/marketplacev3-direct-listings.ts",
			"qualifiedName": "__type"
		},
		"699": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFT"
		},
		"700": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFT"
		},
		"701": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"702": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"703": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "tokenId"
		},
		"704": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTs"
		},
		"705": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTs"
		},
		"706": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"707": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"708": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "queryParams"
		},
		"709": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"710": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCount"
		},
		"711": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCount"
		},
		"712": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"713": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"714": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCirculatingSupply"
		},
		"715": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTotalCirculatingSupply"
		},
		"716": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"717": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "tokenId"
		},
		"718": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useOwnedNFTs"
		},
		"719": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useOwnedNFTs"
		},
		"720": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"721": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"722": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "ownerWalletAddress"
		},
		"723": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "queryParams"
		},
		"724": {
			"sourceFileName": "../sdk/src/core/schema/QueryParams.ts",
			"qualifiedName": "__type"
		},
		"725": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTBalance"
		},
		"726": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useNFTBalance"
		},
		"727": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"728": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "ownerWalletAddress"
		},
		"729": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "tokenId"
		},
		"730": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFT"
		},
		"731": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFT"
		},
		"732": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"733": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"734": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFTSupply"
		},
		"735": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useMintNFTSupply"
		},
		"736": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"737": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTransferNFT"
		},
		"738": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useTransferNFT"
		},
		"739": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"740": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"741": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"742": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.receipt"
		},
		"743": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type.data"
		},
		"744": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"745": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "__type"
		},
		"746": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useAirdropNFT"
		},
		"747": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useAirdropNFT"
		},
		"748": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"749": {
			"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
			"qualifiedName": "__type"
		},
		"750": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useBurnNFT"
		},
		"751": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useBurnNFT"
		},
		"752": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "TContract"
		},
		"753": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"754": {
			"sourceFileName": "../sdk/src/evm/core/classes/erc-1155.ts",
			"qualifiedName": "__type"
		},
		"755": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useSharedMetadata"
		},
		"756": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "useSharedMetadata"
		},
		"757": {
			"sourceFileName": "src/evm/hooks/async/nft.ts",
			"qualifiedName": "contract"
		},
		"764": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useAllRoleMembers"
		},
		"765": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useAllRoleMembers"
		},
		"766": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"767": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"768": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRoleMembers"
		},
		"769": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRoleMembers"
		},
		"770": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"771": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"772": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "role"
		},
		"773": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useIsAddressRole"
		},
		"774": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useIsAddressRole"
		},
		"775": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"776": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"777": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "role"
		},
		"778": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "walletAddress"
		},
		"779": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useSetAllRoleMembers"
		},
		"780": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useSetAllRoleMembers"
		},
		"781": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"782": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"783": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useGrantRole"
		},
		"784": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useGrantRole"
		},
		"785": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"786": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"787": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "__type"
		},
		"788": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "__type.role"
		},
		"789": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "__type.address"
		},
		"790": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRevokeRole"
		},
		"791": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "useRevokeRole"
		},
		"792": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "TContract"
		},
		"793": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "contract"
		},
		"794": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "__type"
		},
		"795": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "__type.role"
		},
		"796": {
			"sourceFileName": "src/evm/hooks/async/roles.ts",
			"qualifiedName": "__type.address"
		},
		"801": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenSupply"
		},
		"802": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenSupply"
		},
		"803": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"804": {
			"sourceFileName": "../sdk/src/evm/schema/contracts/common/currency.ts",
			"qualifiedName": "__type"
		},
		"805": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenBalance"
		},
		"806": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenBalance"
		},
		"807": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"808": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "walletAddress"
		},
		"809": {
			"sourceFileName": "../sdk/src/evm/schema/contracts/common/currency.ts",
			"qualifiedName": "__type"
		},
		"810": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenDecimals"
		},
		"811": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTokenDecimals"
		},
		"812": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"813": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useMintToken"
		},
		"814": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useMintToken"
		},
		"815": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"816": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"817": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.receipt"
		},
		"818": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "__type.data"
		},
		"819": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"820": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "__type"
		},
		"821": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useClaimToken"
		},
		"822": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useClaimToken"
		},
		"823": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"824": {
			"sourceFileName": "../sdk/src/evm/core/classes/erc-20.ts",
			"qualifiedName": "__type"
		},
		"825": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferToken"
		},
		"826": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferToken"
		},
		"827": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"828": {
			"sourceFileName": "../sdk/src/evm/core/classes/erc-20.ts",
			"qualifiedName": "__type"
		},
		"829": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferBatchToken"
		},
		"830": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useTransferBatchToken"
		},
		"831": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"832": {
			"sourceFileName": "../sdk/src/evm/core/classes/erc-20.ts",
			"qualifiedName": "__type"
		},
		"833": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useBurnToken"
		},
		"834": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "useBurnToken"
		},
		"835": {
			"sourceFileName": "src/evm/hooks/async/token.ts",
			"qualifiedName": "contract"
		},
		"836": {
			"sourceFileName": "../sdk/src/evm/core/classes/erc-20.ts",
			"qualifiedName": "__type"
		},
		"837": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useIsAccountDeployed"
		},
		"838": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useIsAccountDeployed"
		},
		"839": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"840": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "admin"
		},
		"841": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "extraData"
		},
		"842": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccounts"
		},
		"843": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccounts"
		},
		"844": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"845": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useCreateAccount"
		},
		"846": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useCreateAccount"
		},
		"847": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"848": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccountsForAddress"
		},
		"849": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "useAccountsForAddress"
		},
		"850": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "contract"
		},
		"851": {
			"sourceFileName": "src/evm/hooks/async/account-factory.ts",
			"qualifiedName": "address"
		},
		"852": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountSigners"
		},
		"853": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountSigners"
		},
		"854": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "contract"
		},
		"855": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAddAdmin"
		},
		"856": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAddAdmin"
		},
		"857": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useRemoveAdmin"
		},
		"858": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useRemoveAdmin"
		},
		"859": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useCreateSessionKey"
		},
		"860": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useCreateSessionKey"
		},
		"861": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useRevokeSessionKey"
		},
		"862": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useRevokeSessionKey"
		},
		"863": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdmins"
		},
		"864": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdmins"
		},
		"865": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "contract"
		},
		"866": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdminsAndSigners"
		},
		"867": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "useAccountAdminsAndSigners"
		},
		"868": {
			"sourceFileName": "src/evm/hooks/async/account.ts",
			"qualifiedName": "contract"
		},
		"869": {
			"sourceFileName": "src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "useLogin"
		},
		"870": {
			"sourceFileName": "src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "useLogin"
		},
		"871": {
			"sourceFileName": "src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__object"
		},
		"872": {
			"sourceFileName": "src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__object.login"
		},
		"873": {
			"sourceFileName": "src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__function"
		},
		"874": {
			"sourceFileName": "src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__function"
		},
		"875": {
			"sourceFileName": "src/evm/hooks/auth/useLogin.ts",
			"qualifiedName": "__object.isLoading"
		},
		"876": {
			"sourceFileName": "src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "useLogout"
		},
		"877": {
			"sourceFileName": "src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "useLogout"
		},
		"878": {
			"sourceFileName": "src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "__object"
		},
		"879": {
			"sourceFileName": "src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "__object.logout"
		},
		"880": {
			"sourceFileName": "src/evm/hooks/auth/useLogout.ts",
			"qualifiedName": "__object.isLoading"
		},
		"881": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "useUser"
		},
		"882": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "useUser"
		},
		"883": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "TData"
		},
		"884": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "TContext"
		},
		"885": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__object"
		},
		"886": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__object.user"
		},
		"887": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__object.isLoggedIn"
		},
		"888": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "__object.isLoading"
		},
		"889": {
			"sourceFileName": "src/evm/hooks/auth/index.ts",
			"qualifiedName": "useAuth"
		},
		"890": {
			"sourceFileName": "src/evm/hooks/auth/index.ts",
			"qualifiedName": "useAuth"
		},
		"891": {
			"sourceFileName": "src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "useSwitchAccount"
		},
		"892": {
			"sourceFileName": "src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "useSwitchAccount"
		},
		"893": {
			"sourceFileName": "src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "__object"
		},
		"894": {
			"sourceFileName": "src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "__object.switchAccount"
		},
		"895": {
			"sourceFileName": "src/evm/hooks/auth/useSwitchAccount.ts",
			"qualifiedName": "__object.isLoading"
		},
		"896": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData"
		},
		"897": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData.data"
		},
		"898": {
			"sourceFileName": "../auth/src/core/schema/common.ts",
			"qualifiedName": "__type.address"
		},
		"899": {
			"sourceFileName": "../auth/src/core/schema/common.ts",
			"qualifiedName": "__type.session"
		},
		"900": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData.TData"
		},
		"901": {
			"sourceFileName": "src/evm/hooks/auth/useUser.ts",
			"qualifiedName": "UserWithData.TContext"
		},
		"902": {
			"sourceFileName": "src/evm/hooks/contracts/useEditionDrop.ts",
			"qualifiedName": "useEditionDrop"
		},
		"903": {
			"sourceFileName": "src/evm/hooks/contracts/useEditionDrop.ts",
			"qualifiedName": "useEditionDrop"
		},
		"904": {
			"sourceFileName": "src/evm/hooks/contracts/useEditionDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"905": {
			"sourceFileName": "src/evm/hooks/contracts/useEdition.ts",
			"qualifiedName": "useEdition"
		},
		"906": {
			"sourceFileName": "src/evm/hooks/contracts/useEdition.ts",
			"qualifiedName": "useEdition"
		},
		"907": {
			"sourceFileName": "src/evm/hooks/contracts/useEdition.ts",
			"qualifiedName": "contractAddress"
		},
		"908": {
			"sourceFileName": "src/evm/hooks/contracts/useNFTDrop.ts",
			"qualifiedName": "useNFTDrop"
		},
		"909": {
			"sourceFileName": "src/evm/hooks/contracts/useNFTDrop.ts",
			"qualifiedName": "useNFTDrop"
		},
		"910": {
			"sourceFileName": "src/evm/hooks/contracts/useNFTDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"911": {
			"sourceFileName": "src/evm/hooks/contracts/useMarketplace.ts",
			"qualifiedName": "useMarketplace"
		},
		"912": {
			"sourceFileName": "src/evm/hooks/contracts/useMarketplace.ts",
			"qualifiedName": "useMarketplace"
		},
		"913": {
			"sourceFileName": "src/evm/hooks/contracts/useMarketplace.ts",
			"qualifiedName": "contractAddress"
		},
		"914": {
			"sourceFileName": "src/evm/hooks/contracts/useNFTCollection.ts",
			"qualifiedName": "useNFTCollection"
		},
		"915": {
			"sourceFileName": "src/evm/hooks/contracts/useNFTCollection.ts",
			"qualifiedName": "useNFTCollection"
		},
		"916": {
			"sourceFileName": "src/evm/hooks/contracts/useNFTCollection.ts",
			"qualifiedName": "contractAddress"
		},
		"917": {
			"sourceFileName": "src/evm/hooks/contracts/usePack.ts",
			"qualifiedName": "usePack"
		},
		"918": {
			"sourceFileName": "src/evm/hooks/contracts/usePack.ts",
			"qualifiedName": "usePack"
		},
		"919": {
			"sourceFileName": "src/evm/hooks/contracts/usePack.ts",
			"qualifiedName": "contractAddress"
		},
		"920": {
			"sourceFileName": "src/evm/hooks/contracts/useToken.ts",
			"qualifiedName": "useToken"
		},
		"921": {
			"sourceFileName": "src/evm/hooks/contracts/useToken.ts",
			"qualifiedName": "useToken"
		},
		"922": {
			"sourceFileName": "src/evm/hooks/contracts/useToken.ts",
			"qualifiedName": "contractAddress"
		},
		"923": {
			"sourceFileName": "src/evm/hooks/contracts/useTokenDrop.ts",
			"qualifiedName": "useTokenDrop"
		},
		"924": {
			"sourceFileName": "src/evm/hooks/contracts/useTokenDrop.ts",
			"qualifiedName": "useTokenDrop"
		},
		"925": {
			"sourceFileName": "src/evm/hooks/contracts/useTokenDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"926": {
			"sourceFileName": "src/evm/hooks/contracts/useVote.ts",
			"qualifiedName": "useVote"
		},
		"927": {
			"sourceFileName": "src/evm/hooks/contracts/useVote.ts",
			"qualifiedName": "useVote"
		},
		"928": {
			"sourceFileName": "src/evm/hooks/contracts/useVote.ts",
			"qualifiedName": "contractAddress"
		},
		"929": {
			"sourceFileName": "src/evm/hooks/contracts/useSplit.ts",
			"qualifiedName": "useSplit"
		},
		"930": {
			"sourceFileName": "src/evm/hooks/contracts/useSplit.ts",
			"qualifiedName": "useSplit"
		},
		"931": {
			"sourceFileName": "src/evm/hooks/contracts/useSplit.ts",
			"qualifiedName": "contractAddress"
		},
		"932": {
			"sourceFileName": "src/evm/hooks/contracts/useMultiwrap.ts",
			"qualifiedName": "useMultiwrap"
		},
		"933": {
			"sourceFileName": "src/evm/hooks/contracts/useMultiwrap.ts",
			"qualifiedName": "useMultiwrap"
		},
		"934": {
			"sourceFileName": "src/evm/hooks/contracts/useMultiwrap.ts",
			"qualifiedName": "contractAddress"
		},
		"935": {
			"sourceFileName": "src/evm/hooks/contracts/useSignatureDrop.ts",
			"qualifiedName": "useSignatureDrop"
		},
		"936": {
			"sourceFileName": "src/evm/hooks/contracts/useSignatureDrop.ts",
			"qualifiedName": "useSignatureDrop"
		},
		"937": {
			"sourceFileName": "src/evm/hooks/contracts/useSignatureDrop.ts",
			"qualifiedName": "contractAddress"
		},
		"938": {
			"sourceFileName": "src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "useStorageUpload"
		},
		"939": {
			"sourceFileName": "src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "useStorageUpload"
		},
		"940": {
			"sourceFileName": "src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "T"
		},
		"941": {
			"sourceFileName": "src/evm/hooks/storage/useStorageUpload.ts",
			"qualifiedName": "uploadOptions"
		},
		"942": {
			"sourceFileName": "src/evm/hooks/storage/index.ts",
			"qualifiedName": "useStorage"
		},
		"943": {
			"sourceFileName": "src/evm/hooks/storage/index.ts",
			"qualifiedName": "useStorage"
		},
		"944": {
			"sourceFileName": "src/evm/hooks/useNetworkMismatch.ts",
			"qualifiedName": "useNetworkMismatch"
		},
		"945": {
			"sourceFileName": "src/evm/hooks/useNetworkMismatch.ts",
			"qualifiedName": "useNetworkMismatch"
		},
		"954": {
			"sourceFileName": "src/evm/hooks/useSupportedChains.ts",
			"qualifiedName": "useSupportedChains"
		},
		"955": {
			"sourceFileName": "src/evm/hooks/useSupportedChains.ts",
			"qualifiedName": "useSupportedChains"
		},
		"956": {
			"sourceFileName": "src/evm/hooks/useSupportedWallet.ts",
			"qualifiedName": "useSupportedWallet"
		},
		"957": {
			"sourceFileName": "src/evm/hooks/useSupportedWallet.ts",
			"qualifiedName": "useSupportedWallet"
		},
		"958": {
			"sourceFileName": "src/evm/hooks/useSupportedWallet.ts",
			"qualifiedName": "id"
		},
		"959": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "useAppURI"
		},
		"960": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "useAppURI"
		},
		"961": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "TContract"
		},
		"962": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "contract"
		},
		"963": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "useSetAppURI"
		},
		"964": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "useSetAppURI"
		},
		"965": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "contract"
		},
		"966": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"967": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "__type.receipt"
		},
		"968": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "__type.data"
		},
		"969": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"970": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"971": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "__type"
		},
		"972": {
			"sourceFileName": "src/evm/hooks/async/app.ts",
			"qualifiedName": "__type.uri"
		},
		"978": {
			"sourceFileName": "src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "ThirdwebSDKProvider"
		},
		"979": {
			"sourceFileName": "src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "ThirdwebSDKProvider"
		},
		"980": {
			"sourceFileName": "src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "TChains"
		},
		"981": {
			"sourceFileName": "src/evm/providers/thirdweb-sdk-provider.tsx",
			"qualifiedName": "props"
		},
		"982": {
			"sourceFileName": "src/evm/hooks/useSDK.ts",
			"qualifiedName": "useSDK"
		},
		"983": {
			"sourceFileName": "src/evm/hooks/useSDK.ts",
			"qualifiedName": "useSDK"
		},
		"986": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps"
		},
		"987": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.supportedChains"
		},
		"988": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.signer"
		},
		"989": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.sdkOptions"
		},
		"990": {
			"sourceFileName": "../sdk/src/evm/schema/sdk-options.ts",
			"qualifiedName": "__type"
		},
		"991": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.storageInterface"
		},
		"992": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.authConfig"
		},
		"993": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.activeChain"
		},
		"994": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"995": {
			"sourceFileName": "\u0000",
			"qualifiedName": "__type"
		},
		"996": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.clientId"
		},
		"997": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.secretKey"
		},
		"998": {
			"sourceFileName": "src/core/providers/query-client.tsx",
			"qualifiedName": "QueryClientProviderProps.queryClient"
		},
		"999": {
			"sourceFileName": "src/evm/providers/types.ts",
			"qualifiedName": "ThirdwebSDKProviderProps.TChains"
		},
		"1012": {
			"sourceFileName": "src/evm/utils/addresses.ts",
			"qualifiedName": "shortenAddress"
		},
		"1013": {
			"sourceFileName": "src/evm/utils/addresses.ts",
			"qualifiedName": "shortenAddress"
		},
		"1014": {
			"sourceFileName": "src/evm/utils/addresses.ts",
			"qualifiedName": "address"
		},
		"1015": {
			"sourceFileName": "src/evm/utils/addresses.ts",
			"qualifiedName": "extraShort"
		},
		"1024": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "Chain"
		},
		"1025": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1026": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.id"
		},
		"1027": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.name"
		},
		"1028": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.nativeCurrency"
		},
		"1029": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.rpcUrls"
		},
		"1030": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.blockExplorers"
		},
		"1031": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1032": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.name"
		},
		"1033": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.url"
		},
		"1034": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.testnet"
		},
		"1035": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "WalletAddress"
		},
		"1036": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "TokenParams"
		},
		"1037": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1038": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1039": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1040": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "TokenBurnParams"
		},
		"1041": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1042": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1043": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "NFTContract"
		},
		"1044": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "TokenContract"
		},
		"1045": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "Erc721OrErc1155"
		},
		"1046": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "TransferNFTParams"
		},
		"1047": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1048": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1049": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1050": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1051": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "AirdropNFTParams"
		},
		"1052": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1053": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1054": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.addresses"
		},
		"1055": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "MintNFTSupplyParams"
		},
		"1056": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1057": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1058": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.additionalSupply"
		},
		"1059": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1060": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "MintNFTParams"
		},
		"1061": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1062": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.metadata"
		},
		"1063": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1064": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.supply"
		},
		"1065": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "MintNFTReturnType"
		},
		"1066": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "TContract"
		},
		"1067": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "BurnNFTParams"
		},
		"1068": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1069": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1070": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1071": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "DropContract"
		},
		"1072": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "RevealableContract"
		},
		"1073": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "DelayedRevealLazyMintInput"
		},
		"1074": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1075": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.placeholder"
		},
		"1076": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.metadatas"
		},
		"1077": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.password"
		},
		"1078": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "RevealLazyMintInput"
		},
		"1079": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1080": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.batchId"
		},
		"1081": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.password"
		},
		"1082": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "ClaimNFTParams"
		},
		"1083": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1084": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1085": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.quantity"
		},
		"1086": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.options"
		},
		"1087": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.tokenId"
		},
		"1088": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "ClaimNFTReturnType"
		},
		"1089": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "MakeBidParams"
		},
		"1090": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1091": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1092": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.bid"
		},
		"1093": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "MakeOfferParams"
		},
		"1094": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1095": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1096": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.pricePerToken"
		},
		"1097": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.quantity"
		},
		"1098": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "AcceptDirectOffer"
		},
		"1099": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1100": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1101": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.addressOfOfferor"
		},
		"1102": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "ExecuteAuctionSale"
		},
		"1103": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1104": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.listingId"
		},
		"1105": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "BuyNowParams"
		},
		"1106": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1107": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.id"
		},
		"1108": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.type"
		},
		"1109": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.buyAmount"
		},
		"1110": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.buyForWallet"
		},
		"1111": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1112": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.id"
		},
		"1113": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.type"
		},
		"1114": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "TListingType"
		},
		"1115": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "ClaimTokenParams"
		},
		"1116": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type"
		},
		"1117": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.to"
		},
		"1118": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.amount"
		},
		"1119": {
			"sourceFileName": "src/evm/types.ts",
			"qualifiedName": "__type.checkERC20Allowance"
		},
		"1136": {
			"sourceFileName": "src/evm/hooks/useTransactions.ts",
			"qualifiedName": "useWatchTransactions"
		},
		"1137": {
			"sourceFileName": "src/evm/hooks/useTransactions.ts",
			"qualifiedName": "useWatchTransactions"
		},
		"1138": {
			"sourceFileName": "src/evm/hooks/useTransactions.ts",
			"qualifiedName": "watchTransactionParams"
		},
		"1139": {
			"sourceFileName": "src/evm/hooks/useTransactions.ts",
			"qualifiedName": "UseWatchTransactionsParams"
		},
		"1140": {
			"sourceFileName": "src/evm/hooks/useTransactions.ts",
			"qualifiedName": "__type"
		},
		"1141": {
			"sourceFileName": "src/evm/hooks/useTransactions.ts",
			"qualifiedName": "__type.limit"
		}
	}
}
