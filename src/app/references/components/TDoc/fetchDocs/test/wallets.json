{
	"meta": {
		"typedocBetterJsonVersion": "0.5.3"
	},
	"functions": [
		{
			"kind": "function",
			"name": "AUTH_TOKEN_LOCAL_STORAGE_NAME",
			"signatures": [
				{
					"parameters": [
						{
							"name": "clientId",
							"type": "string"
						}
					],
					"returns": {
						"type": "string"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/constants/settings.ts#L17"
		},
		{
			"kind": "function",
			"name": "DEVICE_SHARE_LOCAL_STORAGE_NAME",
			"signatures": [
				{
					"parameters": [
						{
							"name": "clientId",
							"type": "string"
						},
						{
							"name": "userId",
							"type": "string"
						}
					],
					"returns": {
						"type": "string"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/constants/settings.ts#L21"
		},
		{
			"kind": "function",
			"name": "DEVICE_SHARE_LOCAL_STORAGE_NAME_DEPRECATED",
			"signatures": [
				{
					"parameters": [
						{
							"name": "clientId",
							"type": "string"
						}
					],
					"returns": {
						"type": "string"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/constants/settings.ts#L25"
		},
		{
			"kind": "function",
			"name": "WALLET_USER_DETAILS_LOCAL_STORAGE_NAME",
			"signatures": [
				{
					"parameters": [
						{
							"name": "clientId",
							"type": "string"
						}
					],
					"returns": {
						"type": "string"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/constants/settings.ts#L12"
		},
		{
			"kind": "function",
			"name": "WALLET_USER_ID_LOCAL_STORAGE_NAME",
			"signatures": [
				{
					"parameters": [
						{
							"name": "clientId",
							"type": "string"
						}
					],
					"returns": {
						"type": "string"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/constants/settings.ts#L14"
		},
		{
			"kind": "function",
			"name": "assertWindowEthereum",
			"signatures": [
				{
					"parameters": [
						{
							"name": "w",
							"type": "Window"
						}
					],
					"returns": {
						"type": "w is (WindowWithEthereum)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/utils/assertWindowEthereum.ts#L7"
		},
		{
			"kind": "function",
			"name": "createAsyncLocalStorage",
			"signatures": [
				{
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": {
						"type": "AsyncLocalStorage"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L43"
		},
		{
			"kind": "function",
			"name": "createLocalStorage",
			"signatures": [
				{
					"parameters": [
						{
							"name": "name",
							"type": "string"
						}
					],
					"returns": {
						"type": "LocalStorage"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L29"
		},
		{
			"kind": "function",
			"name": "getAllSigners",
			"signatures": [
				{
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Get all the signers added to the given smart wallet (excluding owner)"
								}
							]
						}
					],
					"parameters": [
						{
							"name": "chain",
							"type": "ChainOrRpcUrl",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The chain to use"
										}
									]
								}
							]
						},
						{
							"name": "factoryAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The factory address"
										}
									]
								}
							]
						},
						{
							"name": "smartWalletAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The smart wallet address"
										}
									]
								}
							]
						}
					],
					"returns": {
						"type": "Promise<any>",
						"summary": [
							{
								"type": "paragraph",
								"children": [
									{
										"type": "text",
										"value": "The list of signers"
									}
								]
							}
						]
					},
					"blockTags": []
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/utils.ts#L32"
		},
		{
			"kind": "function",
			"name": "getAllSmartWallets",
			"signatures": [
				{
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Get all the smart wallets associated with a personal wallet address"
								}
							]
						}
					],
					"parameters": [
						{
							"name": "chain",
							"type": "ChainOrRpcUrl",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The chain to use"
										}
									]
								}
							]
						},
						{
							"name": "factoryAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The factory address"
										}
									]
								}
							]
						},
						{
							"name": "personalWalletAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The personal wallet address"
										}
									]
								}
							]
						}
					],
					"returns": {
						"type": "Promise<AccessibleSmartWallets>",
						"summary": [
							{
								"type": "paragraph",
								"children": [
									{
										"type": "text",
										"value": "The list of smart wallets"
									}
								]
							}
						]
					},
					"blockTags": []
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/utils.ts#L52"
		},
		{
			"kind": "function",
			"name": "getInjectedCoin98Provider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/coin98/getInjectedCoin98Provider.ts#L10"
		},
		{
			"kind": "function",
			"name": "getInjectedCoinbaseProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/coinbase-wallet/getInjectedCoinbaseProvider.ts#L4"
		},
		{
			"kind": "function",
			"name": "getInjectedCoreWalletProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/core-wallet/getInjectedCoreWalletProvider.ts#L10"
		},
		{
			"kind": "function",
			"name": "getInjectedCryptoDefiWalletProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/crypto-defi-wallet/getInjectedCryptoDefiWalletProvider.ts#L10"
		},
		{
			"kind": "function",
			"name": "getInjectedMetamaskProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/metamask/getInjectedMetamaskProvider.ts#L4"
		},
		{
			"kind": "function",
			"name": "getInjectedOKXProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/okx/getInjectedOKXProvider.ts#L10"
		},
		{
			"kind": "function",
			"name": "getInjectedPhantomProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/phantom/getInjectedPhantomProvider.ts#L11"
		},
		{
			"kind": "function",
			"name": "getInjectedRabbyProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/rabby/getInjectedRabbyProvider.ts#L10"
		},
		{
			"kind": "function",
			"name": "getInjectedRainbowProvider",
			"signatures": [
				{
					"returns": {
						"type": "(Ethereum) | (undefined)"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/rainbow/getInjectedRainbowProvider.ts#L4"
		},
		{
			"kind": "function",
			"name": "getSmartWalletAddress",
			"signatures": [
				{
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Get the associated smart wallet address for a given personal wallet address"
								}
							]
						}
					],
					"parameters": [
						{
							"name": "chain",
							"type": "ChainOrRpcUrl",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The chain to use"
										}
									]
								}
							]
						},
						{
							"name": "factoryAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The factory address"
										}
									]
								}
							]
						},
						{
							"name": "personalWalletAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The personal wallet address"
										}
									]
								}
							]
						},
						{
							"name": "data",
							"type": "BytesLike"
						}
					],
					"returns": {
						"type": "Promise<string>",
						"summary": [
							{
								"type": "paragraph",
								"children": [
									{
										"type": "text",
										"value": "The smart wallet address"
									}
								]
							}
						]
					},
					"blockTags": []
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/utils.ts#L107"
		},
		{
			"kind": "function",
			"name": "isSmartWalletDeployed",
			"signatures": [
				{
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Check if a smart wallet is deployed for a given personal wallet address"
								}
							]
						}
					],
					"parameters": [
						{
							"name": "chain",
							"type": "ChainOrRpcUrl",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The chain to use"
										}
									]
								}
							]
						},
						{
							"name": "factoryAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The factory address"
										}
									]
								}
							]
						},
						{
							"name": "personalWalletAddress",
							"type": "string",
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "The personal wallet address"
										}
									]
								}
							]
						},
						{
							"name": "data",
							"type": "BytesLike"
						}
					],
					"returns": {
						"type": "Promise<boolean>",
						"summary": [
							{
								"type": "paragraph",
								"children": [
									{
										"type": "text",
										"value": "True if the smart wallet is deployed"
									}
								]
							}
						]
					},
					"blockTags": []
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/utils.ts#L81"
		},
		{
			"kind": "function",
			"name": "isValidPrivateKey",
			"signatures": [
				{
					"parameters": [
						{
							"name": "value",
							"type": "string"
						}
					],
					"returns": {
						"type": "boolean"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L513"
		},
		{
			"kind": "function",
			"name": "isWalletAnalyticsEnabled",
			"signatures": [
				{
					"returns": {
						"type": "boolean"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/utils/setWalletAnaltyicsEnabled.ts#L3"
		},
		{
			"kind": "function",
			"name": "normalizeChainId",
			"signatures": [
				{
					"parameters": [
						{
							"name": "chainId",
							"type": "(string) | (number) | (bigint)"
						}
					],
					"returns": {
						"type": "number"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/normalizeChainId.ts#L1"
		},
		{
			"kind": "function",
			"name": "setWalletAnalyticsEnabled",
			"signatures": [
				{
					"parameters": [
						{
							"name": "enabled",
							"type": "boolean"
						}
					],
					"returns": {
						"type": "void"
					}
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/utils/setWalletAnaltyicsEnabled.ts#L7"
		}
	],
	"variables": [
		{
			"kind": "variable",
			"name": "DEFAULT_DAPP_META",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/constants/dappMeta.ts#L3",
			"type": "DAppMetaData",
			"flags": {
				"isConst": true
			}
		},
		{
			"kind": "variable",
			"name": "EIP155_SIGNING_METHODS",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "Methods"
						}
					]
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/constants/wc.ts#L7",
			"type": "{ ETH_SEND_TRANSACTION: string; ETH_SIGN: string; ETH_SIGN_TRANSACTION: string; ETH_SIGN_TYPED_DATA: string; ETH_SIGN_TYPED_DATA_V3: string; ETH_SIGN_TYPED_DATA_V4: string; PERSONAL_SIGN: string; SWITCH_CHAIN: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "ETH_SEND_TRANSACTION",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "ETH_SIGN",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "ETH_SIGN_TRANSACTION",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "ETH_SIGN_TYPED_DATA",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "ETH_SIGN_TYPED_DATA_V3",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "ETH_SIGN_TYPED_DATA_V4",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "PERSONAL_SIGN",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "SWITCH_CHAIN",
					"type": "string"
				}
			],
			"flags": {
				"isConst": true
			}
		},
		{
			"kind": "variable",
			"name": "SafeSupportedChainsSet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/safe/constants.ts#L27",
			"type": "Set<number>",
			"flags": {
				"isConst": true
			}
		},
		{
			"kind": "variable",
			"name": "WalletConnectV1",
			"summary": [],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect-v1.ts#L9",
			"type": "typeof WalletConnect",
			"flags": {
				"isConst": true
			}
		},
		{
			"kind": "variable",
			"name": "walletIds",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/constants/walletIds.ts#L1",
			"type": "{ blocto: \"blocto\"; coin98: \"coin98\"; coinbase: \"coinbase\"; coreWallet: \"coreWallet\"; cryptoDefiWallet: \"cryptoDefiWallet\"; embeddedWallet: \"embeddedWallet\"; frame: \"frame\"; localWallet: \"localWallet\"; magicLink: \"magicLink\"; metamask: \"metamask\"; okx: \"okx\"; paper: \"paper\"; phantom: \"phantom\"; rabby: \"rabby\"; rainbow: \"rainbowWallet\"; safe: \"safe\"; smartWallet: \"smartWallet\"; tokenBoundSmartWallet: \"tokenBoundSmartWallet\"; trust: \"trust\"; walletConnect: \"walletConnect\"; walletConnectV1: \"walletConnectV1\" }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "blocto",
					"type": "\"blocto\""
				},
				{
					"kind": "subtype",
					"name": "coin98",
					"type": "\"coin98\""
				},
				{
					"kind": "subtype",
					"name": "coinbase",
					"type": "\"coinbase\""
				},
				{
					"kind": "subtype",
					"name": "coreWallet",
					"type": "\"coreWallet\""
				},
				{
					"kind": "subtype",
					"name": "cryptoDefiWallet",
					"type": "\"cryptoDefiWallet\""
				},
				{
					"kind": "subtype",
					"name": "embeddedWallet",
					"type": "\"embeddedWallet\""
				},
				{
					"kind": "subtype",
					"name": "frame",
					"type": "\"frame\""
				},
				{
					"kind": "subtype",
					"name": "localWallet",
					"type": "\"localWallet\""
				},
				{
					"kind": "subtype",
					"name": "magicLink",
					"type": "\"magicLink\""
				},
				{
					"kind": "subtype",
					"name": "metamask",
					"type": "\"metamask\""
				},
				{
					"kind": "subtype",
					"name": "okx",
					"type": "\"okx\""
				},
				{
					"kind": "subtype",
					"name": "paper",
					"type": "\"paper\""
				},
				{
					"kind": "subtype",
					"name": "phantom",
					"type": "\"phantom\""
				},
				{
					"kind": "subtype",
					"name": "rabby",
					"type": "\"rabby\""
				},
				{
					"kind": "subtype",
					"name": "rainbow",
					"type": "\"rainbowWallet\""
				},
				{
					"kind": "subtype",
					"name": "safe",
					"type": "\"safe\""
				},
				{
					"kind": "subtype",
					"name": "smartWallet",
					"type": "\"smartWallet\""
				},
				{
					"kind": "subtype",
					"name": "tokenBoundSmartWallet",
					"type": "\"tokenBoundSmartWallet\""
				},
				{
					"kind": "subtype",
					"name": "trust",
					"type": "\"trust\""
				},
				{
					"kind": "subtype",
					"name": "walletConnect",
					"type": "\"walletConnect\""
				},
				{
					"kind": "subtype",
					"name": "walletConnectV1",
					"type": "\"walletConnectV1\""
				}
			],
			"flags": {
				"isConst": true
			}
		}
	],
	"types": [
		{
			"kind": "type",
			"name": "AccountApiParams",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L37",
			"extends": ["Omit<BaseApiParams, \"provider\">", "ContractInfo"],
			"type": "{accountAddress : string,accountInfo : AccountContractInfo,chain : ChainOrRpcUrl,clientId : string,entryPointAddress : string,factoryAddress : string,factoryInfo : FactoryContractInfo,localSigner : Signer,overheads : Partial<GasOverheads>,paymasterAPI : PaymasterAPI,secretKey : string}",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "accountAddress",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "accountInfo",
					"type": "AccountContractInfo"
				},
				{
					"kind": "subtype",
					"name": "chain",
					"type": "ChainOrRpcUrl"
				},
				{
					"kind": "subtype",
					"name": "clientId",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "entryPointAddress",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "factoryAddress",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "factoryInfo",
					"type": "FactoryContractInfo"
				},
				{
					"kind": "subtype",
					"name": "localSigner",
					"type": "Signer"
				},
				{
					"kind": "subtype",
					"name": "overheads",
					"type": "Partial<GasOverheads>"
				},
				{
					"kind": "subtype",
					"name": "paymasterAPI",
					"type": "PaymasterAPI"
				},
				{
					"kind": "subtype",
					"name": "secretKey",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "AsyncStorage",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L1",
			"type": "{getItem : (key: string) => Promise<(null) | (string)>,removeItem : (key: string) => Promise<void>,setItem : (key: string, value: string) => Promise<void>}",
			"typeDeclaration": [
				{
					"kind": "function",
					"name": "getItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<(null) | (string)>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L2"
				},
				{
					"kind": "function",
					"name": "removeItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L4"
				},
				{
					"kind": "function",
					"name": "setItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								},
								{
									"name": "value",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L3"
				}
			]
		},
		{
			"kind": "type",
			"name": "DAppMetaData",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "the metadata to pass to wallet connection dialog (may show up during the wallet-connection process)"
						}
					]
				}
			],
			"blockTags": [
				{
					"tag": "@remarks",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "this is only used for wallet connect and wallet link, metamask does not support it"
								}
							]
						}
					]
				}
			],
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/dAppMeta.ts#L6",
			"type": "{description : string,isDarkMode : boolean,logoUrl : string,name : string,url : string}",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "description",
					"type": "string",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "optional - a description of your app"
								}
							]
						}
					]
				},
				{
					"kind": "subtype",
					"name": "isDarkMode",
					"type": "boolean",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "optional - whether to show the connect dialog in darkmode or not"
								}
							]
						}
					]
				},
				{
					"kind": "subtype",
					"name": "logoUrl",
					"type": "string",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "optional - a url that points to a logo (or favicon) of your app"
								}
							]
						}
					]
				},
				{
					"kind": "subtype",
					"name": "name",
					"type": "string",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "the name of your app"
								}
							]
						}
					]
				},
				{
					"kind": "subtype",
					"name": "url",
					"type": "string",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "the url where your app is hosted"
								}
							]
						}
					]
				}
			]
		},
		{
			"kind": "type",
			"name": "EVMWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/index.ts#L3",
			"type": "{getSigner : () => Promise<Signer>}",
			"typeDeclaration": [
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/index.ts#L4"
				}
			]
		},
		{
			"kind": "type",
			"name": "GenericAuthWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/interfaces/auth.ts#L2",
			"type": "{type : \"evm\",getAddress : () => Promise<string>,getChainId : () => Promise<number>,signMessage : (message: string) => Promise<string>,verifySignature : (message: string, signature: string, address: string, chainId?: number) => Promise<boolean>}",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "type",
					"type": "\"evm\""
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/interfaces/auth.ts#L4"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"returns": {
								"type": "Promise<number>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/interfaces/auth.ts#L5"
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"parameters": [
								{
									"name": "message",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/interfaces/auth.ts#L6"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/interfaces/auth.ts#L7"
				}
			]
		},
		{
			"kind": "type",
			"name": "IWalletConnectReceiver",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L70",
			"type": "{approveRequest : () => Promise<void>,approveSession : () => Promise<void>,connectApp : (uri: string) => Promise<void>,disconnectSession : () => Promise<void>,getActiveSessions : () => WCSession[],isWCReceiverEnabled : () => boolean,rejectRequest : () => Promise<void>,rejectSession : () => Promise<void>}",
			"typeDeclaration": [
				{
					"kind": "function",
					"name": "approveRequest",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L74"
				},
				{
					"kind": "function",
					"name": "approveSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L72"
				},
				{
					"kind": "function",
					"name": "connectApp",
					"signatures": [
						{
							"parameters": [
								{
									"name": "uri",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L71"
				},
				{
					"kind": "function",
					"name": "disconnectSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L77"
				},
				{
					"kind": "function",
					"name": "getActiveSessions",
					"signatures": [
						{
							"returns": {
								"type": "WCSession[]"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L76"
				},
				{
					"kind": "function",
					"name": "isWCReceiverEnabled",
					"signatures": [
						{
							"returns": {
								"type": "boolean"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L78"
				},
				{
					"kind": "function",
					"name": "rejectRequest",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L75"
				},
				{
					"kind": "function",
					"name": "rejectSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L73"
				}
			]
		},
		{
			"kind": "type",
			"name": "ProviderConfig",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L48",
			"extends": ["ContractInfo"],
			"type": "{accountAddress : string,accountInfo : AccountContractInfo,bundlerUrl : string,chain : ChainOrRpcUrl,clientId : string,entryPointAddress : string,factoryAddress : string,factoryInfo : FactoryContractInfo,localSigner : Signer,paymasterAPI : PaymasterAPI,secretKey : string}",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "accountAddress",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "accountInfo",
					"type": "AccountContractInfo"
				},
				{
					"kind": "subtype",
					"name": "bundlerUrl",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "chain",
					"type": "ChainOrRpcUrl"
				},
				{
					"kind": "subtype",
					"name": "clientId",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "entryPointAddress",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "factoryAddress",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "factoryInfo",
					"type": "FactoryContractInfo"
				},
				{
					"kind": "subtype",
					"name": "localSigner",
					"type": "Signer"
				},
				{
					"kind": "subtype",
					"name": "paymasterAPI",
					"type": "PaymasterAPI"
				},
				{
					"kind": "subtype",
					"name": "secretKey",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "SafeConnectionArgs",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/safe/types.ts#L4",
			"type": "{chain : Pick<Chain, (\"chainId\") | (\"rpc\")>,personalWallet : EVMWallet,safeAddress : string}",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "chain",
					"type": "Pick<Chain, (\"chainId\") | (\"rpc\")>"
				},
				{
					"kind": "subtype",
					"name": "personalWallet",
					"type": "EVMWallet"
				},
				{
					"kind": "subtype",
					"name": "safeAddress",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "SyncStorage",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L1",
			"type": "{getItem : (key: string) => (null) | (string),removeItem : (key: string) => void,setItem : (key: string, value: string) => void}",
			"typeDeclaration": [
				{
					"kind": "function",
					"name": "getItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "(null) | (string)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L2"
				},
				{
					"kind": "function",
					"name": "removeItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L4"
				},
				{
					"kind": "function",
					"name": "setItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								},
								{
									"name": "value",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L3"
				}
			]
		},
		{
			"kind": "type",
			"name": "WalletEvents",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L30",
			"type": "{change : (data: WalletData) => void,connect : (data: WalletData) => void,disconnect : () => void,display_uri : (uri: string) => void,error : (error: Error) => void,message : (__namedParameters: { data: unknown; type: string }) => void,request : () => void,wc_session_request_sent : () => void}",
			"typeDeclaration": [
				{
					"kind": "function",
					"name": "change",
					"signatures": [
						{
							"parameters": [
								{
									"name": "data",
									"type": "WalletData"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L32"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "data",
									"type": "WalletData"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L31"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L34"
				},
				{
					"kind": "function",
					"name": "display_uri",
					"signatures": [
						{
							"parameters": [
								{
									"name": "uri",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L36"
				},
				{
					"kind": "function",
					"name": "error",
					"signatures": [
						{
							"parameters": [
								{
									"name": "error",
									"type": "Error"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L35"
				},
				{
					"kind": "function",
					"name": "message",
					"signatures": [
						{
							"parameters": [
								{
									"name": "__namedParameters",
									"type": "{ data: unknown; type: string }"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L33"
				},
				{
					"kind": "function",
					"name": "request",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L38"
				},
				{
					"kind": "function",
					"name": "wc_session_request_sent",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L37"
				}
			]
		},
		{
			"kind": "type",
			"name": "AccessibleSmartWallets",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/utils.ts#L8",
			"type": "{ hasSignerRole: string[]; owned: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "hasSignerRole",
					"type": "string[]"
				},
				{
					"kind": "subtype",
					"name": "owned",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "AccountContractInfo",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L70",
			"type": "{ abi: ContractInterface; execute: (account: SmartContract, target: string, value: BigNumberish, data: string) => Promise<Transaction>; getNonce: (account: SmartContract) => Promise<BigNumber> }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "abi",
					"type": "ContractInterface"
				},
				{
					"kind": "subtype",
					"name": "execute",
					"type": "(account: SmartContract, target: string, value: BigNumberish, data: string) => Promise<Transaction>"
				},
				{
					"kind": "subtype",
					"name": "getNonce",
					"type": "(account: SmartContract) => Promise<BigNumber>"
				}
			]
		},
		{
			"kind": "type",
			"name": "AuthAndWalletRpcReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/auth.ts#L41",
			"type": "AuthStoredTokenWithCookieReturnType & { walletDetails: SetUpWalletRpcReturnType }"
		},
		{
			"kind": "type",
			"name": "AuthDetails",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L42",
			"type": "{ backupRecoveryCodes: string[]; email: string; encryptionKey: string; recoveryShareManagement: RecoveryShareManagement; userWalletId: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "backupRecoveryCodes",
					"type": "string[]"
				},
				{
					"kind": "subtype",
					"name": "email",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "encryptionKey",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "recoveryShareManagement",
					"type": "RecoveryShareManagement"
				},
				{
					"kind": "subtype",
					"name": "userWalletId",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "AuthLoginReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/auth.ts#L45",
			"type": "{ user: InitializedUser }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "user",
					"type": "InitializedUser"
				}
			]
		},
		{
			"kind": "type",
			"name": "AuthParams",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/types.ts#L55",
			"type": "(EmailVerificationAuthParams) | (OauthAuthParams) | (JwtAuthParams) | (IframeOtpAuthParams) | (IframeAuthParams)"
		},
		{
			"kind": "type",
			"name": "AuthResult",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/types.ts#L63",
			"type": "{ isNewUser: boolean; needsRecoveryCode: boolean; user: InitializedUser }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "isNewUser",
					"type": "boolean"
				},
				{
					"kind": "subtype",
					"name": "needsRecoveryCode",
					"type": "boolean"
				},
				{
					"kind": "subtype",
					"name": "user",
					"type": "InitializedUser"
				}
			]
		},
		{
			"kind": "type",
			"name": "AuthStoredTokenWithCookieReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/auth.ts#L34",
			"type": "{ storedToken: StoredTokenType & { cookieString: string; isNewUser: boolean; shouldStoreCookieString: boolean } }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "storedToken",
					"type": "StoredTokenType & { cookieString: string; isNewUser: boolean; shouldStoreCookieString: boolean }"
				}
			]
		},
		{
			"kind": "type",
			"name": "Chain",
			"type": "{ chain: string; chainId: number; ens: { registry: string }; explorers: Readonly<ChainExplorer[]>; faucets: readonly string[]; features: Readonly<{ name: string }[]>; icon: Icon; infoURL: string; name: string; nativeCurrency: { decimals: number; name: string; symbol: string }; networkId: number; parent: { bridges: Readonly<{ url: string }[]>; chain: string; type: string }; redFlags: readonly string[]; rpc: readonly string[]; shortName: string; slip44: number; slug: string; status: string; testnet: boolean; title: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "chain",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "chainId",
					"type": "number"
				},
				{
					"kind": "subtype",
					"name": "ens",
					"type": "{ registry: string }"
				},
				{
					"kind": "subtype",
					"name": "explorers",
					"type": "Readonly<ChainExplorer[]>"
				},
				{
					"kind": "subtype",
					"name": "faucets",
					"type": "readonly string[]"
				},
				{
					"kind": "subtype",
					"name": "features",
					"type": "Readonly<{ name: string }[]>"
				},
				{
					"kind": "subtype",
					"name": "icon",
					"type": "Icon"
				},
				{
					"kind": "subtype",
					"name": "infoURL",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "nativeCurrency",
					"type": "{ decimals: number; name: string; symbol: string }"
				},
				{
					"kind": "subtype",
					"name": "networkId",
					"type": "number"
				},
				{
					"kind": "subtype",
					"name": "parent",
					"type": "{ bridges: Readonly<{ url: string }[]>; chain: string; type: string }"
				},
				{
					"kind": "subtype",
					"name": "redFlags",
					"type": "readonly string[]"
				},
				{
					"kind": "subtype",
					"name": "rpc",
					"type": "readonly string[]"
				},
				{
					"kind": "subtype",
					"name": "shortName",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "slip44",
					"type": "number"
				},
				{
					"kind": "subtype",
					"name": "slug",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "status",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "testnet",
					"type": "boolean"
				},
				{
					"kind": "subtype",
					"name": "title",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "Coin98Options",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L32",
			"type": "WalletOptions<Coin98AdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "CoinbaseWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L12",
			"type": "WalletOptions<{ headlessMode: boolean; theme: (\"dark\") | (\"light\") }>"
		},
		{
			"kind": "type",
			"name": "ConnectParams",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L22",
			"typeParameters": [
				{
					"name": "TOpts",
					"extendsType": "Record<string, any>",
					"defaultType": "{  }"
				}
			],
			"type": "{ chainId: number } & TOpts"
		},
		{
			"kind": "type",
			"name": "ContractInfo",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L65",
			"type": "{ accountInfo: AccountContractInfo; factoryInfo: FactoryContractInfo }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "accountInfo",
					"type": "AccountContractInfo"
				},
				{
					"kind": "subtype",
					"name": "factoryInfo",
					"type": "FactoryContractInfo"
				}
			]
		},
		{
			"kind": "type",
			"name": "ContractInfoInput",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L60",
			"type": "{ accountInfo: AccountContractInfo; factoryInfo: FactoryContractInfo }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "accountInfo",
					"type": "AccountContractInfo"
				},
				{
					"kind": "subtype",
					"name": "factoryInfo",
					"type": "FactoryContractInfo"
				}
			]
		},
		{
			"kind": "type",
			"name": "CoreWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L32",
			"type": "WalletOptions<CoreWalletAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "CreateAsyncStorage",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L7",
			"type": "(name: string) => AsyncStorage"
		},
		{
			"kind": "type",
			"name": "CryptoDefiWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L32",
			"type": "WalletOptions<CryptoDefiWalletAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "Ecosystem",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/interfaces/auth.ts#L1",
			"type": "\"evm\""
		},
		{
			"kind": "type",
			"name": "EmbeddedWalletAdditionalOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/types.ts#L4",
			"type": "{ chain: Pick<Chain, (\"chainId\") | (\"rpc\")>; clientId: string; onAuthSuccess: (authResult: AuthAndWalletRpcReturnType) => void }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "chain",
					"type": "Pick<Chain, (\"chainId\") | (\"rpc\")>"
				},
				{
					"kind": "subtype",
					"name": "clientId",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "onAuthSuccess",
					"type": "(authResult: AuthAndWalletRpcReturnType) => void"
				}
			]
		},
		{
			"kind": "type",
			"name": "EmbeddedWalletConnectionArgs",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/types.ts#L17",
			"type": "{ authResult: AuthResult; chainId: number }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "authResult",
					"type": "AuthResult"
				},
				{
					"kind": "subtype",
					"name": "chainId",
					"type": "number"
				}
			]
		},
		{
			"kind": "type",
			"name": "EmbeddedWalletConstructorType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L18",
			"type": "ClientIdConstructorType & { chain: Chain; onAuthSuccess: (authResult: AuthAndWalletRpcReturnType) => void; styles: CustomizationOptionsType }"
		},
		{
			"kind": "type",
			"name": "EmbeddedWalletOauthStrategy",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/types.ts#L29",
			"type": "(\"google\") | (\"apple\") | (\"facebook\")"
		},
		{
			"kind": "type",
			"name": "EmbeddedWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L12",
			"type": "WalletOptions<EmbeddedWalletAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "FactoryContractInfo",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L81",
			"type": "{ abi: ContractInterface; createAccount: (factory: SmartContract, owner: string) => Promise<Transaction>; getAccountAddress: (factory: SmartContract, owner: string) => Promise<string> }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "abi",
					"type": "ContractInterface"
				},
				{
					"kind": "subtype",
					"name": "createAccount",
					"type": "(factory: SmartContract, owner: string) => Promise<Transaction>"
				},
				{
					"kind": "subtype",
					"name": "getAccountAddress",
					"type": "(factory: SmartContract, owner: string) => Promise<string>"
				}
			]
		},
		{
			"kind": "type",
			"name": "GetAddressReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/signer.ts#L1",
			"type": "{ address: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "address",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "GetAuthDetailsReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L92",
			"type": "{ authDetails: AuthDetails }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "authDetails",
					"type": "AuthDetails"
				}
			]
		},
		{
			"kind": "type",
			"name": "GetHeadlessLoginLinkReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/auth.ts#L21",
			"type": "{ loginLink: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "loginLink",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "GetUser",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L115",
			"type": "({ status: UserWalletStatus.LOGGED_OUT }) | ({ authDetails: AuthDetails; status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED }) | ({ authDetails: AuthDetails; status: UserWalletStatus.LOGGED_IN_NEW_DEVICE; walletAddress: string }) | (InitializedUser)"
		},
		{
			"kind": "type",
			"name": "GetUserWalletStatusRpcReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L96",
			"type": "({ status: UserWalletStatus.LOGGED_OUT; user: undefined }) | ({ status: UserWalletStatus.LOGGED_IN_WALLET_UNINITIALIZED; user: { authDetails: AuthDetails } }) | ({ status: UserWalletStatus.LOGGED_IN_NEW_DEVICE; user: { authDetails: AuthDetails; walletAddress: string } }) | ({ status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED; user: Omit<InitializedUser, (\"wallet\") | (\"status\")> })"
		},
		{
			"kind": "type",
			"name": "InitializedUser",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L50",
			"type": "{ authDetails: AuthDetails; status: UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED; wallet: EmbeddedWallet; walletAddress: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "authDetails",
					"type": "AuthDetails"
				},
				{
					"kind": "subtype",
					"name": "status",
					"type": "UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED"
				},
				{
					"kind": "subtype",
					"name": "wallet",
					"type": "EmbeddedWallet"
				},
				{
					"kind": "subtype",
					"name": "walletAddress",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "LocalWalletConnectionArgs",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L28",
			"type": "{  }"
		},
		{
			"kind": "type",
			"name": "LocalWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L14",
			"type": "{ chain: Chain; secretKey: string; storage: AsyncStorage }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "chain",
					"type": "Chain"
				},
				{
					"kind": "subtype",
					"name": "secretKey",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "storage",
					"type": "AsyncStorage"
				}
			]
		},
		{
			"kind": "type",
			"name": "LogoutReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L91",
			"type": "{ success: boolean }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "success",
					"type": "boolean"
				}
			]
		},
		{
			"kind": "type",
			"name": "MagicLinkAdditionalOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L14",
			"type": "MagicAuthOptions"
		},
		{
			"kind": "type",
			"name": "MagicLinkConnectOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L16",
			"type": "MagicAuthConnectOptions"
		},
		{
			"kind": "type",
			"name": "MagicLinkOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L15",
			"type": "WalletOptions<MagicAuthOptions>"
		},
		{
			"kind": "type",
			"name": "MagicOAuthProvider",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L17",
			"type": "_OAuthProvider"
		},
		{
			"kind": "type",
			"name": "MetamaskWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L32",
			"type": "WalletOptions<MetamaskAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "OKXWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L32",
			"type": "WalletOptions<OKXAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "PaperWalletAdditionalOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/paper/types.ts#L12",
			"type": "{ advancedOptions: PaperAdvanceOptions; chain: Pick<Chain, (\"chainId\") | (\"rpc\")>; clientId: string; onAuthSuccess: (authResult: AuthAndWalletRpcReturnType) => void; paperClientId: string; styles: PaperConstructorType<RecoveryShareManagement>[\"styles\"] }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "advancedOptions",
					"type": "PaperAdvanceOptions"
				},
				{
					"kind": "subtype",
					"name": "chain",
					"type": "Pick<Chain, (\"chainId\") | (\"rpc\")>"
				},
				{
					"kind": "subtype",
					"name": "clientId",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "onAuthSuccess",
					"type": "(authResult: AuthAndWalletRpcReturnType) => void"
				},
				{
					"kind": "subtype",
					"name": "paperClientId",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "styles",
					"type": "PaperConstructorType<RecoveryShareManagement>[\"styles\"]"
				}
			]
		},
		{
			"kind": "type",
			"name": "PaperWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L13",
			"type": "WalletOptions<PaperWalletAdditionalOptions_>"
		},
		{
			"kind": "type",
			"name": "RabbyOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L32",
			"type": "WalletOptions<RabbyAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "RainbowWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L32",
			"type": "WalletOptions<RainbowAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "SafeWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L13",
			"type": "WalletOptions"
		},
		{
			"kind": "type",
			"name": "SendEmailOtpReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L86",
			"type": "{ isNewDevice: boolean; isNewUser: boolean; recoveryShareManagement: RecoveryShareManagement }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "isNewDevice",
					"type": "boolean"
				},
				{
					"kind": "subtype",
					"name": "isNewUser",
					"type": "boolean"
				},
				{
					"kind": "subtype",
					"name": "recoveryShareManagement",
					"type": "RecoveryShareManagement"
				}
			]
		},
		{
			"kind": "type",
			"name": "SetUpWalletRpcReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L72",
			"type": "WalletAddressObjectType & { deviceShareStored: string; isIframeStorageEnabled: boolean }"
		},
		{
			"kind": "type",
			"name": "SignMessageReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/signer.ts#L2",
			"type": "{ signedMessage: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "signedMessage",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "SignTransactionReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/signer.ts#L3",
			"type": "{ signedTransaction: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "signedTransaction",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "SignedTypedDataReturnType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/signer.ts#L6",
			"type": "{ signedTypedData: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "signedTypedData",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "SignerWalletAdditionalOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L13",
			"type": "{ chain: Chain; secretKey: string; signer: Signer; storage: AsyncStorage }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "chain",
					"type": "Chain"
				},
				{
					"kind": "subtype",
					"name": "secretKey",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "signer",
					"type": "Signer"
				},
				{
					"kind": "subtype",
					"name": "storage",
					"type": "AsyncStorage"
				}
			]
		},
		{
			"kind": "type",
			"name": "SignerWalletConnectionArgs",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L21",
			"type": "{  }"
		},
		{
			"kind": "type",
			"name": "SmartWalletConfig",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L18",
			"type": "{ bundlerUrl: string; chain: ChainOrRpcUrl; clientId: string; entryPointAddress: string; factoryAddress: string; gasless: boolean; paymasterAPI: PaymasterAPI; paymasterUrl: string; secretKey: string } & ContractInfoInput & WalletConnectReceiverConfig"
		},
		{
			"kind": "type",
			"name": "SmartWalletConnectionArgs",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L31",
			"type": "{ accountAddress: string; personalWallet: EVMWallet }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "accountAddress",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "personalWallet",
					"type": "EVMWallet"
				}
			]
		},
		{
			"kind": "type",
			"name": "SmartWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/smart-wallet/types.ts#L35",
			"type": "WalletOptions"
		},
		{
			"kind": "type",
			"name": "StoredTokenType",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/auth.ts#L27",
			"type": "{ authDetails: AuthDetails; authProvider: AuthProvider; developerClientId: string; jwtToken: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "authDetails",
					"type": "AuthDetails"
				},
				{
					"kind": "subtype",
					"name": "authProvider",
					"type": "AuthProvider"
				},
				{
					"kind": "subtype",
					"name": "developerClientId",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "jwtToken",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "TrustWalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L32",
			"type": "WalletOptions<TrustAdditionalOptions>"
		},
		{
			"kind": "type",
			"name": "WC2_QRModalOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L10",
			"type": "QRModalOptions"
		},
		{
			"kind": "type",
			"name": "WCErrorResponse",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L29",
			"type": "{ code: number; data: string; message: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "code",
					"type": "number"
				},
				{
					"kind": "subtype",
					"name": "data",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "message",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCEvent",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L46",
			"type": "(\"session_proposal\") | (\"session_request\") | (\"session_delete\")"
		},
		{
			"kind": "type",
			"name": "WCJsonRpcError",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L31",
			"type": "{ error: WCErrorResponse; id: number; jsonrpc: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "error",
					"type": "WCErrorResponse"
				},
				{
					"kind": "subtype",
					"name": "id",
					"type": "number"
				},
				{
					"kind": "subtype",
					"name": "jsonrpc",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCJsonRpcResult",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L37",
			"type": "{ id: number; jsonrpc: string; result: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "id",
					"type": "number"
				},
				{
					"kind": "subtype",
					"name": "jsonrpc",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "result",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCMetadata",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L18",
			"type": "{ description: string; icons: string[]; name: string; redirect: { native: string; universal: string }; url: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "description",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "icons",
					"type": "string[]"
				},
				{
					"kind": "subtype",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "redirect",
					"type": "{ native: string; universal: string }"
				},
				{
					"kind": "subtype",
					"name": "url",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCPeer",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L48",
			"type": "{ metadata: WCProposerMetadata }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "metadata",
					"type": "WCProposerMetadata"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCProposal",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L52",
			"type": "{ proposer: { metadata: WCProposerMetadata } }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "proposer",
					"type": "{ metadata: WCProposerMetadata }"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCProposerMetadata",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L39",
			"type": "{ description: string; icons: string[]; name: string; url: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "description",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "icons",
					"type": "string[]"
				},
				{
					"kind": "subtype",
					"name": "name",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "url",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCRequest",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L58",
			"type": "{ method: string; params: any; peer: WCPeer; topic: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "method",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "params",
					"type": "any"
				},
				{
					"kind": "subtype",
					"name": "peer",
					"type": "WCPeer"
				},
				{
					"kind": "subtype",
					"name": "topic",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "WCSession",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L65",
			"type": "{ peer: WCPeer; topic: string }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "peer",
					"type": "WCPeer"
				},
				{
					"kind": "subtype",
					"name": "topic",
					"type": "string"
				}
			]
		},
		{
			"kind": "type",
			"name": "WalletConnectMetadata",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L5",
			"type": "IWeb3Wallet[\"metadata\"]"
		},
		{
			"kind": "type",
			"name": "WalletConnectOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L18",
			"type": "{ projectId: string; qrModalOptions: WC2_QRModalOptions; qrcode: boolean }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "projectId",
					"type": "string",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Your project’s unique identifier that can be obtained at cloud.walletconnect.com. Enables following functionalities within Web3Modal: wallet and chain logos, optional WalletConnect RPC, support for all wallets from our Explorer and WalletConnect v2 support. Defaults to undefined."
								}
							]
						},
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "https://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
								}
							]
						}
					]
				},
				{
					"kind": "subtype",
					"name": "qrModalOptions",
					"type": "WC2_QRModalOptions",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "options to customize the QR Code Modal"
								}
							]
						},
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "https://docs.walletconnect.com/2.0/web3modal/options"
								}
							]
						}
					]
				},
				{
					"kind": "subtype",
					"name": "qrcode",
					"type": "boolean",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Whether to display the QR Code Modal."
								}
							]
						},
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Defaults to "
								},
								{
									"type": "inlineCode",
									"value": "true"
								},
								{
									"type": "text",
									"value": "."
								}
							]
						}
					]
				}
			]
		},
		{
			"kind": "type",
			"name": "WalletConnectReceiverConfig",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L8",
			"type": "{ walletConnectReceiver: ({ walletConnectV2ProjectId: string; walletConnectV2RelayUrl: string; walletConnectWalletMetadata: WCMetadata }) | (true) }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "walletConnectReceiver",
					"type": "({ walletConnectV2ProjectId: string; walletConnectV2RelayUrl: string; walletConnectWalletMetadata: WCMetadata }) | (true)"
				}
			]
		},
		{
			"kind": "type",
			"name": "WalletData",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L25",
			"type": "{ address: string; chainId: number }",
			"typeDeclaration": [
				{
					"kind": "subtype",
					"name": "address",
					"type": "string"
				},
				{
					"kind": "subtype",
					"name": "chainId",
					"type": "number"
				}
			]
		},
		{
			"kind": "type",
			"name": "WalletOptions",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L11",
			"typeParameters": [
				{
					"name": "TOpts",
					"extendsType": "Record<string, any>",
					"defaultType": "{  }"
				}
			],
			"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage } & TOpts"
		}
	],
	"enums": [
		{
			"kind": "enum",
			"name": "AuthProvider",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/auth.ts#L12",
			"members": [
				{
					"name": "APPLE",
					"value": "\"Apple\""
				},
				{
					"name": "COGNITO",
					"value": "\"Cognito\""
				},
				{
					"name": "CUSTOM_JWT",
					"value": "\"CustomJWT\""
				},
				{
					"name": "EMAIL_OTP",
					"value": "\"EmailOtp\""
				},
				{
					"name": "FACEBOOK",
					"value": "\"Facebook\""
				},
				{
					"name": "GOOGLE",
					"value": "\"Google\""
				}
			]
		},
		{
			"kind": "enum",
			"name": "RecoveryShareManagement",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/auth.ts#L7",
			"members": [
				{
					"name": "CLOUD_MANAGED",
					"value": "\"AWS_MANAGED\""
				},
				{
					"name": "USER_MANAGED",
					"value": "\"USER_MANAGED\""
				}
			]
		},
		{
			"kind": "enum",
			"name": "UserWalletStatus",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts#L58",
			"members": [
				{
					"name": "LOGGED_IN_NEW_DEVICE",
					"value": "\"Logged In, New Device\""
				},
				{
					"name": "LOGGED_IN_WALLET_INITIALIZED",
					"value": "\"Logged In, Wallet Initialized\""
				},
				{
					"name": "LOGGED_IN_WALLET_UNINITIALIZED",
					"value": "\"Logged In, Wallet Uninitialized\""
				},
				{
					"name": "LOGGED_OUT",
					"value": "\"Logged Out\""
				}
			]
		}
	],
	"classes": [
		{
			"kind": "class",
			"name": "AbstractClientWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L31",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "walletId",
								"type": "string"
							},
							{
								"name": "options",
								"type": "WalletOptions<TAdditionalOpts>",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "AbstractClientWallet<TAdditionalOpts, TConnectParams>"
						},
						"typeParameters": [
							{
								"name": "TAdditionalOpts",
								"extendsType": "Record<string, any>",
								"defaultType": "{  }"
							},
							{
								"name": "TConnectParams",
								"extendsType": "Record<string, any>",
								"defaultType": "{  }"
							}
						]
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L49"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "ConnectParams<TConnectParams>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractClientWallet<TAdditionalOpts, TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<TConnectParams>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<TConnectParams>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (ConnectParams<TConnectParams>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<TConnectParams>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L61"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<TAdditionalOpts>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractClientWallet<TAdditionalOpts, TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractClientWallet<TAdditionalOpts, TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractClientWallet<TAdditionalOpts, TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractClientWallet<TAdditionalOpts, TConnectParams>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractClientWallet<TAdditionalOpts, TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | (ConnectParams<TConnectParams>)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<TAdditionalOpts>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"typeParameters": [
				{
					"name": "TAdditionalOpts",
					"extendsType": "Record<string, any>",
					"defaultType": "{  }"
				},
				{
					"name": "TConnectParams",
					"extendsType": "Record<string, any>",
					"defaultType": "{  }"
				}
			],
			"extends": ["AbstractWallet"]
		},
		{
			"kind": "class",
			"name": "AbstractWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L64",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"returns": {
							"type": "AbstractWallet"
						}
					}
				]
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L70"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "AbstractWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"implements": ["GenericAuthWallet", "EVMWallet"],
			"extends": ["EventEmitter<WalletEvents>"]
		},
		{
			"kind": "class",
			"name": "AddChainError",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L73",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"flags": {
							"isExternal": true
						},
						"parameters": [
							{
								"name": "message",
								"type": "string",
								"flags": {
									"isExternal": true,
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "AddChainError"
						}
					}
				]
			},
			"methods": [
				{
					"kind": "function",
					"name": "captureStackTrace",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Create .stack property on a target object"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "targetObject",
									"type": "object",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "constructorOpt",
									"type": "Function",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "void"
							}
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "message",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L75",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "name",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L74",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "stack",
					"type": "string",
					"flags": {
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "prepareStackTrace",
					"type": "(err: Error, stackTraces: CallSite[]) => any",
					"typeDeclaration": [
						{
							"kind": "function",
							"name": "prepareStackTrace",
							"signatures": [
								{
									"flags": {
										"isExternal": true
									},
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "Optional override for formatting stack traces"
												}
											]
										}
									],
									"parameters": [
										{
											"name": "err",
											"type": "Error",
											"flags": {
												"isExternal": true
											}
										},
										{
											"name": "stackTraces",
											"type": "CallSite[]",
											"flags": {
												"isExternal": true
											}
										}
									],
									"returns": {
										"type": "any"
									},
									"blockTags": [
										{
											"tag": "@see",
											"summary": [
												{
													"type": "paragraph",
													"children": [
														{
															"type": "text",
															"value": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					],
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "stackTraceLimit",
					"type": "number",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["Error"]
		},
		{
			"kind": "class",
			"name": "AsyncLocalStorage",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L11",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "name",
								"type": "string"
							}
						],
						"returns": {
							"type": "AsyncLocalStorage"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L14"
			},
			"methods": [
				{
					"kind": "function",
					"name": "getItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<(null) | (string)>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L18"
				},
				{
					"kind": "function",
					"name": "removeItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L35"
				},
				{
					"kind": "function",
					"name": "setItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								},
								{
									"name": "value",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L24"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "name",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/AsyncStorage.ts#L12",
					"type": "string"
				}
			],
			"implements": ["AsyncStorage"]
		},
		{
			"kind": "class",
			"name": "BloctoWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L11",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletOptions<BloctoOptions>",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "BloctoWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L27"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "BloctoWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L50"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<BloctoOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "initConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L35"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "BloctoWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "BloctoWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "BloctoWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "BloctoWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "BloctoWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L12",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "name",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L13",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<BloctoOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L15",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/blocto.ts#L16",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["AbstractClientWallet<BloctoOptions>"]
		},
		{
			"kind": "class",
			"name": "ChainNotConfiguredError",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L78",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "__namedParameters",
								"type": "{ chainId: number; connectorId: string }"
							}
						],
						"returns": {
							"type": "ChainNotConfiguredError"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L81"
			},
			"methods": [
				{
					"kind": "function",
					"name": "captureStackTrace",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Create .stack property on a target object"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "targetObject",
									"type": "object",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "constructorOpt",
									"type": "Function",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "void"
							}
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "message",
					"type": "string",
					"flags": {
						"isExternal": true
					}
				},
				{
					"kind": "variable",
					"name": "name",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L79",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "stack",
					"type": "string",
					"flags": {
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "prepareStackTrace",
					"type": "(err: Error, stackTraces: CallSite[]) => any",
					"typeDeclaration": [
						{
							"kind": "function",
							"name": "prepareStackTrace",
							"signatures": [
								{
									"flags": {
										"isExternal": true
									},
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "Optional override for formatting stack traces"
												}
											]
										}
									],
									"parameters": [
										{
											"name": "err",
											"type": "Error",
											"flags": {
												"isExternal": true
											}
										},
										{
											"name": "stackTraces",
											"type": "CallSite[]",
											"flags": {
												"isExternal": true
											}
										}
									],
									"returns": {
										"type": "any"
									},
									"blockTags": [
										{
											"tag": "@see",
											"summary": [
												{
													"type": "paragraph",
													"children": [
														{
															"type": "text",
															"value": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					],
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "stackTraceLimit",
					"type": "number",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["Error"]
		},
		{
			"kind": "class",
			"name": "Coin98Wallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L40",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "Coin98Options"
							}
						],
						"returns": {
							"type": "Coin98Wallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L52"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Coin98Wallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "wallet.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L121"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L57"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<Coin98AdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Coin98Wallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Coin98Wallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Coin98Wallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Coin98Wallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Coin98Wallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "Coin98Connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L43",
					"type": "Coin98Connector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L41",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L44",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<Coin98AdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L46",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coin98.ts#L48",
					"returns": {
						"type": "\"Coin98 wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<Coin98AdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "CoinbaseWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L17",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "CoinbaseWalletOptions",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "CoinbaseWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L42"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoinbaseWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L52"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getQrUrl",
					"signatures": [
						{
							"returns": {
								"type": "Promise<(null) | (string)>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L77"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoinbaseWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoinbaseWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoinbaseWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoinbaseWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoinbaseWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "coinbaseConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L19",
					"type": "CoinbaseWalletConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L18",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "headlessMode",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L39",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "analytics",
							"type": "(\"enabled\") | (\"disabled\")"
						},
						{
							"kind": "subtype",
							"name": "chains",
							"type": "Chain[]"
						},
						{
							"kind": "subtype",
							"name": "clientId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "dappMetadata",
							"type": "DAppMetaData"
						},
						{
							"kind": "subtype",
							"name": "walletId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "walletStorage",
							"type": "AsyncStorage"
						}
					],
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "theme",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L40",
					"type": "(\"dark\") | (\"light\")"
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L34",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L22",
					"type": "{ iconURL: string; name: string; urls: { android: string; chrome: string; ios: string } }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "urls",
							"type": "{ android: string; chrome: string; ios: string }"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/coinbase-wallet.ts#L35",
					"returns": {
						"type": "\"Coinbase Wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet"]
		},
		{
			"kind": "class",
			"name": "Connector",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L6",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"returns": {
							"type": "Connector<TConnectParams>"
						},
						"typeParameters": [
							{
								"name": "TConnectParams",
								"extendsType": "Record<string, any>",
								"defaultType": "{  }"
							}
						]
					}
				]
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Connector<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "args",
									"type": "ConnectParams<TConnectParams>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L10"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L11"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "any[]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "(string) | (symbol)[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L12"
				},
				{
					"kind": "function",
					"name": "getProvider",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Provider>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L14"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L13"
				},
				{
					"kind": "function",
					"name": "isConnected",
					"signatures": [
						{
							"returns": {
								"type": "Promise<boolean>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L16"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "(...args: any[]) => void[]"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Connector<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Connector<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Connector<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Connector<TConnectParams>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Connector<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "setupListeners",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L17"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L15"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L18"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"typeParameters": [
				{
					"name": "TConnectParams",
					"extendsType": "Record<string, any>",
					"defaultType": "{  }"
				}
			],
			"extends": ["EventEmitter"]
		},
		{
			"kind": "class",
			"name": "CoreWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L40",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "CoreWalletOptions"
							}
						],
						"returns": {
							"type": "CoreWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L52"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoreWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "wallet.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L123"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L57"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<CoreWalletAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoreWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoreWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoreWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoreWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CoreWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchAccount",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L142"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "CoreWalletConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L43",
					"type": "CoreWalletConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L41",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L44",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<CoreWalletAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L46",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/core-wallet.ts#L48",
					"returns": {
						"type": "\"Core wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<CoreWalletAdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "CredentialsStorage",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/CredentialsStorage.ts#L3",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"returns": {
							"type": "CredentialsStorage"
						}
					}
				]
			},
			"methods": [
				{
					"kind": "function",
					"name": "getItem",
					"signatures": [
						{
							"returns": {
								"type": "Promise<(null) | (string)>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/CredentialsStorage.ts#L4"
				},
				{
					"kind": "function",
					"name": "removeItem",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/CredentialsStorage.ts#L30"
				},
				{
					"kind": "function",
					"name": "setItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								},
								{
									"name": "value",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/CredentialsStorage.ts#L15"
				}
			],
			"implements": ["AsyncStorage"]
		},
		{
			"kind": "class",
			"name": "CryptoDefiWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L41",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "CryptoDefiWalletOptions"
							}
						],
						"returns": {
							"type": "CryptoDefiWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L53"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CryptoDefiWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "wallet.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L124"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L58"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<CryptoDefiWalletAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CryptoDefiWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CryptoDefiWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CryptoDefiWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CryptoDefiWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "CryptoDefiWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "CryptoDefiWalletConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L44",
					"type": "CryptoDefiWalletConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L42",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L45",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<CryptoDefiWalletAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L43",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L47",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/crypto-defi-wallet.ts#L49",
					"returns": {
						"type": "\"Crypto Defi wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<CryptoDefiWalletAdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "EmbeddedWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L23",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "EmbeddedWalletOptions"
							}
						],
						"returns": {
							"type": "EmbeddedWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L68"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "ConnectParams<EmbeddedWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EmbeddedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "authenticate",
					"signatures": [
						{
							"parameters": [
								{
									"name": "params",
									"type": "AuthParams"
								}
							],
							"returns": {
								"type": "Promise<AuthResult>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L147"
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<EmbeddedWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L99"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<EmbeddedWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (ConnectParams<EmbeddedWalletConnectionArgs>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L110"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L83"
				},
				{
					"kind": "function",
					"name": "getEmail",
					"signatures": [
						{
							"returns": {
								"type": "Promise<(undefined) | (string)>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L126"
				},
				{
					"kind": "function",
					"name": "getEmbeddedWalletSDK",
					"signatures": [
						{
							"returns": {
								"type": "Promise<EmbeddedWalletSdk>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L131"
				},
				{
					"kind": "function",
					"name": "getLastUsedAuthStrategy",
					"signatures": [
						{
							"returns": {
								"type": "Promise<(null) | (\"iframe\") | (\"jwt\") | (\"email_verification\") | (EmbeddedWalletOauthStrategy) | (\"iframe_email_verification\")>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L164"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<EmbeddedWalletAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getRecoveryInformation",
					"signatures": [
						{
							"returns": {
								"type": "Promise<AuthDetails>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L137"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EmbeddedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EmbeddedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EmbeddedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EmbeddedWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EmbeddedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "sendVerificationEmail",
					"signatures": [
						{
							"parameters": [
								{
									"name": "__namedParameters",
									"type": "{ email: string }"
								}
							],
							"returns": {
								"type": "Promise<SendEmailOtpReturnType>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L142"
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				},
				{
					"kind": "function",
					"name": "sendVerificationEmail",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Sends a verification email to the provided email address."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "{ clientId: string; email: string }"
								}
							],
							"returns": {
								"type": "Promise<SendEmailOtpReturnType>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "Information on the user's status and whether they are a new user."
											}
										]
									}
								]
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "sendVerificationEmail({ email: 'test@example.com', clientId: 'yourClientId' })\n  .then(() => console.log('Verification email sent successfully.'))\n  .catch(error => console.error('Failed to send verification email:', error));"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L51"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | (ConnectParams<EmbeddedWalletConnectionArgs>)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chain",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L66",
					"type": "Pick<Chain, (\"chainId\") | (\"rpc\")>"
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L27",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<EmbeddedWalletAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L29",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L31",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/embedded-wallet.ts#L62",
					"returns": {
						"type": "\"Embedded Wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": [
				"AbstractClientWallet<EmbeddedWalletAdditionalOptions, EmbeddedWalletConnectionArgs>"
			]
		},
		{
			"kind": "class",
			"name": "EmbeddedWalletSdk",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L11",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"summary": [],
						"parameters": [
							{
								"name": "param0",
								"type": "EmbeddedWalletConstructorType",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "EmbeddedWalletConstructorType"
											}
										]
									}
								]
							}
						],
						"returns": {
							"type": "EmbeddedWalletSdk"
						},
						"blockTags": [
							{
								"tag": "@example",
								"summary": [
									{
										"type": "code",
										"lang": "ts",
										"meta": null,
										"value": "`const thirdwebEmbeddedWallet = new EmbeddedWalletSdk({ clientId: \"\", chain: \"Goerli\" });`"
									}
								]
							}
						]
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L34"
			},
			"methods": [
				{
					"kind": "function",
					"name": "getUser",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Gets the usr if they are logged in"
										}
									]
								}
							],
							"returns": {
								"type": "Promise<GetUser>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "GetUser - an object to containing various information on the user statuses"
											}
										]
									}
								]
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "js",
											"meta": null,
											"value": " const user = await thirdwebEmbeddedWallet.getUser();\n switch (user.status) {\n    case UserWalletStatus.LOGGED_OUT: {\n      // User is logged out, call one of the auth methods on thirdwebEmbeddedWallet.auth to authenticate the user\n      break;\n    }\n    case UserWalletStatus.LOGGED_IN_WALLET_INITIALIZED: {\n      // user is logged in and wallet is all set up.\n      // You have access to:\n      user.status;\n      user.authDetails;\n      user.walletAddress;\n      user.wallet;\n      break;\n    }\n}"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L109"
				},
				{
					"kind": "function",
					"name": "isClientIdLegacyPaper",
					"signatures": [
						{
							"parameters": [
								{
									"name": "clientId",
									"type": "string"
								}
							],
							"returns": {
								"type": "boolean"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L21"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "auth",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Used to manage the Auth state of the user."
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L19",
					"type": "Auth"
				},
				{
					"kind": "variable",
					"name": "clientId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L12",
					"type": "string",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "querier",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L13",
					"type": "EmbeddedWalletIframeCommunicator<AuthQuerierTypes>",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "wallet",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/embedded-wallet/implementations/lib/embedded-wallet.ts#L15",
					"type": "EmbeddedWallet",
					"flags": {
						"isPrivate": true
					}
				}
			]
		},
		{
			"kind": "class",
			"name": "EngineSigner",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L9",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "config",
								"type": "EngineSignerConfiguration"
							},
							{
								"name": "provider",
								"type": "Provider",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "EngineSigner"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L12"
			},
			"methods": [
				{
					"kind": "function",
					"name": "_checkProvider",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "operation",
									"type": "string",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "void"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "call",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "blockTag",
									"type": "BlockTag",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "checkTransaction",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Deferrable<TransactionRequest>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "provider",
									"type": "Provider"
								}
							],
							"returns": {
								"type": "EngineSigner"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L125"
				},
				{
					"kind": "function",
					"name": "estimateGas",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Promise<BigNumber>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "fetch",
					"signatures": [
						{
							"parameters": [
								{
									"name": "__namedParameters",
									"type": "{ body: any; method: (\"POST\") | (\"GET\"); path: string }"
								}
							],
							"returns": {
								"type": "Promise<any>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L129"
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L25"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "blockTag",
									"type": "BlockTag",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<BigNumber>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"returns": {
								"type": "Promise<number>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getFeeData",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"returns": {
								"type": "Promise<FeeData>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getGasPrice",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"returns": {
								"type": "Promise<BigNumber>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getTransactionCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "blockTag",
									"type": "BlockTag",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<number>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "populateTransaction",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Promise<TransactionRequest>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "resolveName",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "name",
									"type": "string",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "sendTransaction",
					"signatures": [
						{
							"parameters": [
								{
									"name": "transaction",
									"type": "TransactionRequest"
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L60"
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"parameters": [
								{
									"name": "message",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L29"
				},
				{
					"kind": "function",
					"name": "signTransaction",
					"signatures": [
						{
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L39"
				},
				{
					"kind": "function",
					"name": "isSigner",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "value",
									"type": "any",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "value is (Signer)"
							}
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "_isSigner",
					"type": "boolean",
					"flags": {
						"isExternal": true,
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "config",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/connectors/engine/signer.ts#L10",
					"type": "EngineSignerConfiguration"
				},
				{
					"kind": "variable",
					"name": "provider",
					"type": "Provider",
					"flags": {
						"isExternal": true,
						"isOptional": true,
						"isReadonly": true
					}
				}
			],
			"extends": ["Signer"]
		},
		{
			"kind": "class",
			"name": "EngineWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/engine.ts#L8",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "config",
								"type": "EngineSignerConfiguration"
							}
						],
						"returns": {
							"type": "EngineWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/engine.ts#L11"
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EngineWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/engine.ts#L16"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EngineWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EngineWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EngineWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EngineWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EngineWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#signer",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/engine.ts#L9",
					"type": "EngineSigner",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["AbstractWallet"]
		},
		{
			"kind": "class",
			"name": "EthersWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/ethers.ts#L4",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "signer",
								"type": "Signer"
							}
						],
						"returns": {
							"type": "EthersWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/ethers.ts#L6"
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EthersWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/ethers.ts#L11"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EthersWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EthersWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EthersWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EthersWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "EthersWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#signer",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/ethers.ts#L5",
					"type": "Signer",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["AbstractWallet"]
		},
		{
			"kind": "class",
			"name": "FrameWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/frame.ts#L5",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "FrameWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/frame.ts#L13"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "FrameWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/frame.ts#L17"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "FrameWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "FrameWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "FrameWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "FrameWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "FrameWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/frame.ts#L6",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "analytics",
							"type": "(\"enabled\") | (\"disabled\")"
						},
						{
							"kind": "subtype",
							"name": "chains",
							"type": "Chain[]"
						},
						{
							"kind": "subtype",
							"name": "clientId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "dappMetadata",
							"type": "DAppMetaData"
						},
						{
							"kind": "subtype",
							"name": "walletId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "walletStorage",
							"type": "AsyncStorage"
						}
					],
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/frame.ts#L8",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/frame.ts#L9",
					"returns": {
						"type": "string"
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet"]
		},
		{
			"kind": "class",
			"name": "InjectedWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/injected.ts#L4",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "InjectedWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/injected.ts#L12"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "InjectedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/injected.ts#L16"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "InjectedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "InjectedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "InjectedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "InjectedWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "InjectedWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/injected.ts#L5",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "analytics",
							"type": "(\"enabled\") | (\"disabled\")"
						},
						{
							"kind": "subtype",
							"name": "chains",
							"type": "Chain[]"
						},
						{
							"kind": "subtype",
							"name": "clientId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "dappMetadata",
							"type": "DAppMetaData"
						},
						{
							"kind": "subtype",
							"name": "walletId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "walletStorage",
							"type": "AsyncStorage"
						}
					],
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/injected.ts#L7",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/injected.ts#L8",
					"returns": {
						"type": "string"
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet"]
		},
		{
			"kind": "class",
			"name": "LocalStorage",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L9",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "name",
								"type": "string"
							}
						],
						"returns": {
							"type": "LocalStorage"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L12"
			},
			"methods": [
				{
					"kind": "function",
					"name": "getItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "(null) | (string)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L16"
				},
				{
					"kind": "function",
					"name": "removeItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L24"
				},
				{
					"kind": "function",
					"name": "setItem",
					"signatures": [
						{
							"parameters": [
								{
									"name": "key",
									"type": "string"
								},
								{
									"name": "value",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L20"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "name",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/SyncStorage.ts#L10",
					"type": "string"
				}
			],
			"implements": ["SyncStorage"]
		},
		{
			"kind": "class",
			"name": "LocalWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L32",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletOptions<LocalWalletOptions>",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "LocalWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L53"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#saveData",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "store the wallet data to storage"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "data",
									"type": "WalletData"
								},
								{
									"name": "storage",
									"type": "AsyncStorage",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L386"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "LocalWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "deleteSaved",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "deletes the saved wallet data from storage"
										}
									]
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L321"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L391"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "export",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "encrypts the wallet with given password and returns the encrypted wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ExportOptions"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L329"
				},
				{
					"kind": "function",
					"name": "generate",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "creates a new random wallet"
										}
									]
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the address of the newly created wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L111"
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L66"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<LocalWalletOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSavedData",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Get the saved wallet data from storage"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "storage",
									"type": "AsyncStorage",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<(null) | (WalletData)>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L363"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "import",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "create local wallet from an \"encryptedJson\", \"privateKey\" or \"mnemonic\""
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ImportOptions"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L124"
				},
				{
					"kind": "function",
					"name": "isSaved",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "true if initialized wallet's data is saved in storage"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L305"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "load",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "initialize the wallet from saved data on storage"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "LoadOptions"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L182"
				},
				{
					"kind": "function",
					"name": "loadOrCreate",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "load saved wallet data from storage or generate a new one and save it."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "LoadOrCreateOptions"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L98"
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "LocalWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "LocalWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "LocalWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "LocalWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "LocalWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "save",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Save the wallet data to storage"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "SaveOptions"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L240"
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#storage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L39",
					"type": "AsyncStorage",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L36",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "ethersWallet",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L38",
					"type": "Wallet",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L37",
					"type": "WalletOptions<LocalWalletOptions>"
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L41",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L43",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/local-wallet.ts#L49",
					"returns": {
						"type": "\"Local Wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": [
				"AbstractClientWallet<LocalWalletOptions, LocalWalletConnectionArgs>"
			]
		},
		{
			"kind": "class",
			"name": "MagicLink",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L19",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "MagicLinkOptions"
							}
						],
						"returns": {
							"type": "MagicLink"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L41"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "ConnectParams<MagicAuthConnectOptions>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MagicLink"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "MagicAuthConnectOptions",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L74"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "MagicAuthConnectOptions"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L106"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L99"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (ConnectParams<MagicAuthConnectOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L60"
				},
				{
					"kind": "function",
					"name": "getMagic",
					"signatures": [
						{
							"returns": {
								"type": "InstanceWithExtensions<SDKBase, OAuthExtension[]>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L67"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<MagicLinkOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "initializeConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L46"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MagicLink"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MagicLink"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MagicLink"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MagicLink"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MagicLink"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | (ConnectParams<MagicAuthConnectOptions>)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L23",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "magicConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L24",
					"type": "MagicAuthConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "oAuthRedirectResult",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L25",
					"type": "OAuthRedirectResult",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L39",
					"type": "MagicLinkOptions"
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L33",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L27",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/magic.ts#L35",
					"returns": {
						"type": "\"Magic Link\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": [
				"AbstractClientWallet<MagicLinkOptions, MagicAuthConnectOptions>"
			]
		},
		{
			"kind": "class",
			"name": "MetaMaskWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L40",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "MetamaskWalletOptions"
							}
						],
						"returns": {
							"type": "MetaMaskWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L64"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MetaMaskWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "metamask.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L135"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L69"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<MetamaskAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MetaMaskWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MetaMaskWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MetaMaskWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MetaMaskWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "MetaMaskWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchAccount",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L154"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L41",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L44",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "metamaskConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L43",
					"type": "MetaMaskConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<MetamaskAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L58",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L46",
					"type": "{ iconURL: string; name: string; urls: { android: string; chrome: string; ios: string } }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "urls",
							"type": "{ android: string; chrome: string; ios: string }"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/metamask.ts#L60",
					"returns": {
						"type": "\"MetaMask\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<MetamaskAdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "OKXWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L40",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "OKXWalletOptions"
							}
						],
						"returns": {
							"type": "OKXWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L52"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "OKXWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "wallet.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L121"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L57"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<OKXAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "OKXWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "OKXWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "OKXWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "OKXWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "OKXWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchAccount",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L140"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "OKXConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L43",
					"type": "OKXConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L41",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L44",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<OKXAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L46",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/okx.ts#L48",
					"returns": {
						"type": "\"OKX\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<OKXAdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "PaperWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L20",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "Paper Wallet"
						}
					]
				}
			],
			"blockTags": [
				{
					"tag": "@deprecated",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "We have deprecated PaperWallet in favor of our "
								},
								{
									"type": "link",
									"title": null,
									"url": "2644",
									"children": [
										{
											"type": "text",
											"value": "EmbeddedWallet"
										}
									]
								},
								{
									"type": "text",
									"value": " which adds support for more sign in methods."
								}
							]
						}
					]
				}
			],
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "PaperWalletOptions"
							}
						],
						"returns": {
							"type": "PaperWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L42"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "ConnectParams<PaperWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PaperWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<PaperWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<PaperWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (ConnectParams<PaperWalletConnectionArgs>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L117"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L99"
				},
				{
					"kind": "function",
					"name": "getEmail",
					"signatures": [
						{
							"returns": {
								"type": "Promise<(undefined) | (string)>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L135"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<PaperWalletAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPaperSDK",
					"signatures": [
						{
							"returns": {
								"type": "Promise<PaperEmbeddedWalletSdk<USER_MANAGED>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L140"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "isClientIdLegacyPaper",
					"signatures": [
						{
							"parameters": [
								{
									"name": "clientId",
									"type": "string"
								}
							],
							"returns": {
								"type": "boolean"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L95"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PaperWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PaperWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PaperWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PaperWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PaperWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | (ConnectParams<PaperWalletConnectionArgs>)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chain",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L39",
					"type": "Pick<Chain, (\"chainId\") | (\"rpc\")>"
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L24",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "onAuthSuccess",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L40",
					"type": "(undefined) | ((authResult: AuthAndWalletRpcReturnType) => void)"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<PaperWalletAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "paperClientId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L38",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L26",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L28",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/paper-wallet.ts#L34",
					"returns": {
						"type": "\"Paper Wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": [
				"AbstractClientWallet<PaperWalletAdditionalOptions_, PaperWalletConnectionArgs>"
			]
		},
		{
			"kind": "class",
			"name": "PaymasterAPI",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "an API to external a UserOperation with paymaster info"
						}
					]
				}
			],
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"flags": {
							"isExternal": true
						},
						"returns": {
							"type": "PaymasterAPI"
						}
					}
				]
			},
			"methods": [
				{
					"kind": "function",
					"name": "getPaymasterAndData",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [],
							"parameters": [
								{
									"name": "userOp",
									"type": "Partial<UserOperationStruct>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "a partially-filled UserOperation (without signature and paymasterAndData\nnote that the \"preVerificationGas\" is incomplete: it can't account for the\npaymasterAndData value, which will only be returned by this method.."
												}
											]
										}
									],
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Promise<(undefined) | (string)>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the value to put into the PaymasterAndData, undefined to leave it empty"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					]
				}
			]
		},
		{
			"kind": "class",
			"name": "PhantomWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L10",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }"
							}
						],
						"returns": {
							"type": "PhantomWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L35"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PhantomWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L40"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PhantomWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PhantomWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PhantomWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PhantomWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PhantomWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L11",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L14",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "analytics",
							"type": "(\"enabled\") | (\"disabled\")"
						},
						{
							"kind": "subtype",
							"name": "chains",
							"type": "Chain[]"
						},
						{
							"kind": "subtype",
							"name": "clientId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "dappMetadata",
							"type": "DAppMetaData"
						},
						{
							"kind": "subtype",
							"name": "walletId",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "walletStorage",
							"type": "AsyncStorage"
						}
					],
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "phantomConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L13",
					"type": "PhantomConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L12",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L29",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L16",
					"type": "{ iconURL: string; name: string; urls: { chrome: string } }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "urls",
							"type": "{ chrome: string }"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/phantom.ts#L31",
					"returns": {
						"type": "\"Phantom\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet"]
		},
		{
			"kind": "class",
			"name": "PrivateKeyWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/private-key.ts#L5",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "privateKey",
								"type": "string"
							},
							{
								"name": "chain",
								"type": "ChainOrRpcUrl",
								"flags": {
									"isOptional": true
								}
							},
							{
								"name": "secretKey",
								"type": "string",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "PrivateKeyWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/private-key.ts#L7"
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PrivateKeyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/private-key.ts#L20"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PrivateKeyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PrivateKeyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PrivateKeyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PrivateKeyWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "PrivateKeyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#signer",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/private-key.ts#L6",
					"type": "Signer",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["AbstractWallet"]
		},
		{
			"kind": "class",
			"name": "ProviderRpcError",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L43",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "Error subclass implementing Ethereum Provider errors per EIP-1193."
						}
					]
				}
			],
			"blockTags": [
				{
					"tag": "@see",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "https://eips.ethereum.org/EIPS/eip-1193"
								}
							]
						}
					]
				}
			],
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"summary": [
							{
								"type": "paragraph",
								"children": [
									{
										"type": "text",
										"value": "Create an Ethereum Provider JSON-RPC error.\n"
									},
									{
										"type": "inlineCode",
										"value": "code"
									},
									{
										"type": "text",
										"value": " must be an integer in the "
									},
									{
										"type": "inlineCode",
										"value": "1000 <= 4999"
									},
									{
										"type": "text",
										"value": " range."
									}
								]
							}
						],
						"parameters": [
							{
								"name": "message",
								"type": "string",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "Human-readable string"
											}
										]
									}
								]
							},
							{
								"name": "options",
								"type": "{ cause: unknown; code: (4001) | (4100) | (4200) | (4900) | (4901) | (4902); data: T }"
							}
						],
						"returns": {
							"type": "ProviderRpcError<T>"
						},
						"typeParameters": [
							{
								"name": "T",
								"defaultType": "undefined"
							}
						]
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L48"
			},
			"methods": [
				{
					"kind": "function",
					"name": "captureStackTrace",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Create .stack property on a target object"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "targetObject",
									"type": "object",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "constructorOpt",
									"type": "Function",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "void"
							}
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "cause",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L9",
					"type": "unknown",
					"flags": {
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "code",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L10",
					"type": "number",
					"flags": {
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "data",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L11",
					"type": "T",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "message",
					"type": "string",
					"flags": {
						"isExternal": true
					}
				},
				{
					"kind": "variable",
					"name": "name",
					"type": "string",
					"flags": {
						"isExternal": true
					}
				},
				{
					"kind": "variable",
					"name": "stack",
					"type": "string",
					"flags": {
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "prepareStackTrace",
					"type": "(err: Error, stackTraces: CallSite[]) => any",
					"typeDeclaration": [
						{
							"kind": "function",
							"name": "prepareStackTrace",
							"signatures": [
								{
									"flags": {
										"isExternal": true
									},
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "Optional override for formatting stack traces"
												}
											]
										}
									],
									"parameters": [
										{
											"name": "err",
											"type": "Error",
											"flags": {
												"isExternal": true
											}
										},
										{
											"name": "stackTraces",
											"type": "CallSite[]",
											"flags": {
												"isExternal": true
											}
										}
									],
									"returns": {
										"type": "any"
									},
									"blockTags": [
										{
											"tag": "@see",
											"summary": [
												{
													"type": "paragraph",
													"children": [
														{
															"type": "text",
															"value": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					],
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "stackTraceLimit",
					"type": "number",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"typeParameters": [
				{
					"name": "T",
					"defaultType": "undefined"
				}
			],
			"extends": ["RpcError<T>"]
		},
		{
			"kind": "class",
			"name": "RabbyWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L40",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "RabbyOptions"
							}
						],
						"returns": {
							"type": "RabbyWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L52"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RabbyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "wallet.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L121"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L57"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<RabbyAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RabbyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RabbyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RabbyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RabbyWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RabbyWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "RabbyConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L43",
					"type": "RabbyConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L41",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L44",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<RabbyAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L46",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rabby.ts#L48",
					"returns": {
						"type": "\"Rabby wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<RabbyAdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "RainbowWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L40",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "RainbowWalletOptions"
							}
						],
						"returns": {
							"type": "RainbowWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L64"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RainbowWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "rainbow.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L135"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L69"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<RainbowAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RainbowWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RainbowWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RainbowWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RainbowWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "RainbowWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L41",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L44",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<RainbowAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "rainbowConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L43",
					"type": "RainbowConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L58",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L46",
					"type": "{ iconURL: string; name: string; urls: { android: string; chrome: string; ios: string } }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "urls",
							"type": "{ android: string; chrome: string; ios: string }"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/rainbow-wallet.ts#L60",
					"returns": {
						"type": "\"Rainbow Wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<RainbowAdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "SafeWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L14",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "{ analytics: (\"enabled\") | (\"disabled\"); chains: Chain[]; clientId: string; dappMetadata: DAppMetaData; walletId: string; walletStorage: AsyncStorage }",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "SafeWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L31"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "ConnectParams<SafeConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SafeWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "params",
									"type": "ConnectParams<SafeConnectionArgs>"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L54"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<SafeConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (ConnectParams<SafeConnectionArgs>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L37"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<object>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L50"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SafeWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SafeWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SafeWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SafeWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SafeWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L46"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | (ConnectParams<SafeConnectionArgs>)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L18",
					"type": "SafeConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<object>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L26",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L20",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/safe.ts#L27",
					"returns": {
						"type": "\"Safe Wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<object, SafeConnectionArgs>"]
		},
		{
			"kind": "class",
			"name": "SignerWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L23",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletOptions<SignerWalletAdditionalOptions>"
							}
						],
						"returns": {
							"type": "SignerWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L32"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SignerWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L45"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<SignerWalletAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SignerWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SignerWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SignerWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SignerWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SignerWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#storage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L30",
					"type": "AsyncStorage",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L27",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L28",
					"type": "WalletOptions<SignerWalletAdditionalOptions>"
				},
				{
					"kind": "variable",
					"name": "signer",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/signer.ts#L29",
					"type": "Signer",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L42",
					"type": "WalletMeta",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": [
				"AbstractClientWallet<SignerWalletAdditionalOptions, SignerWalletConnectionArgs>"
			]
		},
		{
			"kind": "class",
			"name": "SmartWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L33",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletOptions<SmartWalletConfig>"
							}
						],
						"returns": {
							"type": "SmartWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L50"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "ConnectParams<SmartWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addAdmin",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add another admin to the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "adminAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the admin to add."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L343"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "params",
									"type": "ConnectParams<SmartWalletConnectionArgs>"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L383"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<SmartWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "createSessionKey",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Create and add a session key to the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "keyAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the session key to add."
												}
											]
										}
									]
								},
								{
									"name": "permissions",
									"type": "{ approvedCallTargets: Object; expirationDate: (number) | (Date); nativeTokenLimitPerTransaction: (string) | (number); startDate: (number) | (Date) }",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the permissions to grant to the session key."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L322"
				},
				{
					"kind": "function",
					"name": "deploy",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Manually deploy the smart wallet contract. If already deployed this will throw an error.\nNote that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L293"
				},
				{
					"kind": "function",
					"name": "deployIfNeeded",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Manually deploy the smart wallet contract. If already deployed this will do nothing.\nNote that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<void>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L303"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "estimate",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a single transaction"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<any>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L225"
				},
				{
					"kind": "function",
					"name": "estimateBatch",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a batch of transactions"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Transaction<any>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L235"
				},
				{
					"kind": "function",
					"name": "estimateBatchRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a batch of raw transactions"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L257"
				},
				{
					"kind": "function",
					"name": "estimateRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a single raw transaction"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L245"
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "execute",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute a single transaction and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L167"
				},
				{
					"kind": "function",
					"name": "executeBatch",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute multiple transactions in a single batch and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Transaction<any>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L189"
				},
				{
					"kind": "function",
					"name": "executeBatchRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute multiple raw transactions in a single batch and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L281"
				},
				{
					"kind": "function",
					"name": "executeRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute a single raw transaction and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L213"
				},
				{
					"kind": "function",
					"name": "getAccountContract",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Get the underlying account contract of the smart wallet."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<SmartContract<BaseContract>>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account contract of the smart wallet."
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L369"
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getAllActiveSigners",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Get all the admins and session keys active on the smart wallet."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<SignerWithPermissions[]>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L360"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (ConnectParams<SmartWalletConnectionArgs>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<SmartWalletConnector>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L65"
				},
				{
					"kind": "function",
					"name": "getFactoryContract",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Get the underlying account factory contract of the smart wallet."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<SmartContract<BaseContract>>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account factory contract."
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L378"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<SmartWalletConfig>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L77"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "hasPermissionToExecute",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Check whether the connected signer can execute a given transaction using the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to execute using the smart wallet."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "whether the connected signer can execute the transaction using the smart wallet."
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L147"
				},
				{
					"kind": "function",
					"name": "isDeployed",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Check if the smart wallet contract is deployed"
										}
									]
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "true if the smart wallet contract is deployed"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L312"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAdmin",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove an admin from the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "adminAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the admin to remove."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L352"
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SmartWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "SmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "revokeSessionKey",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove a session key from the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "keyAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the session key to remove."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L334"
				},
				{
					"kind": "function",
					"name": "send",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send a single transaction without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L157"
				},
				{
					"kind": "function",
					"name": "sendBatch",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send a multiple transaction in a batch without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Array<Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L177"
				},
				{
					"kind": "function",
					"name": "sendBatchRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send multiple raw transaction in a batch without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L269"
				},
				{
					"kind": "function",
					"name": "sendRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send a single raw transaction without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L201"
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L84"
				},
				{
					"kind": "function",
					"name": "signMessageLegacy",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "signer",
									"type": "Signer"
								},
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message (for legacy EIP-1271 signature verification)"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L135"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | (ConnectParams<SmartWalletConnectionArgs>)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L37",
					"type": "SmartWalletConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<SmartWalletConfig>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L45",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L39",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L46",
					"returns": {
						"type": "string"
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": [
				"AbstractClientWallet<SmartWalletConfig, SmartWalletConnectionArgs>"
			]
		},
		{
			"kind": "class",
			"name": "SwitchChainError",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L105",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "Error subclass implementing Ethereum Provider errors per EIP-1193."
						}
					]
				}
			],
			"blockTags": [
				{
					"tag": "@see",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "https://eips.ethereum.org/EIPS/eip-1193"
								}
							]
						}
					]
				}
			],
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "cause",
								"type": "unknown"
							}
						],
						"returns": {
							"type": "SwitchChainError"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L108"
			},
			"methods": [
				{
					"kind": "function",
					"name": "captureStackTrace",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Create .stack property on a target object"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "targetObject",
									"type": "object",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "constructorOpt",
									"type": "Function",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "void"
							}
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "cause",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L9",
					"type": "unknown",
					"flags": {
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "code",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L10",
					"type": "number",
					"flags": {
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "data",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L11",
					"type": "undefined",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "message",
					"type": "string",
					"flags": {
						"isExternal": true
					}
				},
				{
					"kind": "variable",
					"name": "name",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L106",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "stack",
					"type": "string",
					"flags": {
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "prepareStackTrace",
					"type": "(err: Error, stackTraces: CallSite[]) => any",
					"typeDeclaration": [
						{
							"kind": "function",
							"name": "prepareStackTrace",
							"signatures": [
								{
									"flags": {
										"isExternal": true
									},
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "Optional override for formatting stack traces"
												}
											]
										}
									],
									"parameters": [
										{
											"name": "err",
											"type": "Error",
											"flags": {
												"isExternal": true
											}
										},
										{
											"name": "stackTraces",
											"type": "CallSite[]",
											"flags": {
												"isExternal": true
											}
										}
									],
									"returns": {
										"type": "any"
									},
									"blockTags": [
										{
											"tag": "@see",
											"summary": [
												{
													"type": "paragraph",
													"children": [
														{
															"type": "text",
															"value": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					],
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "stackTraceLimit",
					"type": "number",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["ProviderRpcError"]
		},
		{
			"kind": "class",
			"name": "TokenBoundSmartWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L11",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "A smart wallet controlled by the holder of a particular NFT."
						}
					]
				}
			],
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletOptions<TokenBoundSmartWalletConfig>"
							}
						],
						"returns": {
							"type": "TokenBoundSmartWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L26"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "ConnectParams<SmartWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addAdmin",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add another admin to the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "adminAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the admin to add."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L343"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TokenBoundSmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "params",
									"type": "ConnectParams<SmartWalletConnectionArgs>"
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L383"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "ConnectParams<SmartWalletConnectionArgs>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "createSessionKey",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Create and add a session key to the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "keyAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the session key to add."
												}
											]
										}
									]
								},
								{
									"name": "permissions",
									"type": "{ approvedCallTargets: Object; expirationDate: (number) | (Date); nativeTokenLimitPerTransaction: (string) | (number); startDate: (number) | (Date) }",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the permissions to grant to the session key."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L322"
				},
				{
					"kind": "function",
					"name": "deploy",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Manually deploy the smart wallet contract. If already deployed this will throw an error.\nNote that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L293"
				},
				{
					"kind": "function",
					"name": "deployIfNeeded",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Manually deploy the smart wallet contract. If already deployed this will do nothing.\nNote that this is not necessary as the smart wallet will be deployed automatically on the first transaction the user makes."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<void>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L303"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "estimate",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a single transaction"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<any>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L225"
				},
				{
					"kind": "function",
					"name": "estimateBatch",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a batch of transactions"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Transaction<any>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L235"
				},
				{
					"kind": "function",
					"name": "estimateBatchRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a batch of raw transactions"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L257"
				},
				{
					"kind": "function",
					"name": "estimateRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Estimate the gas cost of a single raw transaction"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to estimate"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<{ details: { deployCost: BigNumber; deployGasLimit: BigNumber; gasPrice: BigNumber; totalCost: BigNumber; transactionCost: BigNumber; transactionGasLimit: BigNumber }; ether: string; wei: BigNumber }>",
								"summary": []
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L245"
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "execute",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute a single transaction and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L167"
				},
				{
					"kind": "function",
					"name": "executeBatch",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute multiple transactions in a single batch and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Transaction<any>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L189"
				},
				{
					"kind": "function",
					"name": "executeBatchRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute multiple raw transactions in a single batch and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L281"
				},
				{
					"kind": "function",
					"name": "executeRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Execute a single raw transaction and wait for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to execute"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction receipt"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L213"
				},
				{
					"kind": "function",
					"name": "getAccountContract",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Get the underlying account contract of the smart wallet."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<SmartContract<BaseContract>>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account contract of the smart wallet."
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L369"
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getAllActiveSigners",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Get all the admins and session keys active on the smart wallet."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<SignerWithPermissions[]>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L360"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (ConnectParams<SmartWalletConnectionArgs>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<TokenBoundSmartWalletConnector>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L34"
				},
				{
					"kind": "function",
					"name": "getFactoryContract",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Get the underlying account factory contract of the smart wallet."
										}
									]
								}
							],
							"returns": {
								"type": "Promise<SmartContract<BaseContract>>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account factory contract."
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L378"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<SmartWalletConfig>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L77"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "hasPermissionToExecute",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Check whether the connected signer can execute a given transaction using the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to execute using the smart wallet."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "whether the connected signer can execute the transaction using the smart wallet."
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L147"
				},
				{
					"kind": "function",
					"name": "isDeployed",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Check if the smart wallet contract is deployed"
										}
									]
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "true if the smart wallet contract is deployed"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L312"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TokenBoundSmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TokenBoundSmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TokenBoundSmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAdmin",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove an admin from the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "adminAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the admin to remove."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L352"
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TokenBoundSmartWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TokenBoundSmartWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "revokeSessionKey",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove a session key from the smart wallet."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "keyAddress",
									"type": "string",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the address of the session key to remove."
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L334"
				},
				{
					"kind": "function",
					"name": "send",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send a single transaction without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L157"
				},
				{
					"kind": "function",
					"name": "sendBatch",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send a multiple transaction in a batch without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Array<Transaction<Omit<TransactionResultWithMetadata<unknown>, \"data\">>>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L177"
				},
				{
					"kind": "function",
					"name": "sendBatchRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send multiple raw transaction in a batch without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transactions",
									"type": "Deferrable<TransactionRequest>[]",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transactions to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L269"
				},
				{
					"kind": "function",
					"name": "sendRaw",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Send a single raw transaction without waiting for confirmations"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "transaction",
									"type": "Deferrable<TransactionRequest>",
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "the transaction to send"
												}
											]
										}
									]
								}
							],
							"returns": {
								"type": "Promise<TransactionResponse>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the transaction result"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L201"
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L84"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | (ConnectParams<SmartWalletConnectionArgs>)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/smart-wallet.ts#L37",
					"type": "SmartWalletConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<SmartWalletConfig>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "tbaConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L12",
					"type": "TokenBoundSmartWalletConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "tbaOptions",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L13",
					"type": "TokenBoundSmartWalletConfig"
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L21",
					"type": "\"tokenBoundSmartWallet\"",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L15",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/token-bound-smart-wallet.ts#L22",
					"returns": {
						"type": "string"
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["SmartWallet"]
		},
		{
			"kind": "class",
			"name": "TrustWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L40",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "TrustWalletOptions"
							}
						],
						"returns": {
							"type": "TrustWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L65"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TrustWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to wallet with QR code"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							},
							"blockTags": [
								{
									"tag": "@example",
									"summary": [
										{
											"type": "code",
											"lang": "typescript",
											"meta": null,
											"value": "trust.connectWithQrCode({\n chainId: 1,\n onQrCodeUri(qrCodeUri) {\n   // render the QR code with `qrCodeUri`\n },\n onConnected(accountAddress)  {\n   // update UI to show connected state\n },\n})"
										}
									]
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L141"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L75"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<TrustAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TrustWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TrustWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TrustWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TrustWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "TrustWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L41",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L44",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<TrustAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "trustConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L43",
					"type": "TrustConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L59",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L46",
					"type": "{ iconURL: string; name: string; urls: { android: string; chrome: string; ios: string } }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "urls",
							"type": "{ android: string; chrome: string; ios: string }"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/trust.ts#L61",
					"returns": {
						"type": "\"Trust Wallet\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<TrustAdditionalOptions>"]
		},
		{
			"kind": "class",
			"name": "UserRejectedRequestError",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L121",
			"summary": [
				{
					"type": "paragraph",
					"children": [
						{
							"type": "text",
							"value": "Error subclass implementing Ethereum Provider errors per EIP-1193."
						}
					]
				}
			],
			"blockTags": [
				{
					"tag": "@see",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "https://eips.ethereum.org/EIPS/eip-1193"
								}
							]
						}
					]
				}
			],
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "cause",
								"type": "unknown"
							}
						],
						"returns": {
							"type": "UserRejectedRequestError"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L124"
			},
			"methods": [
				{
					"kind": "function",
					"name": "captureStackTrace",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Create .stack property on a target object"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "targetObject",
									"type": "object",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "constructorOpt",
									"type": "Function",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "void"
							}
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "cause",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L9",
					"type": "unknown",
					"flags": {
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "code",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L10",
					"type": "number",
					"flags": {
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "data",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L11",
					"type": "undefined",
					"flags": {
						"isOptional": true,
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "message",
					"type": "string",
					"flags": {
						"isExternal": true
					}
				},
				{
					"kind": "variable",
					"name": "name",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-core/errors.ts#L122",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "stack",
					"type": "string",
					"flags": {
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "prepareStackTrace",
					"type": "(err: Error, stackTraces: CallSite[]) => any",
					"typeDeclaration": [
						{
							"kind": "function",
							"name": "prepareStackTrace",
							"signatures": [
								{
									"flags": {
										"isExternal": true
									},
									"summary": [
										{
											"type": "paragraph",
											"children": [
												{
													"type": "text",
													"value": "Optional override for formatting stack traces"
												}
											]
										}
									],
									"parameters": [
										{
											"name": "err",
											"type": "Error",
											"flags": {
												"isExternal": true
											}
										},
										{
											"name": "stackTraces",
											"type": "CallSite[]",
											"flags": {
												"isExternal": true
											}
										}
									],
									"returns": {
										"type": "any"
									},
									"blockTags": [
										{
											"tag": "@see",
											"summary": [
												{
													"type": "paragraph",
													"children": [
														{
															"type": "text",
															"value": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					],
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "stackTraceLimit",
					"type": "number",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["ProviderRpcError"]
		},
		{
			"kind": "class",
			"name": "WagmiAdapter",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L26",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "wagmiConnector",
								"type": "WagmiConnector<any, any, any>"
							}
						],
						"returns": {
							"type": "WagmiAdapter<TConnectParams>"
						},
						"typeParameters": [
							{
								"name": "TConnectParams",
								"extendsType": "Record<string, any>",
								"defaultType": "{  }"
							}
						]
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L32"
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiAdapter<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "args",
									"type": "ConnectParams<TConnectParams>",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L37"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L43"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "any[]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "(string) | (symbol)[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L52"
				},
				{
					"kind": "function",
					"name": "getProvider",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Provider>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L58"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L55"
				},
				{
					"kind": "function",
					"name": "isConnected",
					"signatures": [
						{
							"returns": {
								"type": "Promise<boolean>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L49"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "(...args: any[]) => void[]"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiAdapter<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiAdapter<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiAdapter<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiAdapter<TConnectParams>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiAdapter<TConnectParams>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "setupConnectorListeners",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L69"
				},
				{
					"kind": "function",
					"name": "setupListeners",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L83"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L62"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L89"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "wagmiConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/interfaces/connector.ts#L30",
					"type": "WagmiConnector<any, any, any>"
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"typeParameters": [
				{
					"name": "TConnectParams",
					"extendsType": "Record<string, any>",
					"defaultType": "{  }"
				}
			],
			"extends": ["Connector<TConnectParams>"]
		},
		{
			"kind": "class",
			"name": "WagmiConnector",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L18",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "__namedParameters",
								"type": "{ chains: Chain[]; options: Options }"
							}
						],
						"returns": {
							"type": "WagmiConnector<Provider, Options, Signer>"
						},
						"typeParameters": [
							{
								"name": "Provider",
								"defaultType": "any"
							},
							{
								"name": "Options",
								"defaultType": "any"
							},
							{
								"name": "Signer",
								"defaultType": "any"
							}
						]
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L34"
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WagmiConnectorEvents<Provider>>[Extract<T, keyof WagmiConnectorEvents<Provider>>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiConnector<Provider, Options, Signer>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WagmiConnectorEvents<Provider>"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "config",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<Required<WagmiConnectorData<any>>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L46"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L49"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WagmiConnectorEvents<Provider>>[Extract<T, keyof WagmiConnectorEvents<Provider>>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WagmiConnectorEvents<Provider>"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WagmiConnectorEvents<Provider>[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAccount",
					"signatures": [
						{
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L50"
				},
				{
					"kind": "function",
					"name": "getBlockExplorerUrls",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chain",
									"type": "Chain"
								}
							],
							"returns": {
								"type": "(undefined) | (string[])"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L61"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"returns": {
								"type": "Promise<number>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L51"
				},
				{
					"kind": "function",
					"name": "getProvider",
					"signatures": [
						{
							"parameters": [
								{
									"name": "config",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<Provider>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L52"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"parameters": [
								{
									"name": "config",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L53"
				},
				{
					"kind": "function",
					"name": "isAuthorized",
					"signatures": [
						{
							"returns": {
								"type": "Promise<boolean>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L54"
				},
				{
					"kind": "function",
					"name": "isChainUnsupported",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "boolean"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L66"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WagmiConnectorEvents<Provider>",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WagmiConnectorEvents<Provider>>[Extract<T, keyof WagmiConnectorEvents<Provider>>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WagmiConnectorEvents<Provider>"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WagmiConnectorEvents<Provider>>[Extract<T, keyof WagmiConnectorEvents<Provider>>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiConnector<Provider, Options, Signer>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WagmiConnectorEvents<Provider>"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WagmiConnectorEvents<Provider>>[Extract<T, keyof WagmiConnectorEvents<Provider>>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiConnector<Provider, Options, Signer>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WagmiConnectorEvents<Provider>"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "onAccountsChanged",
					"signatures": [
						{
							"parameters": [
								{
									"name": "accounts",
									"type": "string[]"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L57"
				},
				{
					"kind": "function",
					"name": "onChainChanged",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chain",
									"type": "(string) | (number)"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L58"
				},
				{
					"kind": "function",
					"name": "onDisconnect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "error",
									"type": "Error"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L59"
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WagmiConnectorEvents<Provider>>[Extract<T, keyof WagmiConnectorEvents<Provider>>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiConnector<Provider, Options, Signer>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WagmiConnectorEvents<Provider>"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WagmiConnectorEvents<Provider>",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiConnector<Provider, Options, Signer>"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WagmiConnectorEvents<Provider>>[Extract<T, keyof WagmiConnectorEvents<Provider>>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WagmiConnector<Provider, Options, Signer>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WagmiConnectorEvents<Provider>"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "setupListeners",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L70"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<Chain>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L55"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L72"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "chains",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Chains connector supports"
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L28",
					"type": "Chain[]"
				},
				{
					"kind": "variable",
					"name": "id",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Unique connector id"
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L24",
					"type": "string",
					"flags": {
						"isAbstract": true,
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "name",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Connector name"
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L26",
					"type": "string",
					"flags": {
						"isAbstract": true,
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Options to use with connector"
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L30",
					"type": "Options",
					"flags": {
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "ready",
					"summary": [
						{
							"type": "paragraph",
							"children": [
								{
									"type": "text",
									"value": "Whether connector is usable"
								}
							]
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/lib/wagmi-connectors/WagmiConnector.ts#L32",
					"type": "boolean",
					"flags": {
						"isAbstract": true,
						"isReadonly": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"typeParameters": [
				{
					"name": "Provider",
					"defaultType": "any"
				},
				{
					"name": "Options",
					"defaultType": "any"
				},
				{
					"name": "Signer",
					"defaultType": "any"
				}
			],
			"extends": ["EventEmitter<WagmiConnectorEvents<Provider>>"]
		},
		{
			"kind": "class",
			"name": "WalletConnect",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L41",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletOptions<WalletConnectOptions>",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "WalletConnect"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L62"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#maybeThrowError",
					"signatures": [
						{
							"parameters": [
								{
									"name": "error",
									"type": "any"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L92"
				},
				{
					"kind": "function",
					"name": "#onChange",
					"signatures": [
						{
							"parameters": [
								{
									"name": "payload",
									"type": "any"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L109"
				},
				{
					"kind": "function",
					"name": "#onConnect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "data",
									"type": "WagmiConnectorData<EthereumProvider>"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L98"
				},
				{
					"kind": "function",
					"name": "#onDisconnect",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L105"
				},
				{
					"kind": "function",
					"name": "#onMessage",
					"signatures": [
						{
							"parameters": [
								{
									"name": "payload",
									"type": "any"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L117"
				},
				{
					"kind": "function",
					"name": "#onSessionRequestSent",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L125"
				},
				{
					"kind": "function",
					"name": "#removeListeners",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L144"
				},
				{
					"kind": "function",
					"name": "#setupListeners",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L129"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnect"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L161"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L68"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<WalletConnectOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnect"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnect"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnect"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnect"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnect"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#provider",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L43",
					"type": "EthereumProvider",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "#walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L42",
					"type": "WalletConnectConnector",
					"flags": {
						"isPrivate": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L45",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<WalletConnectOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "projectId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L59",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "qrcode",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L60",
					"type": "(undefined) | (boolean)"
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L47",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L49",
					"type": "{ iconURL: string; name: string }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/wallet-connect.ts#L55",
					"returns": {
						"type": "\"WalletConnect\""
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<WalletConnectOptions>"]
		},
		{
			"kind": "class",
			"name": "WalletConnectHandler",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L81",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "wallet",
								"type": "AbstractWallet"
							}
						],
						"returns": {
							"type": "WalletConnectHandler"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L84"
			},
			"methods": [
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectHandler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "approveEIP155Request",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L93"
				},
				{
					"kind": "function",
					"name": "approveSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L91"
				},
				{
					"kind": "function",
					"name": "connectApp",
					"signatures": [
						{
							"parameters": [
								{
									"name": "uri",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L90"
				},
				{
					"kind": "function",
					"name": "disconnectSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L96"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "any[]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "(string) | (symbol)[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getActiveSessions",
					"signatures": [
						{
							"returns": {
								"type": "WCSession[]"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L95"
				},
				{
					"kind": "function",
					"name": "init",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L89"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "(...args: any[]) => void[]"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectHandler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectHandler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectHandler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "rejectEIP155Request",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L94"
				},
				{
					"kind": "function",
					"name": "rejectSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L92"
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectHandler"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectHandler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "wallet",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L82",
					"type": "AbstractWallet",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["EventEmitter"]
		},
		{
			"kind": "class",
			"name": "WalletConnectV2Handler",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L23",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletConnectReceiverConfig"
							},
							{
								"name": "wallet",
								"type": "AbstractWallet"
							}
						],
						"returns": {
							"type": "WalletConnectV2Handler"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L31"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#getSignParamsMessage",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Gets message from various signing request methods by filtering out\na value that is not an address (thus is a message).\nIf it is a hex string, it gets converted to utf8 string"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "params",
									"type": "string[]"
								}
							],
							"returns": {
								"type": "string"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L360"
				},
				{
					"kind": "function",
					"name": "#setupWalletConnectEventsListeners",
					"signatures": [
						{
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L273"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectV2Handler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "approveEIP155Request",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L140"
				},
				{
					"kind": "function",
					"name": "approveSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L78"
				},
				{
					"kind": "function",
					"name": "connectApp",
					"signatures": [
						{
							"parameters": [
								{
									"name": "wcUri",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L71"
				},
				{
					"kind": "function",
					"name": "disconnectSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L253"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "any[]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "(string) | (symbol)[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getActiveSessions",
					"signatures": [
						{
							"returns": {
								"type": "WCSession[]"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L221"
				},
				{
					"kind": "function",
					"name": "init",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L56"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "(...args: any[]) => void[]"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectV2Handler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectV2Handler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectV2Handler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "rejectEIP155Request",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L203"
				},
				{
					"kind": "function",
					"name": "rejectSession",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L119"
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "(string) | (symbol)",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectV2Handler"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: any[]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "WalletConnectV2Handler"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "(string) | (symbol)"
								}
							]
						}
					]
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#activeProposal",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L28",
					"type": "(undefined) | (SessionProposal)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#activeRequestEvent",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L29",
					"type": "(undefined) | (SessionRequest)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#core",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L24",
					"type": "ICore",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#session",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L26",
					"type": "(undefined) | (Struct)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#wcMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L27",
					"type": "WCMetadata",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "#wcWallet",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/WalletConnect/WalletConnectV2Handler.ts#L25",
					"type": "(undefined) | (IWeb3Wallet)",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "wallet",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/core/types/walletConnect.ts#L82",
					"type": "AbstractWallet",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"extends": ["WalletConnectHandler"]
		},
		{
			"kind": "class",
			"name": "ZerionWallet",
			"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L37",
			"constructor": {
				"kind": "function",
				"name": "constructor",
				"signatures": [
					{
						"parameters": [
							{
								"name": "options",
								"type": "WalletOptions<ZerionAdditionalOptions>",
								"flags": {
									"isOptional": true
								}
							}
						],
						"returns": {
							"type": "ZerionWallet"
						}
					}
				],
				"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L57"
			},
			"methods": [
				{
					"kind": "function",
					"name": "#connect",
					"signatures": [
						{
							"parameters": [
								{
									"name": "isAutoConnect",
									"type": "boolean"
								},
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L98"
				},
				{
					"kind": "function",
					"name": "#subscribeToEvents",
					"signatures": [
						{
							"parameters": [
								{
									"name": "connector",
									"type": "Connector<{  }>"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L150"
				},
				{
					"kind": "function",
					"name": "#trackConnection",
					"signatures": [
						{
							"parameters": [
								{
									"name": "address",
									"type": "string"
								}
							],
							"returns": {
								"type": "void"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L140"
				},
				{
					"kind": "function",
					"name": "addListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "ZerionWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "autoConnect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "tries to auto connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L66"
				},
				{
					"kind": "function",
					"name": "connect",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "connect to the wallet"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "connectOptions",
									"type": "{ chainId: number }",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<string>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L79"
				},
				{
					"kind": "function",
					"name": "connectWithQrCode",
					"signatures": [
						{
							"parameters": [
								{
									"name": "options",
									"type": "ConnectWithQrCodeArgs"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L111"
				},
				{
					"kind": "function",
					"name": "disconnect",
					"signatures": [
						{
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L181"
				},
				{
					"kind": "function",
					"name": "emit",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Calls each of the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "args",
									"type": "ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]",
									"flags": {
										"isExternal": true,
										"isRest": true
									}
								}
							],
							"returns": {
								"type": "boolean"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "eventNames",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return an array listing the events for which the emitter has registered\nlisteners."
										}
									]
								}
							],
							"returns": {
								"type": "keyof WalletEvents[]"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "getAddress",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the account address from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L75"
				},
				{
					"kind": "function",
					"name": "getBalance",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<{ decimals: number; displayValue: string; name: string; symbol: string; value: BigNumber }>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the native token balance of the connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L83"
				},
				{
					"kind": "function",
					"name": "getChainId",
					"signatures": [
						{
							"summary": [],
							"returns": {
								"type": "Promise<number>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the chain id from connected wallet"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L106"
				},
				{
					"kind": "function",
					"name": "getConnectParams",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | ({ chainId: number })"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L90"
				},
				{
					"kind": "function",
					"name": "getConnector",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Connector<{  }>>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L67"
				},
				{
					"kind": "function",
					"name": "getMeta",
					"signatures": [
						{
							"returns": {
								"type": "WalletMeta"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L45"
				},
				{
					"kind": "function",
					"name": "getOptions",
					"signatures": [
						{
							"returns": {
								"type": "(undefined) | (WalletOptions<ZerionAdditionalOptions>)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L94"
				},
				{
					"kind": "function",
					"name": "getPersonalWallet",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "If the wallet uses a personal wallet under the hood, return it"
										}
									]
								}
							],
							"returns": {
								"type": "(undefined) | (EVMWallet)"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L212"
				},
				{
					"kind": "function",
					"name": "getSigner",
					"signatures": [
						{
							"returns": {
								"type": "Promise<Signer>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L173"
				},
				{
					"kind": "function",
					"name": "listenerCount",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the number of listeners listening to a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "number"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "listeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Return the listeners registered for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								}
							],
							"returns": {
								"type": "Array<(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void>"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "off",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "ZerionWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "on",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "ZerionWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "once",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Add a one-time listener for a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "ZerionWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "removeAllListeners",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove all listeners, or those of the specified event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "keyof WalletEvents",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "ZerionWallet"
							}
						}
					]
				},
				{
					"kind": "function",
					"name": "removeListener",
					"signatures": [
						{
							"flags": {
								"isExternal": true
							},
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "Remove the listeners of a given event."
										}
									]
								}
							],
							"parameters": [
								{
									"name": "event",
									"type": "T",
									"flags": {
										"isExternal": true
									}
								},
								{
									"name": "fn",
									"type": "(...args: ArgumentMap<WalletEvents>[Extract<T, keyof WalletEvents>]) => void",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "context",
									"type": "any",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								},
								{
									"name": "once",
									"type": "boolean",
									"flags": {
										"isExternal": true,
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "ZerionWallet"
							},
							"typeParameters": [
								{
									"name": "T",
									"extendsType": "keyof WalletEvents"
								}
							]
						}
					]
				},
				{
					"kind": "function",
					"name": "signMessage",
					"signatures": [
						{
							"summary": [],
							"parameters": [
								{
									"name": "message",
									"type": "(string) | (Bytes)"
								}
							],
							"returns": {
								"type": "Promise<string>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "text",
												"value": "the signature of the message"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L146"
				},
				{
					"kind": "function",
					"name": "switchChain",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chainId",
									"type": "number"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L190"
				},
				{
					"kind": "function",
					"name": "transfer",
					"signatures": [
						{
							"parameters": [
								{
									"name": "to",
									"type": "string"
								},
								{
									"name": "amount",
									"type": "(string) | (number)"
								},
								{
									"name": "currencyAddress",
									"type": "string"
								}
							],
							"returns": {
								"type": "Promise<Omit<TransactionResultWithMetadata<unknown>, \"data\">>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L111"
				},
				{
					"kind": "function",
					"name": "updateChains",
					"signatures": [
						{
							"parameters": [
								{
									"name": "chains",
									"type": "Chain[]"
								}
							],
							"returns": {
								"type": "Promise<void>"
							}
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L201"
				},
				{
					"kind": "function",
					"name": "verifySignature",
					"signatures": [
						{
							"summary": [
								{
									"type": "paragraph",
									"children": [
										{
											"type": "text",
											"value": "verify the signature of a message"
										}
									]
								}
							],
							"parameters": [
								{
									"name": "message",
									"type": "string"
								},
								{
									"name": "signature",
									"type": "string"
								},
								{
									"name": "address",
									"type": "string"
								},
								{
									"name": "chainId",
									"type": "number",
									"flags": {
										"isOptional": true
									}
								}
							],
							"returns": {
								"type": "Promise<boolean>",
								"summary": [
									{
										"type": "paragraph",
										"children": [
											{
												"type": "inlineCode",
												"value": "true"
											},
											{
												"type": "text",
												"value": " if the signature is valid, "
											},
											{
												"type": "inlineCode",
												"value": "false"
											},
											{
												"type": "text",
												"value": " otherwise"
											}
										]
									}
								]
							},
							"blockTags": []
						}
					],
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L155"
				}
			],
			"properties": [
				{
					"kind": "variable",
					"name": "#connectParams",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L43",
					"type": "(undefined) | ({ chainId: number })",
					"flags": {
						"isPrivate": true
					}
				},
				{
					"kind": "variable",
					"name": "chains",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L39",
					"type": "Chain[]",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "connector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L38",
					"type": "Connector<{  }>",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "dappMetadata",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L40",
					"type": "DAppMetaData",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "isInjected",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L41",
					"type": "boolean"
				},
				{
					"kind": "variable",
					"name": "options",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L41",
					"type": "WalletOptions<ZerionAdditionalOptions>",
					"flags": {
						"isProtected": true,
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "type",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/abstract.ts#L68",
					"type": "\"evm\"",
					"flags": {
						"isPublic": true
					}
				},
				{
					"kind": "variable",
					"name": "walletConnectConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L40",
					"type": "WalletConnectConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "walletId",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L37",
					"type": "string"
				},
				{
					"kind": "variable",
					"name": "walletStorage",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/base.ts#L38",
					"type": "AsyncStorage",
					"flags": {
						"isProtected": true
					}
				},
				{
					"kind": "variable",
					"name": "zerionConnector",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L39",
					"type": "ZerionConnector",
					"flags": {
						"isOptional": true
					}
				},
				{
					"kind": "variable",
					"name": "id",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L43",
					"type": "string",
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "meta",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L44",
					"type": "{ iconURL: string; name: string; urls: { android: string; chrome: string; ios: string } }",
					"typeDeclaration": [
						{
							"kind": "subtype",
							"name": "iconURL",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "name",
							"type": "string"
						},
						{
							"kind": "subtype",
							"name": "urls",
							"type": "{ android: string; chrome: string; ios: string }"
						}
					],
					"flags": {
						"isStatic": true
					}
				},
				{
					"kind": "variable",
					"name": "prefixed",
					"type": "(string) | (boolean)",
					"flags": {
						"isStatic": true,
						"isExternal": true
					}
				}
			],
			"accessors": [
				{
					"kind": "accessor",
					"name": "walletName",
					"source": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/wallets/src/evm/wallets/zerion.ts#L53",
					"returns": {
						"type": "string"
					},
					"flags": {
						"isPublic": true
					}
				}
			],
			"extends": ["AbstractClientWallet<ZerionAdditionalOptions>"]
		}
	]
}
