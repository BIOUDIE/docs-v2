{
	"id": 0,
	"name": "@thirdweb-dev/react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 641,
			"name": "MediaRendererProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 643,
					"name": "alt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The alt text for the media."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 47,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 652,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 661,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 648,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 655,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 651,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)"
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 660,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 645,
					"name": "gatewayUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IPFS gateway URL to use"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 647,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS height property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 63,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 658,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 653,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 662,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 644,
					"name": "poster",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media poster image uri. (if applicable)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L51"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 650,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 659,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 642,
					"name": "src",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media source uri."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L43"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 649,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 656,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 646,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS width property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 59,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L59"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 657,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						643, 652, 648, 651, 645, 647, 653, 644, 650, 642, 649, 646
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/types.ts",
					"line": 39,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L39"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 654,
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 770,
			"name": "MediaType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 772,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 501,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L501"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 771,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 500,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L500"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [772, 771]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 499,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L499"
				}
			]
		},
		{
			"id": 654,
			"name": "SharedMediaProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 661,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				},
				{
					"id": 655,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 660,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)"
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 658,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS height property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 662,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 659,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 656,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					}
				},
				{
					"id": 657,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS width property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [661, 655, 660, 658, 662, 659, 656, 657]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/types.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L3"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 641,
					"name": "MediaRendererProps"
				},
				{
					"type": "reference",
					"target": 773,
					"name": "ThirdwebNftMediaProps"
				}
			]
		},
		{
			"id": 773,
			"name": "ThirdwebNftMediaProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 782,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 661,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 778,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 655,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 781,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)"
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 29,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 660,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 777,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "CSS height of the media"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 18,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/NftMedia.tsx#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 658,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 774,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFT metadata of the NFT returned by the thirdweb sdk."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 10,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/NftMedia.tsx#L10"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "objectOutputType"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 775,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/nft.d.ts",
											"line": 278,
											"character": 303
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodUnion"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodEffects"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodUnion"
														},
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodBigInt"
																		},
																		"name": "ZodBigInt",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	}
																]
															}
														],
														"name": "ZodUnion",
														"package": "zod"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																	"qualifiedName": "BigNumber"
																},
																"name": "BigNumber",
																"package": "@ethersproject/bignumber"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														]
													}
												],
												"name": "ZodEffects",
												"package": "zod"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodUnknown"
												},
												"name": "ZodUnknown",
												"package": "zod"
											}
										]
									}
								],
								"name": "ZodUnion",
								"package": "zod"
							},
							{
								"type": "literal",
								"value": "strip"
							}
						],
						"name": "objectOutputType",
						"package": "zod"
					}
				},
				{
					"id": 783,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 36,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 662,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 780,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media."
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 659,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 779,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 656,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 776,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "CSS width of the media"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 14,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/NftMedia.tsx#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 657,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [782, 778, 781, 777, 774, 783, 780, 779, 776]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 6,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/NftMedia.tsx#L6"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 654,
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 635,
			"name": "ThirdwebProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 639,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "locale object contains text used for all thirdweb components\n\nit allows you to change the language used in UI components or override the texts used in the UI\n\nReact SDK comes out of the box with Spanish and Japanese locale functions, but you can add support for any language you want just by passing an object with the required strings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "## Using Built-in Locales\n\n### Using the Spanish locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, es } from \"@thirdweb-dev/react\";\n\nconst spanish = es();\n\n<ThirdwebProvider locale={spanish}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Using the Japanese locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, jp } from \"@thirdweb-dev/react\";\n\nconst japanese = jp();\n\n<ThirdwebProvider locale={japanese}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Using English locale ( default )\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\nconst english = en();\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n## Overriding the locale\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\n// override some texts\nconst english = en({\n  connectWallet: {\n    confirmInWallet: \"Confirm in your wallet\",\n  },\n  wallets: {\n    metamaskWallet: {\n      connectionScreen: {\n        inProgress: \"Awaiting Confirmation\",\n        instruction: \"Accept connection request in your MetaMask wallet\",\n      },\n    },\n  },\n});\n\n<ThirdwebProvider locale={english}>\n  <App />\n</ThirdwebProvider>;\n\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Custom locale object\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider locale={{ .... }}>\n  <App />\n</ThirdwebProvider>;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 141,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L141"
						}
					],
					"type": {
						"type": "reference",
						"target": 111,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				},
				{
					"id": 638,
					"name": "signer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use a signer instead of "
							},
							{
								"kind": "code",
								"text": "`supportedWallets`"
							},
							{
								"kind": "text",
								"text": " if you want to provide your own wallet connection logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 64,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L64"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
							"qualifiedName": "Signer"
						},
						"name": "Signer",
						"package": "@ethersproject/abstract-signer"
					}
				},
				{
					"id": 636,
					"name": "supportedWallets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wallets supported by the dApp"
							}
						],
						"blockTags": [
							{
								"tag": "@defaultValue",
								"content": [
									{
										"kind": "code",
										"text": "`[ metamaskWallet(), coinbaseWallet(), walletConnect() ]`"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nimport { metamaskWallet, coinbaseWallet, walletConnect } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider\n supportedWallets={[metamaskWallet(), coinbaseWallet(), walletConnect()]}\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L38"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../react-core/src/core/types/wallet.ts",
								"qualifiedName": "WalletConfig"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "WalletConfig",
							"package": "@thirdweb-dev/react-core"
						}
					}
				},
				{
					"id": 637,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the theme for all thirdweb components\n\nBy default it is set to \"dark\".\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object.\n\nYou can also import "
							},
							{
								"kind": "code",
								"text": "`lightTheme`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`darkTheme`"
							},
							{
								"kind": "text",
								"text": " functions from "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/react`"
							},
							{
								"kind": "text",
								"text": " to use the default themes as base and overrides parts of it."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 59,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L59"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/design-system/index.ts",
							"qualifiedName": "ThemeObjectOrType"
						},
						"name": "ThemeObjectOrType",
						"package": "@thirdweb-dev/react"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [639, 638, 636, 637]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 20,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L20"
				}
			],
			"typeParameters": [
				{
					"id": 640,
					"name": "TChains",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
								"qualifiedName": "ThirdwebProviderCoreProps"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "TChains",
									"refersToTypeParameter": true
								}
							],
							"name": "ThirdwebProviderCoreProps",
							"package": "@thirdweb-dev/react-core"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "createWalletStorage"
								},
								{
									"type": "literal",
									"value": "supportedWallets"
								},
								{
									"type": "literal",
									"value": "theme"
								},
								{
									"type": "literal",
									"value": "signerWallet"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 534,
			"name": "Web3ButtonProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 550,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The logic to execute when the button is clicked.\n\nThe contract instance is available as the first argument of the function for you to interact with.\n\nIf the action you are performing is async, make sure to return a Promise from the action function so that the SDK knows when the action is complete"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button\n contractAddress=\"0x...\"\n action={(contract) => contract.erc721.claim(1)}\n>\n Claim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 95,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L95"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TActionFn",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 535,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the class to apply to the button for adding custom styles"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button className=\"my-custom-class\" contractAddress={contractAddress} action={someAction} >\nClaim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 42,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 589,
					"name": "connectWallet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Web3Button renders a "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " if no wallet is connected. You can pass props for that component by passing a "
							},
							{
								"kind": "code",
								"text": "`connectWallet`"
							},
							{
								"kind": "text",
								"text": " prop to Web3Button"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button\n contractAddress=\"0x...\"\n action={(contract) => contract.erc721.claim(1)}\n>\n Claim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 125,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L125"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 590,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 595,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 150,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L150"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 596,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 597,
													"name": "loginOptional",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 151,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L151"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 598,
													"name": "onLogin",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 152,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L152"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 599,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																	"line": 152,
																	"character": 16,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L152"
																}
															],
															"signatures": [
																{
																	"id": 600,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																			"line": 152,
																			"character": 16,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L152"
																		}
																	],
																	"parameters": [
																		{
																			"id": 601,
																			"name": "token",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												},
												{
													"id": 602,
													"name": "onLogout",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 153,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L153"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 603,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																	"line": 153,
																	"character": 17,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L153"
																}
															],
															"signatures": [
																{
																	"id": 604,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																			"line": 153,
																			"character": 17,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L153"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [597, 598, 602]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
													"line": 150,
													"character": 11,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L150"
												}
											]
										}
									}
								},
								{
									"id": 592,
									"name": "btnTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "text to render in ConnectWallet button"
											}
										],
										"blockTags": [
											{
												"tag": "@defaultValue",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n\"Connect Wallet\"\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 135,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L135"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 591,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The class to apply to the ConnectWallet component for adding custom styles"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 129,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L129"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 606,
									"name": "modalSize",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set the size of the modal - "
											},
											{
												"kind": "code",
												"text": "`compact`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`wide`"
											},
											{
												"kind": "text",
												"text": " on desktop\n\nModal size is always "
											},
											{
												"kind": "code",
												"text": "`compact`"
											},
											{
												"kind": "text",
												"text": " on mobile"
											}
										],
										"blockTags": [
											{
												"tag": "@defaultValue",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n\"wide\"\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 168,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L168"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "compact"
											},
											{
												"type": "literal",
												"value": "wide"
											}
										]
									}
								},
								{
									"id": 593,
									"name": "modalTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "title of the "
											},
											{
												"kind": "code",
												"text": "`ConnectWallet`"
											},
											{
												"kind": "text",
												"text": " Modal"
											}
										],
										"blockTags": [
											{
												"tag": "@defaultValue",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n\"Connect\"\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 141,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L141"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 594,
									"name": "modalTitleIconUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 148,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L148"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 608,
									"name": "privacyPolicyUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, ConnectWallet Modal will show a Privacy Policy message at the bottom with below link"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 178,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L178"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 605,
									"name": "style",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "apply custom styles to ConnectWallet button element"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 159,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L159"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.CSSProperties"
										},
										"name": "CSSProperties",
										"package": "@types/react",
										"qualifiedName": "React.CSSProperties"
									}
								},
								{
									"id": 607,
									"name": "termsOfServiceUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, ConnectWallet Modal will show a Terms of Service message at the bottom with below link"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 173,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L173"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 609,
									"name": "welcomeScreen",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Customize the welcome screen of the ConnectWallet Modal\n\nEither provide a component to replace the default screen entirely or an object with title, subtitle and imgSrc to change the content of the default screen"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 185,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L185"
										}
									],
									"type": {
										"type": "reference",
										"target": 480,
										"name": "WelcomeScreen",
										"package": "@thirdweb-dev/react"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [595, 592, 591, 606, 593, 594, 608, 605, 607, 609]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 125,
									"character": 18,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L125"
								}
							]
						}
					}
				},
				{
					"id": 537,
					"name": "contractAbi",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The [Application Binary Interface](https://docs.soliditylang.org/en/v0.8.17/abi-spec.html) (ABI) of the contract.\n\nThis is only required if you have not imported your contract to the [thirdweb dashboard](https://thirdweb.com/dashboard)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 54,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L54"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
							"qualifiedName": "ContractInterface"
						},
						"name": "ContractInterface",
						"package": "@ethersproject/contracts"
					}
				},
				{
					"id": 536,
					"name": "contractAddress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the address of the contract\n\nIf you have not imported your contract to [thirdweb dashboard](https://thirdweb.com/dashboard), you must additionally specify the contractAbi prop."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 48,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 549,
					"name": "isDisabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the button should be disabled or not\n\nThe button is disabled and shows a spinner when the transaction is executing."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 76,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 542,
					"name": "onError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 64,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L64"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 543,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 64,
									"character": 12,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L64"
								}
							],
							"signatures": [
								{
									"id": 544,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run when the contract method call fails."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 64,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L64"
										}
									],
									"parameters": [
										{
											"id": 545,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "error thrown when running given "
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": " function"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 546,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 69,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L69"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 547,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 69,
									"character": 13,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L69"
								}
							],
							"signatures": [
								{
									"id": 548,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run after the user has confirmed the transaction.\nIt is called just before the "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " function is called"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 69,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L69"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 538,
					"name": "onSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 59,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L59"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 539,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 59,
									"character": 14,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L59"
								}
							],
							"signatures": [
								{
									"id": 540,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run when the contract method call is successful."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 59,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L59"
										}
									],
									"parameters": [
										{
											"id": 541,
											"name": "result",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value returned from given "
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": " function when it is called"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Awaited"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TActionFn",
																"refersToTypeParameter": true
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												],
												"name": "Awaited",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 588,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply to the button element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 110,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L110"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					}
				},
				{
					"id": 552,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The theme to use for the button"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 105,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L105"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "dark"
							},
							{
								"type": "literal",
								"value": "light"
							},
							{
								"type": "reflection",
								"declaration": {
									"id": 553,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 555,
											"name": "colors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 36,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L36"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 556,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 563,
															"name": "accentButtonBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 46,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L46"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.accentBg"
														},
														{
															"id": 564,
															"name": "accentButtonText",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 47,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L47"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.textOnAccent"
														},
														{
															"id": 559,
															"name": "accentText",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 39,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L39"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.accentText"
														},
														{
															"id": 581,
															"name": "borderColor",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 72,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L72"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base4"
														},
														{
															"id": 585,
															"name": "connectedButtonBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 78,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L78"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base1"
														},
														{
															"id": 586,
															"name": "connectedButtonBgHover",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 79,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L79"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base2"
														},
														{
															"id": 560,
															"name": "danger",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 41,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L41"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.danger"
														},
														{
															"id": 571,
															"name": "dropdownBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 57,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L57"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base1"
														},
														{
															"id": 574,
															"name": "inputAutofillBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 62,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L62"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base2"
														},
														{
															"id": 570,
															"name": "modalBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 56,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L56"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base1"
														},
														{
															"id": 562,
															"name": "modalOverlayBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 44,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L44"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.overlay"
														},
														{
															"id": 565,
															"name": "primaryButtonBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 49,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L49"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.primaryText"
														},
														{
															"id": 566,
															"name": "primaryButtonText",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 50,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L50"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base1"
														},
														{
															"id": 557,
															"name": "primaryText",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 37,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L37"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.primaryText"
														},
														{
															"id": 575,
															"name": "scrollbarBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 63,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L63"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base2"
														},
														{
															"id": 567,
															"name": "secondaryButtonBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 52,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L52"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base3"
														},
														{
															"id": 569,
															"name": "secondaryButtonHoverBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 54,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L54"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base4"
														},
														{
															"id": 568,
															"name": "secondaryButtonText",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 53,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L53"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.primaryText"
														},
														{
															"id": 578,
															"name": "secondaryIconColor",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 68,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L68"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.secondaryText"
														},
														{
															"id": 579,
															"name": "secondaryIconHoverBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 69,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L69"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base3"
														},
														{
															"id": 580,
															"name": "secondaryIconHoverColor",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 70,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L70"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.primaryText"
														},
														{
															"id": 558,
															"name": "secondaryText",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 38,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L38"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.secondaryText"
														},
														{
															"id": 584,
															"name": "selectedTextBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 76,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L76"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.primaryText"
														},
														{
															"id": 583,
															"name": "selectedTextColor",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 75,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L75"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base1"
														},
														{
															"id": 577,
															"name": "separatorLine",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 66,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L66"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base4"
														},
														{
															"id": 582,
															"name": "skeletonBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 73,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L73"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base3"
														},
														{
															"id": 561,
															"name": "success",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 42,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L42"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.success"
														},
														{
															"id": 572,
															"name": "tooltipBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 59,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L59"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.primaryText"
														},
														{
															"id": 573,
															"name": "tooltipText",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 60,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L60"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base1"
														},
														{
															"id": 576,
															"name": "walletSelectorButtonHoverBg",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/design-system/index.ts",
																	"line": 64,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L64"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															},
															"defaultValue": "colors.base2"
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																563, 564, 559, 581, 585, 586, 560, 571, 574,
																570, 562, 565, 566, 557, 575, 567, 569, 568,
																578, 579, 580, 558, 584, 583, 577, 582, 561,
																572, 573, 576
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/design-system/index.ts",
															"line": 36,
															"character": 12,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L36"
														}
													]
												}
											},
											"defaultValue": "..."
										},
										{
											"id": 587,
											"name": "fontFamily",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 81,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L81"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"inherit\""
										},
										{
											"id": 554,
											"name": "type",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 35,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L35"
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "literal",
														"value": "dark"
													},
													{
														"type": "literal",
														"value": "light"
													}
												]
											},
											"defaultValue": "..."
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [555, 587, 554]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/design-system/index.ts",
											"line": 34,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L34"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 551,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "button element's "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": " attribute"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 100,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L100"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "button"
							},
							{
								"type": "literal",
								"value": "reset"
							},
							{
								"type": "literal",
								"value": "submit"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						550, 535, 589, 537, 536, 549, 542, 546, 538, 588, 552, 551
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 31,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L31"
				}
			],
			"typeParameters": [
				{
					"id": 610,
					"name": "TActionFn",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/evm/components/Web3Button/index.tsx",
							"qualifiedName": "ActionFn"
						},
						"name": "ActionFn",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 448,
			"name": "ConnectWalletProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 40,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L40"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 449,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 459,
							"name": "auth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enforce that users must sign in with their wallet using [auth](https://portal.thirdweb.com/auth) after connecting their wallet.\n\nThis requires the "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " prop to be set on the "
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": " component."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 138,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L138"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 460,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 461,
											"name": "loginOptional",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "specify whether signing in is optional or not. By default it is "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": " if "
													},
													{
														"kind": "code",
														"text": "`authConfig`"
													},
													{
														"kind": "text",
														"text": " is set on "
													},
													{
														"kind": "code",
														"text": "`ThirdWebProvider`"
													}
												],
												"blockTags": [
													{
														"tag": "@defaultValue",
														"content": [
															{
																"kind": "code",
																"text": "```ts\ntrue\n```"
															}
														]
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 143,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L143"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 462,
											"name": "onLogin",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 147,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L147"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 463,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 147,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L147"
														}
													],
													"signatures": [
														{
															"id": 464,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs in with their wallet"
																	}
																]
															},
															"parameters": [
																{
																	"id": 465,
																	"name": "token",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 466,
											"name": "onLogout",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 151,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L151"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 467,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 151,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L151"
														}
													],
													"signatures": [
														{
															"id": 468,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs out"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [461, 462, 466]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 138,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L138"
										}
									]
								}
							}
						},
						{
							"id": 452,
							"name": "btnTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "set custom label for the button."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"Connect\"\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet btnTitle=\"Sign in\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 82,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L82"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 450,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "CSS class to apply to the button element\n\nFor some CSS properties, you may need to use the !important to override the default styles\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet className=\"my-custom-class\" />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 50,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L50"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 455,
							"name": "detailsBtn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 115,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L115"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 456,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 115,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L115"
										}
									],
									"signatures": [
										{
											"id": 457,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Render a custom button to display connected wallet details instead of the default one\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\nconst address = useAddress();\n\n<ConnectWallet\n detailsBtn={() => {\n   return (\n     <button>\n       connected to {address}\n     </button>\n   )\n }}\n/>\n```"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
													"qualifiedName": "__global.JSX.Element"
												},
												"name": "JSX.Element",
												"package": "@types/react",
												"qualifiedName": "__global.JSX.Element"
											}
										}
									]
								}
							}
						},
						{
							"id": 478,
							"name": "displayBalanceToken",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Display the balance of a token instead of the native token in ConnectWallet details button."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { Base } from \"@thirdweb-dev/chains\";\n\n<ConnectWallet balanceToken={{\n   1: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\" // show USDC balance when connected to Ethereum mainnet\n   [Base.chainId]: \"0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb\", // show Dai stablecoin token balance when connected to Base mainnet\n }}\n/>\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 297,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L297"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 458,
							"name": "dropdownPosition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When user connects the wallet using ConnectWallet Modal, a \"Details Button\" is rendered. Clicking on this button opens a dropdown which opens in a certain direction relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "`dropdownPosition`"
									},
									{
										"kind": "text",
										"text": " prop allows you to customize the direction the dropdown should open relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n dropdownPosition={{\n   side: \"bottom\", // or use:  \"top\" | \"bottom\" | \"left\" | \"right\"\n   align: \"end\", // or use:  \"start\" | \"center\" | \"end\";\n }}\n />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 131,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L131"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
									"qualifiedName": "DropDownPosition"
								},
								"name": "DropDownPosition",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 479,
							"name": "hideSwitchToPersonalWallet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide the \"Switch to Personal wallet\" option in the wallet modal which is shown when wallet is connected to either Smart Wallet or Safe."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet hideSwitchToPersonalWallet={true} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 309,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L309"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 471,
							"name": "hideTestnetFaucet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide the \"Request Testnet funds\" link in ConnectWallet dropdown which is shown when user is connected to a testnet."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet hideTestnetFaucet={false} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 177,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L177"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 473,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the size of the modal - "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`wide`"
									},
									{
										"kind": "text",
										"text": " on desktop\n\nModal size is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on mobile"
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"wide\"\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 197,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L197"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 453,
							"name": "modalTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Change the title of ConnectWallet Modal"
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\n\"Connect\"\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 89,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 454,
							"name": "modalTitleIconUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 96,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L96"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 470,
							"name": "networkSelector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "customize the Network selector shown"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 162,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L162"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 501,
										"name": "NetworkSelectorProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "onClose"
											},
											{
												"type": "literal",
												"value": "chains"
											},
											{
												"type": "literal",
												"value": "open"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 475,
							"name": "privacyPolicyUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Modal will show a Privacy Policy message at the bottom with below link"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet privacyPolicyUrl=\"https://your-privacy-policy-url.com\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 217,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L217"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 469,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "CSS styles to apply to the button element"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 157,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L157"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "React.CSSProperties",
								"package": "@types/react"
							}
						},
						{
							"id": 477,
							"name": "supportedTokens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the tokens shown in the \"Send Funds\" screen for various networks.\n\nBy default, The \"Send Funds\" screen shows a few popular tokens for default chains and the native token. For other chains it only shows the native token."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "supportedTokens prop allows you to customize this list as shown below which shows  \"Dai Stablecoin\" when users wallet is connected to the \"Base\" mainnet.\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nimport { ConnectWallet } from '@thirdweb-dev/react';\nimport { Base } from '@thirdweb-dev/chains';\n\nfunction Example() {\n  return (\n\t\t<ConnectWallet\n\t\t\tsupportedTokens={{\n\t\t\t\t[Base.chainId]: [\n\t\t\t\t\t{\n\t\t\t\t\t\taddress: '0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb', // token contract address\n\t\t\t\t\t\tname: 'Dai Stablecoin',\n\t\t\t\t\t\tsymbol: 'DAI',\n\t\t\t\t\t\ticon: 'https://assets.coingecko.com/coins/images/9956/small/Badge_Dai.png?1687143508',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t/>\n\t);\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 281,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L281"
								}
							],
							"type": {
								"type": "reference",
								"target": 758,
								"name": "SupportedTokens",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 472,
							"name": "switchToActiveChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to show \"Switch Network\" button if the wallet is connected,\nbut it is not connected to the "
									},
									{
										"kind": "code",
										"text": "`activeChain`"
									},
									{
										"kind": "text",
										"text": " provided in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "\n\nPlease, note that if you support multiple networks in your app this prop should\nbe set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " to allow users to switch between networks."
									}
								],
								"blockTags": [
									{
										"tag": "@defaultValue",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nfalse\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 188,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L188"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 474,
							"name": "termsOfServiceUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Modal will show a Terms of Service message at the bottom with below link"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet termsOfServiceUrl=\"https://your-terms-of-service-url.com\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 207,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L207"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 451,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the theme for the button and modal.\n\nBy default it is set to \"dark\" if "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is not set on "
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": "\nIf a "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is set on "
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": " then that theme will be used by default which can be overridden by setting "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " prop on "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object. You can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 70,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L70"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 100,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						},
						{
							"id": 476,
							"name": "welcomeScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the welcome screen. This prop is only applicable when modalSize prop is set to \"wide\". On \"wide\" Modal size, a welcome screen is shown on the right side of the modal.\n\nThis screen can be customized in two ways\n\n### 1. Customize Metadata and Image\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet welcomeScreen={{\n title: \"your title\",\n subtitle: \"your subtitle\",\n img: {\n  src: \"https://your-image-url.png\",\n  width: 300,\n  height: 50,\n },\n}} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### 2. Render Custom Component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n welcomeScreen={() => {\n return <YourCustomComponent />\n}}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 248,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L248"
								}
							],
							"type": {
								"type": "reference",
								"target": 480,
								"name": "WelcomeScreen",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								459, 452, 450, 455, 478, 458, 479, 471, 473, 453, 454, 470, 475,
								469, 477, 472, 474, 451, 476
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
							"line": 40,
							"character": 33,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L40"
						}
					]
				}
			}
		},
		{
			"id": 634,
			"name": "DefaultChains",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Array of default supported chains by the thirdweb SDK"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 147,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L147"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../chains/src/index.ts",
						"qualifiedName": "defaultChains"
					},
					"name": "defaultChains",
					"package": "@thirdweb-dev/chains"
				}
			}
		},
		{
			"id": 416,
			"name": "ExtensionAndQRScreensLocale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/types.ts",
					"line": 1,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 417,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 418,
							"name": "connectionScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 2,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 419,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 420,
											"name": "failed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 3,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 421,
											"name": "inProgress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 4,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 422,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 5,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 423,
											"name": "retry",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 6,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [420, 421, 422, 423]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 2,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 424,
							"name": "getStartedLink",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 8,
									"character": 2
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 425,
							"name": "getStartedScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 9,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 426,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 427,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 9,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [427]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 9,
											"character": 20
										}
									]
								}
							}
						},
						{
							"id": 428,
							"name": "scanScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 10,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 429,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 430,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 10,
													"character": 16
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [430]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 10,
											"character": 14
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [418, 424, 425, 428]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/types.ts",
							"line": 1,
							"character": 42
						}
					]
				}
			}
		},
		{
			"id": 519,
			"name": "NetworkSelectorChainProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 37,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L37"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 520,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 521,
							"name": "chain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`Chain`"
									},
									{
										"kind": "text",
										"text": " object for the chain to be displayed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 41,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L41"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							}
						},
						{
							"id": 527,
							"name": "close",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 57,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L57"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 528,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 57,
											"character": 10,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L57"
										}
									],
									"signatures": [
										{
											"id": 529,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "function to close the modal"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 522,
							"name": "switchChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 45,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L45"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 523,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 45,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L45"
										}
									],
									"signatures": [
										{
											"id": 524,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "function to be called for switching to the given chain"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 526,
							"name": "switchFailed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "flag indicating whether the SDK failed to switch to the given chain"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 53,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 525,
							"name": "switching",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "flag indicating whether the SDK is currently switching to the given chain"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 49,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [521, 527, 522, 526, 525]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 37,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L37"
						}
					]
				}
			}
		},
		{
			"id": 501,
			"name": "NetworkSelectorProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 60,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L60"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 502,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 508,
							"name": "chains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed in the modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 94,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L94"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 504,
							"name": "onClose",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 86,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L86"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 505,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 86,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L86"
										}
									],
									"signatures": [
										{
											"id": 506,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when modal is closed by the user"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 516,
							"name": "onCustomClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 118,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L118"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 517,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 118,
											"character": 18,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L118"
										}
									],
									"signatures": [
										{
											"id": 518,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when the \"Add Custom Network\" button is clicked\n\nThe \"Add Custom Network\" button is displayed at the bottom of the modal - only if this prop is provided"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 512,
							"name": "onSwitch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 112,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L112"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 513,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 112,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L112"
										}
									],
									"signatures": [
										{
											"id": 514,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when a chain is successfully switched"
													}
												]
											},
											"parameters": [
												{
													"id": 515,
													"name": "chain",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "the new chain that is switched to"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../chains/src/types.ts",
															"qualifiedName": "Chain"
														},
														"name": "Chain",
														"package": "@thirdweb-dev/chains"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 507,
							"name": "open",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify whether the Modal should be open or closed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 90,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 509,
							"name": "popularChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed under \"Popular\" section"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 98,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L98"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 510,
							"name": "recentChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed under \"Recent\" section"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 102,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L102"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 511,
							"name": "renderChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Override how the chain button is rendered in the Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 106,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L106"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FC"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 519,
										"name": "NetworkSelectorChainProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "React.FC",
								"package": "@types/react"
							}
						},
						{
							"id": 503,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Theme to use in Modal\n\nEither specify string \"dark\" or \"light\" to use the default themes, or provide a custom theme object.\n\nYou can also use "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " functions to use the default themes as base and override it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { darkTheme } from \"@thirdweb-dev/react\";\n\n<NetworkSelector\n open={true}\n theme={darkTheme({\n   colors: {\n     modalBg: \"#000000\",\n   }\n })}\n/>\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 82,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L82"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 100,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [508, 504, 516, 512, 507, 509, 510, 511, 503]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 60,
							"character": 35,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L60"
						}
					]
				}
			}
		},
		{
			"id": 758,
			"name": "SupportedTokens",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L32"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
								"qualifiedName": "TokenInfo"
							},
							"name": "TokenInfo",
							"package": "@thirdweb-dev/react"
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 100,
			"name": "Theme",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 88,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L88"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": {
						"sourceFileName": "src/design-system/index.ts",
						"qualifiedName": "darkThemeObj"
					},
					"name": "darkThemeObj",
					"package": "@thirdweb-dev/react"
				}
			}
		},
		{
			"id": 101,
			"name": "ThemeOverrides",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 92,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L92"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Exclude"
					},
					"typeArguments": [
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 100,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"type": "literal",
							"value": "type"
						}
					],
					"name": "Exclude",
					"package": "typescript"
				},
				"templateType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": -1,
								"name": "key",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 100,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"name": "Partial",
					"package": "typescript"
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 111,
			"name": "ThirdwebLocale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/types.ts",
					"line": 13,
					"character": 12
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 112,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 113,
							"name": "connectWallet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 14,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 114,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 115,
											"name": "agreement",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 15,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 116,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 117,
															"name": "and",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 16,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 118,
															"name": "prefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 17,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 119,
															"name": "privacyPolicy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 18,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 120,
															"name": "termsOfService",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 19,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [117, 118, 119, 120]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 15,
															"character": 15
														}
													]
												}
											}
										},
										{
											"id": 121,
											"name": "backupWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 21,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 122,
											"name": "confirmInWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 22,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 123,
											"name": "connectAWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 23,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 124,
											"name": "connectedToSmartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 24,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 125,
											"name": "connecting",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 25,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 126,
											"name": "continueAsGuest",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 26,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 127,
											"name": "copyAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 27,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 128,
											"name": "currentNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 28,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 129,
											"name": "defaultButtonTitle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 29,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 130,
											"name": "defaultModalTitle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 30,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 131,
											"name": "disconnectWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 31,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 132,
											"name": "download",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 32,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 133,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 134,
															"name": "android",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 32,
																	"character": 16
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 135,
															"name": "chrome",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 32,
																	"character": 33
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 136,
															"name": "iOS",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 32,
																	"character": 49
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [134, 135, 136]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 32,
															"character": 14
														}
													]
												}
											}
										},
										{
											"id": 137,
											"name": "getStarted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 33,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 138,
											"name": "guest",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 34,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 139,
											"name": "guestWalletWarning",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 35,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 140,
											"name": "installed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 36,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 141,
											"name": "networkSelector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 37,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 142,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 143,
															"name": "addCustomNetwork",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 38,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 144,
															"name": "allNetworks",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 39,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 145,
															"name": "categoryLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 40,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 146,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 147,
																			"name": "others",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 41,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 148,
																			"name": "popular",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 42,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 149,
																			"name": "recentlyUsed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 43,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [147, 148, 149]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 40,
																			"character": 21
																		}
																	]
																}
															}
														},
														{
															"id": 150,
															"name": "failedToSwitch",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 45,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 151,
															"name": "inputPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 46,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 152,
															"name": "loading",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 47,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 153,
															"name": "mainnets",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 48,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 154,
															"name": "testnets",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 49,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 155,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 50,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																143, 144, 145, 150, 151, 152, 153, 154, 155
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 37,
															"character": 21
														}
													]
												}
											}
										},
										{
											"id": 156,
											"name": "newToWallets",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 52,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 157,
											"name": "or",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 53,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 158,
											"name": "personalWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 54,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 159,
											"name": "receive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 55,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 160,
											"name": "receiveFundsScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 56,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 161,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 162,
															"name": "instruction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 56,
																	"character": 26
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 163,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 56,
																	"character": 47
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [162, 163]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 56,
															"character": 24
														}
													]
												}
											}
										},
										{
											"id": 164,
											"name": "recommended",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 57,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 165,
											"name": "requestTestnetFunds",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 58,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 166,
											"name": "send",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 59,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 167,
											"name": "sendFundsScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 60,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 168,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 169,
															"name": "amount",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 61,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 170,
															"name": "insufficientFunds",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 62,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 171,
															"name": "invalidAddress",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 63,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 172,
															"name": "noTokensFound",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 64,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 173,
															"name": "searchToken",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 65,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 174,
															"name": "selectTokenTitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 66,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 175,
															"name": "sendTo",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 67,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 176,
															"name": "sending",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 68,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 177,
															"name": "submitButton",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 69,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 178,
															"name": "successMessage",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 70,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 179,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 71,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 180,
															"name": "token",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 72,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 181,
															"name": "transactionFailed",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 73,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 182,
															"name": "transactionRejected",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 74,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																169, 170, 171, 172, 173, 174, 175, 176, 177,
																178, 179, 180, 181, 182
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 60,
															"character": 21
														}
													]
												}
											}
										},
										{
											"id": 183,
											"name": "signIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 76,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 184,
											"name": "signatureScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 77,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 185,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 186,
															"name": "instructionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 78,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 187,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 188,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 79,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 189,
																			"name": "signInButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 80,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 190,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 81,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [188, 189, 190]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 78,
																			"character": 25
																		}
																	]
																}
															}
														},
														{
															"id": 191,
															"name": "signingScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 83,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 192,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 193,
																			"name": "approveTransactionInSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 84,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 194,
																			"name": "failedToSignIn",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 85,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 195,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 86,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 196,
																			"name": "prompt",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 87,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 197,
																			"name": "promptForSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 88,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 198,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 89,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 199,
																			"name": "tryAgain",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 90,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				193, 194, 195, 196, 197, 198, 199
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 83,
																			"character": 21
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [186, 191]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 77,
															"character": 21
														}
													]
												}
											}
										},
										{
											"id": 200,
											"name": "smartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 93,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 201,
											"name": "switchAccount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 94,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 202,
											"name": "switchNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 95,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 203,
											"name": "switchTo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 96,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 204,
											"name": "switchingNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 97,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 205,
											"name": "transactionHistory",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 98,
													"character": 4
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 206,
											"name": "welcomeScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 99,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 207,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 208,
															"name": "defaultSubtitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 99,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 209,
															"name": "defaultTitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 99,
																	"character": 46
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [208, 209]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 99,
															"character": 19
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130,
												131, 132, 137, 138, 139, 140, 141, 156, 157, 158, 159,
												160, 164, 165, 166, 167, 183, 184, 200, 201, 202, 203,
												204, 205, 206
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 14,
											"character": 17
										}
									]
								}
							}
						},
						{
							"id": 210,
							"name": "wallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 101,
									"character": 2
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 211,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 212,
											"name": "coin98Wallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 102,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 213,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 214,
															"name": "connectionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 103,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 215,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 216,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 104,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 217,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 105,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 218,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 106,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 219,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 107,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [216, 217, 218, 219]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 103,
																			"character": 24
																		}
																	]
																}
															}
														},
														{
															"id": 220,
															"name": "getStartedLink",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 109,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 221,
															"name": "getStartedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 110,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 222,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 223,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 110,
																					"character": 26
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [223]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 110,
																			"character": 24
																		}
																	]
																}
															}
														},
														{
															"id": 224,
															"name": "scanScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 111,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 225,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 226,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 111,
																					"character": 20
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [226]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 111,
																			"character": 18
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [214, 220, 221, 224]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 102,
															"character": 18
														}
													]
												}
											}
										},
										{
											"id": 227,
											"name": "coinbaseWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 113,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 228,
											"name": "coreWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 114,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 229,
											"name": "cryptoDefiWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 115,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 230,
											"name": "embeddedWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 116,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 231,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 232,
															"name": "createPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 117,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 233,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 234,
																			"name": "confirmation",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 118,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 235,
																			"name": "failedToSetPassword",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 119,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 236,
																			"name": "inputPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 120,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 237,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 121,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 238,
																			"name": "saveInstruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 122,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 239,
																			"name": "submitButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 123,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 240,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 124,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				234, 235, 236, 237, 238, 239, 240
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 117,
																			"character": 22
																		}
																	]
																}
															}
														},
														{
															"id": 241,
															"name": "emailLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 126,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 242,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 243,
																			"name": "enterCodeSendTo",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 127,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 244,
																			"name": "enterRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 128,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 245,
																			"name": "failedToSendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 129,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 246,
																			"name": "invalidCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 130,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 247,
																			"name": "invalidCodeOrRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 131,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 248,
																			"name": "newDeviceDetected",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 132,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 249,
																			"name": "resendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 133,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 250,
																			"name": "sendingCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 134,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 251,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 135,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 252,
																			"name": "verify",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 136,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				243, 244, 245, 246, 247, 248, 249, 250,
																				251, 252
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 126,
																			"character": 24
																		}
																	]
																}
															}
														},
														{
															"id": 253,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 138,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 254,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 139,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 255,
															"name": "enterPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 140,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 256,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 257,
																			"name": "inputPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 141,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 258,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 142,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 259,
																			"name": "submitButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 143,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 260,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 144,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 261,
																			"name": "wrongPassword",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 145,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [257, 258, 259, 260, 261]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 140,
																			"character": 21
																		}
																	]
																}
															}
														},
														{
															"id": 262,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 147,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 263,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 148,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 264,
															"name": "signInWithApple",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 149,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 265,
															"name": "signInWithFacebook",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 150,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 266,
															"name": "signInWithGoogle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 151,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 267,
															"name": "socialLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 152,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 268,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 269,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 153,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 270,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 154,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 271,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 155,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 272,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 156,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [269, 270, 271, 272]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 152,
																			"character": 25
																		}
																	]
																}
															}
														},
														{
															"id": 273,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 158,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																232, 241, 253, 254, 255, 262, 263, 264, 265,
																266, 267, 273
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 116,
															"character": 20
														}
													]
												}
											}
										},
										{
											"id": 274,
											"name": "frameWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 160,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 275,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 276,
															"name": "connectionFailedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 161,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 277,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 278,
																			"name": "description",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 162,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 279,
																			"name": "downloadFrame",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 163,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 280,
																			"name": "supportLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 164,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 281,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 165,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [278, 279, 280, 281]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 161,
																			"character": 30
																		}
																	]
																}
															}
														},
														{
															"id": 282,
															"name": "connectionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 167,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 283,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 284,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 168,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 285,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 169,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 286,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 170,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 287,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 171,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [284, 285, 286, 287]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 167,
																			"character": 24
																		}
																	]
																}
															}
														},
														{
															"id": 288,
															"name": "getStartedLink",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 173,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 289,
															"name": "getStartedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 174,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 290,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 291,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 174,
																					"character": 26
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [291]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 174,
																			"character": 24
																		}
																	]
																}
															}
														},
														{
															"id": 292,
															"name": "scanScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 175,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 293,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 294,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 175,
																					"character": 20
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [294]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 175,
																			"character": 18
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [276, 282, 288, 289, 292]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 160,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 295,
											"name": "localWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 177,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 296,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 297,
															"name": "confirmPasswordLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 178,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 298,
															"name": "createScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 179,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 299,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 300,
																			"name": "connecting",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 180,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 301,
																			"name": "createNewWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 181,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 302,
																			"name": "importWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 182,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 303,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 183,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [300, 301, 302, 303]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 179,
																			"character": 20
																		}
																	]
																}
															}
														},
														{
															"id": 304,
															"name": "enterYourPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 185,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 305,
															"name": "exportScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 186,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 306,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 307,
																			"name": "description1",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 187,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 308,
																			"name": "description2",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 188,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 309,
																			"name": "download",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 189,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 310,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 190,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 311,
																			"name": "walletAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 191,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [307, 308, 309, 310, 311]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 186,
																			"character": 20
																		}
																	]
																}
															}
														},
														{
															"id": 312,
															"name": "importScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 193,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 313,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 314,
																			"name": "description1",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 194,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 315,
																			"name": "description2",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 195,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 316,
																			"name": "import",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 196,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 317,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 197,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 318,
																			"name": "uploadJSON",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 198,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 319,
																			"name": "uploadedSuccessfully",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 199,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [314, 315, 316, 317, 318, 319]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 193,
																			"character": 20
																		}
																	]
																}
															}
														},
														{
															"id": 320,
															"name": "passwordLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 201,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 321,
															"name": "reconnectScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 202,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 322,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 323,
																			"name": "continue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 203,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 324,
																			"name": "createNewWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 204,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 325,
																			"name": "savedWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 205,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 326,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 206,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [323, 324, 325, 326]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 202,
																			"character": 23
																		}
																	]
																}
															}
														},
														{
															"id": 327,
															"name": "warningScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 208,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 328,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 329,
																			"name": "backupWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 209,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 330,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 210,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 331,
																			"name": "warning",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 211,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [329, 330, 331]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 208,
																			"character": 21
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																297, 298, 304, 305, 312, 320, 321, 327
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 177,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 332,
											"name": "magicLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 214,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 333,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 334,
															"name": "countryCodeMissing",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 215,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 335,
															"name": "emailOrPhoneRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 216,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 336,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 217,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 337,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 218,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 338,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 219,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 339,
															"name": "invalidEmailOrPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 220,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 340,
															"name": "invalidPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 221,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 341,
															"name": "loginWith",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 222,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 342,
															"name": "loginWithEmailOrPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 223,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 343,
															"name": "loginWithPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 224,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 344,
															"name": "phoneRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 225,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 345,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 226,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 346,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 227,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																334, 335, 336, 337, 338, 339, 340, 341, 342,
																343, 344, 345, 346
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 214,
															"character": 15
														}
													]
												}
											}
										},
										{
											"id": 347,
											"name": "metamaskWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 229,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 348,
											"name": "okxWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 230,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 349,
											"name": "paperWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 231,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 350,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 351,
															"name": "emailLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 232,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 352,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 353,
																			"name": "enterCodeSendTo",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 233,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 354,
																			"name": "enterRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 234,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 355,
																			"name": "failedToSendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 235,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 356,
																			"name": "invalidCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 236,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 357,
																			"name": "invalidCodeOrRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 237,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 358,
																			"name": "newDeviceDetected",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 238,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 359,
																			"name": "resendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 239,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 360,
																			"name": "sendingCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 240,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 361,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 241,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 362,
																			"name": "verify",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 242,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				353, 354, 355, 356, 357, 358, 359, 360,
																				361, 362
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 232,
																			"character": 24
																		}
																	]
																}
															}
														},
														{
															"id": 363,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 244,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 364,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 245,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 365,
															"name": "googleLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 246,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 366,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 367,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 247,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 368,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 248,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 369,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 249,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 370,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 250,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [367, 368, 369, 370]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 246,
																			"character": 25
																		}
																	]
																}
															}
														},
														{
															"id": 371,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 252,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 372,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 253,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 373,
															"name": "signInWithGoogle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 254,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 374,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 255,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																351, 363, 364, 365, 371, 372, 373, 374
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 231,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 375,
											"name": "phantomWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 257,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 376,
											"name": "rabbyWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 258,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 377,
											"name": "rainbowWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 259,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 378,
											"name": "safeWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 260,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 379,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 380,
															"name": "accountDetailsScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 261,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 381,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 382,
																			"name": "connectToSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 262,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 383,
																			"name": "connecting",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 263,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 384,
																			"name": "dashboardLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 264,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 385,
																			"name": "failedToConnect",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 265,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 386,
																			"name": "failedToSwitch",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 266,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 387,
																			"name": "findSafeAddressIn",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 267,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 388,
																			"name": "invalidChainConfig",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 268,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 389,
																			"name": "mainnets",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 269,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 390,
																			"name": "network",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 270,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 391,
																			"name": "safeAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 271,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 392,
																			"name": "selectNetworkPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 272,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 393,
																			"name": "switchNetwork",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 273,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 394,
																			"name": "switchingNetwork",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 274,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 395,
																			"name": "testnets",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 275,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 396,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 276,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				382, 383, 384, 385, 386, 387, 388, 389,
																				390, 391, 392, 393, 394, 395, 396
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 261,
																			"character": 28
																		}
																	]
																}
															}
														},
														{
															"id": 397,
															"name": "connectWalletScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 278,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 398,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 399,
																			"name": "learnMoreLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 279,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 400,
																			"name": "subtitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 280,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 401,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 281,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [399, 400, 401]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 278,
																			"character": 27
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [380, 397]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 260,
															"character": 16
														}
													]
												}
											}
										},
										{
											"id": 402,
											"name": "smartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 284,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 403,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 404,
															"name": "connecting",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 285,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 405,
															"name": "failedToConnect",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 286,
																	"character": 6
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 406,
															"name": "wrongNetworkScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 287,
																	"character": 6
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 407,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 408,
																			"name": "failedToSwitch",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 288,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 409,
																			"name": "subtitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 289,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 410,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 290,
																					"character": 8
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [408, 409, 410]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 287,
																			"character": 26
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [404, 405, 406]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 284,
															"character": 17
														}
													]
												}
											}
										},
										{
											"id": 411,
											"name": "trustWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 293,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 412,
											"name": "walletConnect",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 294,
													"character": 4
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 413,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 414,
															"name": "scanInstruction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 294,
																	"character": 21
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [414]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 294,
															"character": 19
														}
													]
												}
											}
										},
										{
											"id": 415,
											"name": "zerionWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 295,
													"character": 4
												}
											],
											"type": {
												"type": "reference",
												"target": 416,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												212, 227, 228, 229, 230, 274, 295, 332, 347, 348, 349,
												375, 376, 377, 378, 402, 411, 412, 415
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 101,
											"character": 11
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [113, 210]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/types.ts",
							"line": 13,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 480,
			"name": "WelcomeScreen",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Render custom Welcome Screen in \"wide\" ConnectWallet Modal either by passing a custom React component or by passing an object with custom title, subtitle and image"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "### Custom React component\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<ConnectWallet\n welcomeScreen={() => <div style={{\n   height: '100%',\n }}>\n   ...\n </div>}\n/>\n```"
							},
							{
								"kind": "text",
								"text": "\n\n### Custom title, subtitle and image\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<ConnectWallet\n welcomeScreen={{\n   title: 'Custom Title',\n   subtitle: 'Custom Subtitle',\n   img: {\n     src: 'https://example.com/image.png',\n     width: 100,\n     height: 100,\n   }\n })\n/>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L32"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 481,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 484,
									"name": "img",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom image"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 45,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L45"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 485,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 488,
													"name": "height",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image height"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 57,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L57"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 486,
													"name": "src",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image source"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 49,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L49"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 487,
													"name": "width",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image width"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 53,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L53"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [488, 486, 487]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
													"line": 45,
													"character": 12,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L45"
												}
											]
										}
									}
								},
								{
									"id": 483,
									"name": "subtitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom subtitle"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 41,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 482,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom title"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 37,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L37"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [484, 483, 482]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L33"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 489,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
									"line": 60,
									"character": 5,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/screens/types.ts#L60"
								}
							],
							"signatures": [
								{
									"id": 490,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "React.ReactNode",
										"package": "@types/react"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 1,
			"name": "defaultTokens",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 34,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L34"
				}
			],
			"type": {
				"type": "reference",
				"target": 758,
				"name": "SupportedTokens",
				"package": "@thirdweb-dev/react"
			},
			"defaultValue": "..."
		},
		{
			"id": 2,
			"name": "defaultWallets",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defaultWallets.ts",
					"line": 10,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/defaultWallets.ts#L10"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../react-core/src/core/types/wallet.ts",
						"qualifiedName": "WalletConfig"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "any"
						}
					],
					"name": "WalletConfig",
					"package": "@thirdweb-dev/react-core"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 445,
			"name": "ConnectWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 321,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L321"
				}
			],
			"signatures": [
				{
					"id": 446,
					"name": "ConnectWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A component that allows the user to connect their wallet.\n\nit renders a button which when clicked opens a modal to allow users to connect to wallets specified in the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "'s supportedWallets prop.\n\nThis component must be descendant of "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
							"line": 321,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L321"
						}
					],
					"parameters": [
						{
							"id": 447,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 448,
								"name": "ConnectWalletProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 767,
			"name": "MediaRenderer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 379,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L379"
				}
			],
			"signatures": [
				{
					"id": 768,
					"name": "MediaRenderer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This component can be used to render any media type, including image, audio, video, and html files.\nIts convenient for rendering NFT media files, as these can be a variety of different types.\n\nThe component falls back to a external link if the media type is not supported.\n\nThe default size is 300px by 300px, but this can be changed using the "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " props."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "We can take a video file hosted on IPFS and render it using this component as follows\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  return <MediaRenderer\n    src=\"ipfs://Qmb9ZV5yznE4C4YvyJe8DVFv1LSVkebdekY6HjLVaKmHZi\"\n    alt=\"A mp4 video\"\n  />\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nYou can try switching out the "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " prop to different types of URLs and media types to explore the possibilities."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 769,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 641,
										"name": "MediaRendererProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 498,
			"name": "NetworkSelector",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 153,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L153"
				}
			],
			"signatures": [
				{
					"id": 499,
					"name": "NetworkSelector",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Renders a Network Switcher Modal that allows users to switch their wallet to a different network."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nimport { NetworkSelector } from \"@thirdweb-dev/react\";\n\nfunction Example() {\n const [open, setOpen] = useState(false);\n return (\n   <div>\n     <button onClick={() => setOpen(true)}>Open Modal</button>\n     <NetworkSelector open={open} onClose={() => setOpen(false)} />\n   </div>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 153,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L153"
						}
					],
					"parameters": [
						{
							"id": 500,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 501,
								"name": "NetworkSelectorProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 784,
			"name": "ThirdwebNftMedia",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 47,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/NftMedia.tsx#L47"
				}
			],
			"signatures": [
				{
					"id": 785,
					"name": "ThirdwebNftMedia",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This component can be used to render NFTs from the thirdweb SDK.\nIt will render the animation_url if it exists, otherwise it will render the image.\nThe default size is 300px by 300px, but this can be changed using the "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " props.\n\nProps: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ThirdwebNftMediaProps",
								"target": 773,
								"tsLinkText": ""
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia, useContract, useNFT } from \"@thirdweb-dev/react\";\nexport default function NFTCollectionRender() {\n  const { contract } = useContract(<your-contract-address>);\n  const { data: nft, isLoading } = useNFT(contract, 0);\n\n  return (\n    <div>\n      {!isLoading && nft ? (\n        <ThirdwebNftMedia metadata={nft.metadata} />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 786,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 773,
										"name": "ThirdwebNftMediaProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 611,
			"name": "ThirdwebProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 170,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L170"
				}
			],
			"signatures": [
				{
					"id": 612,
					"name": "ThirdwebProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`<ThirdwebProvider />`"
							},
							{
								"kind": "text",
								"text": " component lets you control what networks you want users to connect to,\nwhat types of wallets can connect to your app, and the settings for the [Thirdweb SDK](https://docs.thirdweb.com/typescript)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can wrap your application with the provider as follows:\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx title=\"App.jsx\"\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 170,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/thirdweb-provider.tsx#L170"
						}
					],
					"typeParameter": [
						{
							"id": 613,
							"name": "TChains",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							},
							"default": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reflection",
											"declaration": {
												"id": 614,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2313,
														"character": 37
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 615,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2370,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 616,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2413,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 617,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2463,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 618,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2512,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 619,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2545,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 620,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2585,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 621,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2615,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 622,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2665,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 623,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2702,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 624,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2751,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 625,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2786,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 626,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2826,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 627,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2855,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 628,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2900,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 629,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2935,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 630,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2967,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 631,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2996,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 632,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3020,
														"character": 4
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 633,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 635,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TChains",
												"refersToTypeParameter": true
											}
										],
										"name": "ThirdwebProviderProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 530,
			"name": "Web3Button",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 219,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L219"
				}
			],
			"signatures": [
				{
					"id": 531,
					"name": "Web3Button",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Button that executes a function on a smart contract from the connected wallet when clicked.\n\nIt ensures the following criteria before attempting to call the contract function:\n\n1. There is a connected wallet (if there is not, it renders a "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component instead.\n\n2. The connected wallet is on the correct network as specified in the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "'s "
							},
							{
								"kind": "code",
								"text": "`activeChain`"
							},
							{
								"kind": "text",
								"text": " prop. if it is not, it renders a \"switch network\" button instead.\n\nIf the action you are performing is async, make sure to return a "
							},
							{
								"kind": "code",
								"text": "`Promise`"
							},
							{
								"kind": "text",
								"text": " from the action function so that the SDK knows when the action is complete. This can be done by either using async/await or by returning a "
							},
							{
								"kind": "code",
								"text": "`Promise`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { Web3Button } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n return (\n  <div>\n    <Web3Button\n      contractAddress=\"0x...\"\n      action={(contract) => contract.erc721.transfer(\"0x...\", 1)}\n    >\n      Claim NFT\n    </Web3Button>\n  </div>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 219,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/Web3Button/index.tsx#L219"
						}
					],
					"typeParameter": [
						{
							"id": 532,
							"name": "TAction",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/components/Web3Button/index.tsx",
									"qualifiedName": "ActionFn"
								},
								"name": "ActionFn",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"parameters": [
						{
							"id": 533,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 534,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TAction",
												"refersToTypeParameter": true
											}
										],
										"name": "Web3ButtonProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 26,
			"name": "bloctoWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
					"line": 54,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L54"
				}
			],
			"signatures": [
				{
					"id": 27,
					"name": "bloctoWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for Blocto Wallet which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[bloctoWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst bloctoWalletConfig = bloctoWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(bloctoWalletConfig);\n    console.log('connected to', wallet);;\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
							"line": 54,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L54"
						}
					],
					"parameters": [
						{
							"id": 28,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
									"qualifiedName": "BloctoAdditionalOptions"
								},
								"name": "BloctoAdditionalOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/blocto.ts",
									"qualifiedName": "BloctoWallet"
								},
								"name": "BloctoWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 91,
			"name": "coin98Wallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
					"line": 20,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L20"
				}
			],
			"signatures": [
				{
					"id": 92,
					"name": "coin98Wallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
							"line": 20,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L20"
						}
					],
					"parameters": [
						{
							"id": 93,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
									"qualifiedName": "Coin98WalletOptions"
								},
								"name": "Coin98WalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/coin98.ts",
									"qualifiedName": "Coin98Wallet"
								},
								"name": "Coin98Wallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 29,
			"name": "coinbaseWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
					"line": 28,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L28"
				}
			],
			"signatures": [
				{
					"id": 30,
					"name": "coinbaseWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
							"line": 28,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L28"
						}
					],
					"parameters": [
						{
							"id": 31,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
									"qualifiedName": "CoinbaseWalletOptions"
								},
								"name": "CoinbaseWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/coinbase-wallet.ts",
									"qualifiedName": "CoinbaseWallet"
								},
								"name": "CoinbaseWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 82,
			"name": "coreWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
					"line": 23,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L23"
				}
			],
			"signatures": [
				{
					"id": 83,
					"name": "coreWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
							"line": 23,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L23"
						}
					],
					"parameters": [
						{
							"id": 84,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
									"qualifiedName": "CoreWalletOptions"
								},
								"name": "CoreWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/core-wallet.ts",
									"qualifiedName": "CoreWallet"
								},
								"name": "CoreWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 85,
			"name": "cryptoDefiWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
					"line": 23,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L23"
				}
			],
			"signatures": [
				{
					"id": 86,
					"name": "cryptoDefiWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
							"line": 23,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L23"
						}
					],
					"parameters": [
						{
							"id": 87,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
									"qualifiedName": "CryptoDefiWalletOptions"
								},
								"name": "CryptoDefiWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/crypto-defi-wallet.ts",
									"qualifiedName": "CryptoDefiWallet"
								},
								"name": "CryptoDefiWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 94,
			"name": "darkTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 176,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L176"
				}
			],
			"signatures": [
				{
					"id": 95,
					"name": "darkTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a custom dark theme object by using the default dark theme as a base and applying overrides."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst customTheme = darkTheme({\n colors: {\n  modalBg: \"red\",\n }\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 176,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L176"
						}
					],
					"parameters": [
						{
							"id": 96,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 101,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 100,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 32,
			"name": "embeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
					"line": 32,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L32"
				}
			],
			"signatures": [
				{
					"id": 33,
					"name": "embeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
							"line": 32,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L32"
						}
					],
					"parameters": [
						{
							"id": 34,
							"name": "_config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
									"qualifiedName": "EmbeddedWalletConfig"
								},
								"name": "EmbeddedWalletConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
									"qualifiedName": "EmbeddedWallet"
								},
								"name": "EmbeddedWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 102,
			"name": "en",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/en.ts",
					"line": 346,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/locales/en.ts#L346"
				}
			],
			"signatures": [
				{
					"id": 103,
					"name": "en",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default English locale object to be set on "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default English Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst english = en(); // default English locale object\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override English Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst english = en({\n connectWallet: {\n   signIn: \"Sign in!\"\n }\n})\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/en.ts",
							"line": 346,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/locales/en.ts#L346"
						}
					],
					"parameters": [
						{
							"id": 104,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 111,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 111,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 108,
			"name": "es",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/es.ts",
					"line": 354,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/locales/es.ts#L354"
				}
			],
			"signatures": [
				{
					"id": 109,
					"name": "es",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default Spanish locale object to be set on "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default Spanish Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst spanish = es(); // default English locale object\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override Spanish Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst spanish = es({\n connectWallet: {\n   signIn: \"Iniciar sesión\"\n }\n})\n\n<ThirdwebProvider locale={spanish}> <App /> </ThirdwebProvider>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/es.ts",
							"line": 354,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/locales/es.ts#L354"
						}
					],
					"parameters": [
						{
							"id": 110,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 111,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 111,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 35,
			"name": "frameWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
					"line": 12,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L12"
				}
			],
			"signatures": [
				{
					"id": 36,
					"name": "frameWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
							"line": 12,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L12"
						}
					],
					"parameters": [
						{
							"id": 37,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
									"qualifiedName": "FrameConfig"
								},
								"name": "FrameConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/frame.ts",
									"qualifiedName": "FrameWallet"
								},
								"name": "FrameWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 105,
			"name": "ja",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/ja.ts",
					"line": 348,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/locales/ja.ts#L348"
				}
			],
			"signatures": [
				{
					"id": 106,
					"name": "ja",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default Japanese locale object to be set on "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default Japanese Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst japanese = ja(); // default English locale object\n\n<ThirdwebProvider locale={japanese}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override Japanese Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst japanese = ja({\n connectWallet: {\n   signIn: \"サインイン\"\n }\n})\n\n<ThirdwebProvider locale={japanese}> <App /> </ThirdwebProvider>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/ja.ts",
							"line": 348,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/locales/ja.ts#L348"
						}
					],
					"parameters": [
						{
							"id": 107,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 111,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 111,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 97,
			"name": "lightTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 157,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L157"
				}
			],
			"signatures": [
				{
					"id": 98,
					"name": "lightTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a custom light theme object by using the default dark theme as a base and applying overrides."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst customTheme = lightTheme({\n colors: {\n  modalBg: \"red\",\n }\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 157,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/design-system/index.ts#L157"
						}
					],
					"parameters": [
						{
							"id": 99,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 101,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 100,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 38,
			"name": "localWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
					"line": 11,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L11"
				}
			],
			"signatures": [
				{
					"id": 39,
					"name": "localWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
							"line": 11,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L11"
						}
					],
					"parameters": [
						{
							"id": 40,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
									"qualifiedName": "LocalWalletConfigOptions"
								},
								"name": "LocalWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
							"qualifiedName": "LocalWalletConfig"
						},
						"name": "LocalWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 41,
			"name": "magicLink",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
					"line": 46,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/magic/magicLink.tsx#L46"
				}
			],
			"signatures": [
				{
					"id": 42,
					"name": "magicLink",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
							"line": 46,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/magic/magicLink.tsx#L46"
						}
					],
					"parameters": [
						{
							"id": 43,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../wallets/src/evm/connectors/magic/types.ts",
											"qualifiedName": "MagicAuthOptions"
										},
										"name": "MagicAuthOptions",
										"package": "@thirdweb-dev/wallets"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 44,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 45,
													"name": "recommended",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
															"line": 51,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/magic/magicLink.tsx#L51"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [45]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
													"line": 47,
													"character": 39,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/magic/magicLink.tsx#L47"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/magic/types.ts",
							"qualifiedName": "ConfiguredMagicLinkWallet"
						},
						"name": "ConfiguredMagicLinkWallet",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 46,
			"name": "metamaskWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
					"line": 23,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L23"
				}
			],
			"signatures": [
				{
					"id": 47,
					"name": "metamaskWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
							"line": 23,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L23"
						}
					],
					"parameters": [
						{
							"id": 48,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
									"qualifiedName": "MetamaskWalletOptions"
								},
								"name": "MetamaskWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/metamask.ts",
									"qualifiedName": "MetaMaskWallet"
								},
								"name": "MetaMaskWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 79,
			"name": "okxWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
					"line": 20,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L20"
				}
			],
			"signatures": [
				{
					"id": 80,
					"name": "okxWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
							"line": 20,
							"character": 25,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L20"
						}
					],
					"parameters": [
						{
							"id": 81,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
									"qualifiedName": "OKXWalletOptions"
								},
								"name": "OKXWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/okx.ts",
									"qualifiedName": "OKXWallet"
								},
								"name": "OKXWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 49,
			"name": "paperWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/paper/paperWallet.tsx",
					"line": 32,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/paper/paperWallet.tsx#L32"
				}
			],
			"signatures": [
				{
					"id": 50,
					"name": "paperWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Paper Wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "The WalletConfig<PaperWallet> object"
									}
								]
							},
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "We have deprecated PaperWallet in favor of our "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "EmbeddedWallet"
									},
									{
										"kind": "text",
										"text": " which adds support for more sign in methods.\nLearn more here: https://portal.thirdweb.com/embedded-wallet"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/paper/paperWallet.tsx",
							"line": 32,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/paper/paperWallet.tsx#L32"
						}
					],
					"parameters": [
						{
							"id": 51,
							"name": "_config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Options available to create a paper wallet"
									}
								]
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/paper/types.ts",
									"qualifiedName": "PaperConfig"
								},
								"name": "PaperConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/paper-wallet.ts",
									"qualifiedName": "PaperWallet"
								},
								"name": "PaperWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 52,
			"name": "phantomWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
					"line": 15,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L15"
				}
			],
			"signatures": [
				{
					"id": 53,
					"name": "phantomWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
							"line": 15,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L15"
						}
					],
					"parameters": [
						{
							"id": 54,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
									"qualifiedName": "PhantomWalletOptions"
								},
								"name": "PhantomWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/phantom.ts",
									"qualifiedName": "PhantomWallet"
								},
								"name": "PhantomWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 88,
			"name": "rabbyWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
					"line": 20,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L20"
				}
			],
			"signatures": [
				{
					"id": 89,
					"name": "rabbyWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
							"line": 20,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L20"
						}
					],
					"parameters": [
						{
							"id": 90,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
									"qualifiedName": "RabbyWalletOptions"
								},
								"name": "RabbyWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/rabby.ts",
									"qualifiedName": "RabbyWallet"
								},
								"name": "RabbyWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 55,
			"name": "rainbowWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
					"line": 25,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L25"
				}
			],
			"signatures": [
				{
					"id": 56,
					"name": "rainbowWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
							"line": 25,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L25"
						}
					],
					"parameters": [
						{
							"id": 57,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
									"qualifiedName": "RainbowWalletOptions"
								},
								"name": "RainbowWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/rainbow-wallet.ts",
									"qualifiedName": "RainbowWallet"
								},
								"name": "RainbowWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 58,
			"name": "safeWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
					"line": 16,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L16"
				}
			],
			"signatures": [
				{
					"id": 59,
					"name": "safeWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
							"line": 16,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L16"
						}
					],
					"parameters": [
						{
							"id": 60,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/wallet/wallets/safe/types.ts",
											"qualifiedName": "SafeWalletConfigOptions"
										},
										"name": "SafeWalletConfigOptions",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 61,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 62,
													"name": "recommended",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
															"line": 21,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L21"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [62]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
													"line": 17,
													"character": 37,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L17"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/safe/types.ts",
							"qualifiedName": "SafeWalletConfig"
						},
						"name": "SafeWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 63,
			"name": "smartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
					"line": 12,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L12"
				}
			],
			"signatures": [
				{
					"id": 64,
					"name": "smartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
							"line": 12,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L12"
						}
					],
					"parameters": [
						{
							"id": 65,
							"name": "wallet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletConfig"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 66,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
									"qualifiedName": "SmartWalletConfigOptions"
								},
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
							"qualifiedName": "SmartWalletConfig"
						},
						"name": "SmartWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 67,
			"name": "trustWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
					"line": 22,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L22"
				}
			],
			"signatures": [
				{
					"id": 68,
					"name": "trustWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
							"line": 22,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L22"
						}
					],
					"parameters": [
						{
							"id": 69,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
									"qualifiedName": "TrustWalletOptions"
								},
								"name": "TrustWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/trust.ts",
									"qualifiedName": "TrustWallet"
								},
								"name": "TrustWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 705,
			"name": "useBloctoWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 706,
					"name": "useBloctoWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 707,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 708,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
											"line": 8,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
										}
									],
									"parameters": [
										{
											"id": 709,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 710,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 711,
																	"name": "chainId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
																			"line": 8,
																			"character": 23,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [711]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
																	"line": 8,
																	"character": 21,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
															"qualifiedName": "BloctoAdditionalOptions"
														},
														"name": "BloctoAdditionalOptions",
														"package": "@thirdweb-dev/react"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/blocto.ts",
													"qualifiedName": "BloctoWallet"
												},
												"name": "BloctoWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 691,
			"name": "useCoinbaseWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 692,
					"name": "useCoinbaseWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 693,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 694,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 695,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 696,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 697,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [697]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/coinbase-wallet.ts",
													"qualifiedName": "CoinbaseWallet"
												},
												"name": "CoinbaseWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 712,
			"name": "useEmbeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 713,
					"name": "useEmbeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to authenticate and connect to an embedded wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a function to connect to an embedded wallet"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L26"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 714,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 715,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 78,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L78"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 716,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 34,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L34"
												}
											],
											"signatures": [
												{
													"id": 717,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 34,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L34"
														}
													],
													"parameters": [
														{
															"id": 718,
															"name": "authParams",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/types.ts",
																	"qualifiedName": "AuthParams"
																},
																"name": "AuthParams",
																"package": "@thirdweb-dev/wallets"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
																	"qualifiedName": "EmbeddedWallet"
																},
																"name": "EmbeddedWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 719,
									"name": "sendVerificationEmail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 79,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L79"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 720,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
												}
											],
											"signatures": [
												{
													"id": 721,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 62,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
														}
													],
													"parameters": [
														{
															"id": 722,
															"name": "__namedParameters",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 723,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 724,
																			"name": "email",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																					"line": 62,
																					"character": 24,
																					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [724]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																			"line": 62,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
																	"qualifiedName": "SendEmailOtpReturnType"
																},
																"name": "SendEmailOtpReturnType",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [715, 719]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
									"line": 77,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L77"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 727,
			"name": "useEmbeddedWalletSendVerificationEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 728,
					"name": "useEmbeddedWalletSendVerificationEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
							"line": 5,
							"character": 54,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 729,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 730,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
											"line": 9,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 731,
											"name": "email",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
													"qualifiedName": "SendEmailOtpReturnType"
												},
												"name": "SendEmailOtpReturnType",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 725,
			"name": "useEmbeddedWalletUserEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
					"line": 83,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L83"
				}
			],
			"signatures": [
				{
					"id": 726,
					"name": "useEmbeddedWalletUserEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
							"line": 83,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 698,
			"name": "useFrameWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useFrame.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 699,
					"name": "useFrameWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useFrame.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 700,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 701,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 702,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 703,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 704,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [704]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/frame.ts",
													"qualifiedName": "FrameWallet"
												},
												"name": "FrameWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 431,
			"name": "useIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 80,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L80"
				}
			],
			"signatures": [
				{
					"id": 432,
					"name": "useIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 80,
							"character": 36,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L80"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 440,
			"name": "useMagic",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
					"line": 6,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/magic/useMagic.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 441,
					"name": "useMagic",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
							"line": 6,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/magic/useMagic.ts#L6"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 442,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/magic/useMagic.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 443,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
											"line": 9,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/magic/useMagic.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 444,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/magic.ts",
													"qualifiedName": "MagicLink"
												},
												"name": "MagicLink",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 684,
			"name": "useMetamask",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useMetamask.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 685,
					"name": "useMetamask",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useMetamask.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 686,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 687,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 688,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 689,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 690,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [690]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/metamask.ts",
													"qualifiedName": "MetaMaskWallet"
												},
												"name": "MetaMaskWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 734,
			"name": "usePaperWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
					"line": 19,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
				}
			],
			"signatures": [
				{
					"id": 735,
					"name": "usePaperWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "We have deprecated "
									},
									{
										"kind": "code",
										"text": "`PaperWallet`"
									},
									{
										"kind": "text",
										"text": " in favor of our "
									},
									{
										"kind": "code",
										"text": "`EmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " which adds support for more sign in methods. use the "
									},
									{
										"kind": "code",
										"text": "`useEmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 736,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
									"line": 22,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
								}
							],
							"signatures": [
								{
									"id": 737,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
											"line": 22,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
										}
									],
									"parameters": [
										{
											"id": 738,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 739,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 740,
																	"name": "chainId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																			"line": 22,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 741,
																	"name": "email",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																			"line": 22,
																			"character": 40,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [740, 741]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																	"line": 22,
																	"character": 20,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
															"qualifiedName": "PaperConfig"
														},
														"name": "PaperConfig",
														"package": "@thirdweb-dev/react"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/paper-wallet.ts",
													"qualifiedName": "PaperWallet"
												},
												"name": "PaperWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 732,
			"name": "usePaperWalletUserEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
					"line": 38,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L38"
				}
			],
			"signatures": [
				{
					"id": 733,
					"name": "usePaperWalletUserEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "We have deprecated "
									},
									{
										"kind": "code",
										"text": "`PaperWallet`"
									},
									{
										"kind": "text",
										"text": " in favor of our "
									},
									{
										"kind": "code",
										"text": "`EmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " which adds support for more sign in methods. use the "
									},
									{
										"kind": "code",
										"text": "`useEmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
							"line": 38,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/usePaper.ts#L38"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 670,
			"name": "useRainbowWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 671,
					"name": "useRainbowWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 672,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 673,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 674,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 675,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 676,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [676]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/rainbow-wallet.ts",
													"qualifiedName": "RainbowWallet"
												},
												"name": "RainbowWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 759,
			"name": "useResolvedMediaType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 529,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L529"
				}
			],
			"signatures": [
				{
					"id": 760,
					"name": "useResolvedMediaType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the fully resolved url + mime type of the media"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Usage with fully formed url:\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"https://example.com/video.mp4\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nUsage with ipfs cid:\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"ipfs://QmWATWQ7fVPP2EFGu71UkfnqhYXDYH566qy47CnJDgvsd\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 529,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L529"
						}
					],
					"parameters": [
						{
							"id": 761,
							"name": "uri",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the uri to resolve (can be a url or a ipfs://\\<cid\\>)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 762,
							"name": "mimeType",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 763,
							"name": "gatewayUrl",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 764,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 766,
									"name": "mimeType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 560,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L560"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": "resolvedMimType.data"
								},
								{
									"id": 765,
									"name": "url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 559,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L559"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "resolvedUrl"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [766, 765]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
									"line": 558,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/components/MediaRenderer.tsx#L558"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 435,
			"name": "useSafe",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/gnosis/useSafe.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 436,
					"name": "useSafe",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/gnosis/useSafe.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 437,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/gnosis/useSafe.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 438,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
											"line": 8,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/connectors/gnosis/useSafe.ts#L8"
										}
									],
									"parameters": [
										{
											"id": 439,
											"name": "connectProps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/connectors/safe/types.ts",
													"qualifiedName": "SafeConnectionArgs"
												},
												"name": "SafeConnectionArgs",
												"package": "@thirdweb-dev/wallets"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/safe.ts",
													"qualifiedName": "SafeWallet"
												},
												"name": "SafeWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 433,
			"name": "useSetIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 84,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L84"
				}
			],
			"signatures": [
				{
					"id": 434,
					"name": "useSetIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 84,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
							"qualifiedName": "BoolSetter"
						},
						"name": "BoolSetter",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 3,
			"name": "useSmartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 4,
					"name": "useSmartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 5,
							"name": "W",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletInstance"
								},
								"name": "WalletInstance",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 6,
							"name": "personalWallet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletConfig"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "W",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 7,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
									"qualifiedName": "SmartWalletConfigOptions"
								},
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 8,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 9,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 91,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L91"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 10,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 41,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
												}
											],
											"signatures": [
												{
													"id": 11,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 41,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
														}
													],
													"parameters": [
														{
															"id": 12,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 13,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 14,
																			"name": "connectPersonalWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 42,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 15,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																							"line": 42,
																							"character": 30,
																							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																						}
																					],
																					"signatures": [
																						{
																							"id": 16,
																							"name": "__type",
																							"variant": "signature",
																							"kind": 4096,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																									"line": 42,
																									"character": 30,
																									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																								}
																							],
																							"parameters": [
																								{
																									"id": 17,
																									"name": "wallet",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "reference",
																										"target": -1,
																										"name": "W",
																										"refersToTypeParameter": true
																									}
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Promise"
																								},
																								"typeArguments": [
																									{
																										"type": "intrinsic",
																										"name": "void"
																									}
																								],
																								"name": "Promise",
																								"package": "typescript"
																							}
																						}
																					]
																				}
																			}
																		},
																		{
																			"id": 18,
																			"name": "connectionArgs",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 43,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L43"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Omit"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../wallets/src/evm/connectors/smart-wallet/types.ts",
																							"qualifiedName": "SmartWalletConnectionArgs"
																						},
																						"name": "SmartWalletConnectionArgs",
																						"package": "@thirdweb-dev/wallets"
																					},
																					{
																						"type": "literal",
																						"value": "personalWallet"
																					}
																				],
																				"name": "Omit",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [14, 18]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 41,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/smart-wallet.ts",
																	"qualifiedName": "SmartWallet"
																},
																"name": "SmartWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 19,
									"name": "predictAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 92,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L92"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 20,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
												}
											],
											"signatures": [
												{
													"id": 21,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 29,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
														}
													],
													"parameters": [
														{
															"id": 22,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 23,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 25,
																			"name": "data",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 29,
																					"character": 50,
																					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/index.ts",
																					"qualifiedName": "BytesLike"
																				},
																				"name": "BytesLike",
																				"package": "@ethersproject/bytes"
																			}
																		},
																		{
																			"id": 24,
																			"name": "personalWalletAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 29,
																					"character": 19,
																					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [25, 24]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 29,
																			"character": 17,
																			"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [9, 19]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
									"line": 90,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L90"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 677,
			"name": "useTrustWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 678,
					"name": "useTrustWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 679,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 680,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 681,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 682,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 683,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [683]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/trust.ts",
													"qualifiedName": "TrustWallet"
												},
												"name": "TrustWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 742,
			"name": "useWalletConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L21"
				}
			],
			"signatures": [
				{
					"id": 743,
					"name": "useWalletConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L21"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 744,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
									"line": 24,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 745,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
											"line": 24,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L24"
										}
									],
									"parameters": [
										{
											"id": 746,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 747,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 748,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 25,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L25"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 749,
															"name": "projectId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 26,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L26"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 750,
															"name": "qrModalOptions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 27,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L27"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/dist/declarations/src/evm/connectors/wallet-connect/qrModalOptions.d.ts",
																	"qualifiedName": "QRModalOptions"
																},
																"name": "QRModalOptions",
																"package": "@thirdweb-dev/wallets"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [748, 749, 750]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
															"line": 24,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L24"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
													"qualifiedName": "WalletConnect"
												},
												"name": "WalletConnect",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 751,
			"name": "useWalletConnectV1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
					"line": 8,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
				}
			],
			"signatures": [
				{
					"id": 752,
					"name": "useWalletConnectV1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use the "
									},
									{
										"kind": "code",
										"text": "`useWalletConnect`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
							"line": 8,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 753,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
									"line": 11,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
								}
							],
							"signatures": [
								{
									"id": 754,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
											"line": 11,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
										}
									],
									"parameters": [
										{
											"id": 755,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 756,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 757,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 11,
																	"character": 23,
																	"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [757]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
															"line": 11,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
													"qualifiedName": "WalletConnect"
												},
												"name": "WalletConnect",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 70,
			"name": "walletConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
					"line": 32,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L32"
				}
			],
			"signatures": [
				{
					"id": 71,
					"name": "walletConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 32,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L32"
						}
					],
					"parameters": [
						{
							"id": 72,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
									"qualifiedName": "walletConnectConfig"
								},
								"name": "walletConnectConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WalletConnect"
								},
								"name": "WalletConnect",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 73,
			"name": "walletConnectV1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnectV1.tsx",
					"line": 9,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/walletConnectV1.tsx#L9"
				}
			],
			"signatures": [
				{
					"id": 74,
					"name": "walletConnectV1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`walletConnect`"
									},
									{
										"kind": "text",
										"text": " instead\n\nThe WalletConnect v1.0 protocol has been shut down and no longer works.\nTo avoid breaking change, "
									},
									{
										"kind": "code",
										"text": "`walletConnectV1`"
									},
									{
										"kind": "text",
										"text": " is still available but is an alias of "
									},
									{
										"kind": "code",
										"text": "`walletConnect`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 32,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L32"
						}
					],
					"parameters": [
						{
							"id": 75,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
									"qualifiedName": "walletConnectConfig"
								},
								"name": "walletConnectConfig",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WalletConnect"
								},
								"name": "WalletConnect",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 76,
			"name": "zerionWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
					"line": 22,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L22"
				}
			],
			"signatures": [
				{
					"id": 77,
					"name": "zerionWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
							"line": 22,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/0fbd3c6f3/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L22"
						}
					],
					"parameters": [
						{
							"id": 78,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
									"qualifiedName": "ZerionkWalletOptions"
								},
								"name": "ZerionkWalletOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/zerion.ts",
									"qualifiedName": "ZerionWallet"
								},
								"name": "ZerionWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [641, 770, 654, 773, 635, 534]
		},
		{
			"title": "Type Aliases",
			"children": [448, 634, 416, 519, 501, 758, 100, 101, 111, 480]
		},
		{
			"title": "Variables",
			"children": [1, 2]
		},
		{
			"title": "Functions",
			"children": [
				445, 767, 498, 784, 611, 530, 26, 91, 29, 82, 85, 94, 32, 102, 108, 35,
				105, 97, 38, 41, 46, 79, 49, 52, 88, 55, 58, 63, 67, 705, 691, 712, 727,
				725, 698, 431, 440, 684, 734, 732, 670, 759, 435, 433, 3, 677, 742, 751,
				70, 73, 76
			]
		}
	],
	"packageName": "@thirdweb-dev/react",
	"readme": [
		{
			"kind": "text",
			"text": "<p align=\"center\">\n<br />\n<a href=\"https://thirdweb.com\"><img src=\"https://github.com/thirdweb-dev/js/blob/main/packages/sdk/logo.svg?raw=true\" width=\"200\" alt=\"\"/></a>\n<br />\n</p>\n<h1 align=\"center\">thirdweb React SDK</h1>\n<p align=\"center\">\n<a href=\"https://www.npmjs.com/package/@thirdweb-dev/react\"><img src=\"https://img.shields.io/npm/v/@thirdweb-dev/react?color=red&label=npm&logo=npm\" alt=\"npm version\"/></a>\n<a href=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml\"><img alt=\"Build Status\" src=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml/badge.svg\"/></a>\n<a href=\"https://discord.gg/thirdweb\"><img alt=\"Join our Discord!\" src=\"https://img.shields.io/discord/834227967404146718.svg?color=7289da&label=discord&logo=discord&style=flat\"/></a>\n\n</p>\n<p align=\"center\"><strong>Ultimate collection of React hooks for your web3 apps</strong></p>\n<br />\n\n<br />\n\n## Installation\n\nThe easiest way to get started with the React SDK is to use the CLI:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpx thirdweb create --app\n```"
		},
		{
			"kind": "text",
			"text": "\n\nAlternatively, you can install the SDK into your existing project using npm or yarn:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpm install @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nyarn add @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Getting Started\n\nOur SDK uses a [Provider Pattern](https://flexiple.com/react/provider-pattern-with-react-context-api/); meaning any component within the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " will have access to the SDK. If you use the CLI to initialize your project, this is already set up for you.\n\nLet's take a look at a typical setup:\n\n<br />\n\n### Configure the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": "\n\nSpecify the network your smart contracts are deployed to in the "
		},
		{
			"kind": "code",
			"text": "`desiredChainId`"
		},
		{
			"kind": "text",
			"text": " prop and wrap your application like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider desiredChainId={ChainId.Mainnet}>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nBelow are examples of where to set this up in your application:\n\n<p>\n  <a href=\"https://github.com/thirdweb-example/cra-javascript-starter/blob/main/src/index.js\">Create React App</a> •\n  <a href=\"https://github.com/thirdweb-example/next-javascript-starter/blob/main/pages/_app.js\">Next.js</a> •\n  <a href=\"https://github.com/thirdweb-example/vite-javascript-starter/blob/main/src/main.jsx\">Vite</a>\n</p>\n\n<br />\n\n### Connect to a User's Wallet\n\nNow the provider is set up, we can use all of the hooks and UI components available in the SDK, such as the [ConnectWallet](https://portal.thirdweb.com/ui-components/connectwalletbutton) component.\n\nOnce the user has connected their wallet, all the calls we make to interact with contracts using the SDK will be on behalf of the user.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"ConnectMetamaskButton.jsx\"\nimport { ConnectWallet, useAddress } from \"@thirdweb-dev/react\";\n\nexport const YourApp = () => {\n  const address = useAddress();\n  return (\n    <div>\n      <ConnectWallet />\n    </div>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ConnectWallet`"
		},
		{
			"kind": "text",
			"text": " component handles everything for us, including switching networks, accounts, displaying balances and more.\n\nWe can then get the connected address using the "
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": " hook anywhere in the app.\n\n<br/>\n\n### Interact With Contracts\n\nConnect to your smart contract using the ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/getting-a-contract#connect-to-a-contract)\nhook like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n\n  // Now you can use the contract in the rest of the component!\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can then use ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) and ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) to read data and write transactions to the contract.\n\nYou pass the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " object returned from "
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": " to these hooks as the first parameter and the name of the function (or view/mapping, etc.) on your smart contract as the second parameter. If your function requires parameters, you can pass them as additional arguments.\n\nFor example, we can read the "
		},
		{
			"kind": "code",
			"text": "`name`"
		},
		{
			"kind": "text",
			"text": " of our contract like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useContractRead,\n  useContractWrite,\n} from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: name, isLoading: loadingName } = useContractRead(\n    contract,\n    \"name\", // The name of the view/mapping/variable on your contract\n  );\n  const { mutate: setName, isLoading: settingName } = useContractWrite(\n    contract,\n    \"setName\", // The name of the function on your contract\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### Using Extensions\n\nEach [extension](https://portal.thirdweb.com/extensions) you implement in your smart contract unlocks new functionality in the SDK.\n\nThese hooks make it easy to interact with your smart contracts by implementing the complex logic for you under the hood.\n\nFor example, if your smart contract implements [ERC721Supply](https://portal.thirdweb.com/solidity/extensions/erc721supply), you unlock the ability to [view all NFTs](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721supply#get-all-minted-nfts) on that contract using the SDK; which fetches all of your NFT metadata and the current owner of each NFT in parallel. In the React SDK, that is available using "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nIf we want to mint an NFT and our contract implements [ERC721Mintable](https://portal.thirdweb.com/solidity/extensions/erc721mintable), we can use the ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721mintable) hook to mint an NFT from the connected wallet; handling all of the logic of uploading and pinning the metadata to IPFS for us behind the scenes.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs, useMintNFT } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n  const { mutate: mintNFT, isLoading: isMintingNFT } = useMintNFT(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### UI Components\n\nThe SDK provides many UI components to help you build your application.\n\nFor example, we can render each of the NFTs using the ["
		},
		{
			"kind": "code",
			"text": "`NFT Media Renderer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/nft-renderer)\ncomponent, making use of the loading state from "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract, useNFTs, ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      <h2>My NFTs</h2>\n      {isReadingNfts ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {nfts.map((nft) => (\n            <ThirdwebNftMedia\n              key={nft.metadata.id}\n              metadata={nft.metadata}\n              height={200}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe ["
		},
		{
			"kind": "code",
			"text": "`Web3Button`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/web3button) component ensures the user has connected their wallet and is currently configured to the same network as your smart contract before calling the function. It also has access to the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " directly, allowing you to perform any action on your smart contract when the button is clicked.\n\nFor example, we can mint an NFT like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useNFTs,\n  ThirdwebNftMedia,\n  Web3Button,\n} from \"@thirdweb-dev/react\";\n\nconst contractAddress = \"<CONTRACT_ADDRESS>\";\nexport default function Home() {\n  const { contract } = useContract(contractAddress);\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      {/* ... Existing Display Logic here ... */}\n\n      <Web3Button\n        contractAddress={contractAddress}\n        action={(contract) =>\n          contract.erc721.mint({\n            name: \"Hello world!\",\n            image:\n              // You can use a file or URL here!\n              \"ipfs://QmZbovNXznTHpYn2oqgCFQYP4ZCpKDquenv5rFCX8irseo/0.png\",\n          })\n        }\n      >\n        Mint NFT\n      </Web3Button>\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Advanced Configuration\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " offers a number of configuration options to control the behavior of the React and Typescript SDK.\n\nThese are all the configuration options of the "
		},
		{
			"kind": "code",
			"text": "`<ThirdwebProvider />`"
		},
		{
			"kind": "text",
			"text": ".\nWe provide defaults for all of these, but you customize them to suit your needs.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, IpfsStorage, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst KitchenSinkExample = () => {\n  return (\n    <ThirdwebProvider\n      desiredChainId={ChainId.Mainnet}\n      chainRpc={{ [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\" }}\n      dAppMeta={{\n        name: \"Example App\",\n        description: \"This is an example app\",\n        isDarkMode: false,\n        logoUrl: \"https://example.com/logo.png\",\n        url: \"https://example.com\",\n      }}\n      storageInterface={new IpfsStorage(\"https://your.ipfs.host.com\")}\n      supportedChains={[ChainId.Mainnet]}\n      walletConnectors={[\n        \"walletConnect\",\n        { name: \"injected\", options: { shimDisconnect: false } },\n        {\n          name: \"walletLink\",\n          options: {\n            appName: \"Example App\",\n          },\n        },\n        {\n          name: \"magic\",\n          options: {\n            apiKey: \"your-magic-api-key\",\n            rpcUrls: {\n              [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\",\n            },\n          },\n        },\n      ]}\n      sdkOptions={{\n        gasSettings: { maxPriceInGwei: 500, speed: \"fast\" },\n        readonlySettings: {\n          chainId: ChainId.Mainnet,\n          rpcUrl: \"https://mainnet.infura.io/v3\",\n        },\n        gasless: {\n          openzeppelin: {\n            relayerUrl: \"your-relayer-url\",\n          },\n        },\n      }}\n    >\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Available hooks\n\n### Main hooks\n\n| Hook                                                                                 | Description                                                                |\n| ------------------------------------------------------------------------------------ | -------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSDK`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesdk)                           | Access the instance of the thirdweb SDK created by the ThirdwebProvider.   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontract)                 | Use this resolve a contract address to a smart contract instance.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractwrite)       | Use this to get data from a contract read-function call.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractread)         | Use this to get a function to make a write call to your contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractEvents`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractevents)     | Use this to get the contract metadata for a (built-in or custom) contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractMetadata`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractmetadata) | Use this to get the contract metadata for a (built-in or custom) contract. |\n\n### Wallet connection\n\n| Hook                                                                             | Description                                                 |\n| -------------------------------------------------------------------------------- | ----------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useaddress)               | Hook for accessing the address of the connected wallet.     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMetamask`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemetamask)             | Hook for connecting to a Metamask wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWalletConnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewalletconnect)   | Hook for connecting to a mobile wallet with Wallet Connect. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCoinbaseWallet`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecoinbasewallet) | Hook for connecting to a Coinbase wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMagic`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemagic)                   | Hook for connecting to an email wallet using magic link.    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGnosis`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegnosis)                 | Hook for connecting to a Gnosis Safe.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDisconnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedisconnect)         | Hook for disconnecting the currently connected wallet.      |\n\n### Network connection\n\n| Hook                                                                               | Description                                                                                                                                  |\n| ---------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useChainId`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usechainid)                 | Hook for accessing the chain ID of the network the current wallet is connected to                                                            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetwork`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetwork)                 | Hook for getting metadata about the network the current wallet is connected to and switching networks.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetworkMismatch`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetworkmismatch) | Hook for checking whether the connected wallet is on the correct network specified by the desiredChainId passed to the <ThirdwebProvider />. |\n\n### NFT\n\n| Hook                                                                                             | Description                                                                         |\n| ------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenft)                                       | Use this to get an individual NFT token of your NFTContract.                        |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenfts)                                     | Use this to get a list of NFT tokens of your NFTContract.                           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCirculatingSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcirculatingsupply) | Use this to get a the total (minted) supply of your NFTContract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useOwnedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useownednfts)                           | Use this to get a the owned NFTs for a specific Erc721OrErc1155 and wallet address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenftbalance)                         | Use this to get a the total balance of a NFTContract and wallet address.            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcount)                         | Use this to get the total count of NFT tokens of your NFTContract.                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnft)                               | Use this to mint a new NFT on your Erc721OrErc1155.                                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnftsupply)                   | Use this mint extra supply on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfernft)                       | Use this to transfer tokens on your NFTContract.                                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAirdropNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useairdropnft)                         | Use this to airdrop tokens on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburnnft)                               | Use this to burn an NFT on your Erc721OrErc1155.                                    |\n\n### Token\n\n| Hook                                                                                     | Description                                                        |\n| ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokensupply)               | Use this to get a the total supply of your contract.               |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokenbalance)             | Use this to get the balance of your contract for a given address.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenDecimals`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokendecimals)           | Use this to get the decimals of your contract for a given address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useminttoken)                   | Use this to mint new tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimtoken)                 | Use this to claim tokens from your contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfertoken)           | Use this to transfer tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferBatchToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransferbatchtoken) | Use this to transfer batch tokens on your contract.                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburntoken)                   | Use this to burn tokens on your contract.                          |\n\n### Marketplace\n\n| Hook                                                                                         | Description                                                                               |\n| -------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselisting)                           | Use this to get a specific listing from the marketplace.                                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistings)                         | Use this to get a list all listings from your marketplace contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListingsCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistingscount)               | Use this to get a count of all listings on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactivelistings)             | Use this to get a list active listings from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWinningBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewinningbid)                     | Use this to get a the winning bid for an auction listing from your marketplace contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAuctionWinner`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useauctionwinner)               | Use this to get the winner of an auction listing from your marketplace contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBidBuffer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebidbuffer)                       | Use this to get the buffer in basis points between offers from your marketplace contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreatedirectlisting)   | Use this to create a new Direct Listing on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateAuctionListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreateauctionlisting) | Use this to create a new Auction Listing on your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCancelListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecancellisting)               | Use this to cancel a listing on your marketplace contract.                                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMakeBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemakebid)                           | Use this to place a bid on an auction listing from your marketplace contract.             |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyNow`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebuynow)                             | Use this to buy out an auction listing from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useBuyDirectListing)         | Use this to buy from a direct listing in your marketplace v3 contract.                    |\n\n### Permissions Controls\n\n| Hook                                                                                   | Description                                                                     |\n| -------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useallrolemembers)       | Use this to get the roles of all members.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userolemembers)             | Use this to get the members of a role.                                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useIsAddressRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useisaddressrole)         | Use this to check if a WalletAddress is a member of a role.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetallrolemembers) | Use this to OVERWRITE the list of addresses that are members of specific roles. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGrantRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegrantrole)                 | Use this to grant a WalletAddress a specific role.                              |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevokeRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userevokerole)               | Use this to revoke a WalletAddress a specific role.                             |\n\n### Drop\n\n| Hook                                                                                           | Description                                                                          |\n| ---------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednfts)                 | Use this to get a list of unclaimed NFT tokens of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednfts)                     | Use this to get a list of claimed (minted) NFT tokens of your ERC721 Drop contract.. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednftsupply)       | Use this to get the total unclaimed NFT supply of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednftsupply)           | Use this to get the total claimed (minted) NFT supply of your ERC721 Drop contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBatchesToReveal`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebatchestoreveal)             | Use this to get a list of batches that are ready to be revealed.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimnft)                           | Use this to claim a NFT on your DropContract                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselazymint)                           | Use this to lazy mint a batch of NFTs on your DropContract.                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDelayedRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedelayedreveallazymint) | Use this to lazy mint a batch of delayed reveal NFTs on your DropContract.           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usereveallazymint)               | Use this to reveal a batch of delayed reveal NFTs on your RevealableContract.        |\n\n### Claim Conditions\n\n| Hook                                                                                                   | Description                                                                                              |\n| ------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveClaimCondition`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactiveclaimcondition)           | Use this to get the active claim condition for ERC20, ERC721 or ERC1155 based contracts.                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimconditions)                     | Use this to get all claim conditions for ERC20, ERC721 or ERC1155 based contracts.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimIneligibilityReasons`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimineligibilityreasons) | Use this to check for reasons that prevent claiming for either ERC20, ERC721 or ERC1155 based contracts. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetclaimconditions)               | Use this to set claim conditions on your DropContract.                                                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useResetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useresetclaimconditions)           | Use this to reset claim conditions on your DropContract.                                                 |"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "defaultTokens"
		},
		"2": {
			"sourceFileName": "src/wallet/wallets/defaultWallets.ts",
			"qualifiedName": "defaultWallets"
		},
		"3": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"4": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"5": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "W"
		},
		"6": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "personalWallet"
		},
		"7": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "options"
		},
		"8": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object"
		},
		"9": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"10": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"11": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"12": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"13": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"14": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectPersonalWallet"
		},
		"15": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"16": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"17": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "wallet"
		},
		"18": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectionArgs"
		},
		"19": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.predictAddress"
		},
		"20": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"21": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"22": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"23": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"24": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.personalWalletAddress"
		},
		"25": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.data"
		},
		"26": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"27": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"28": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "options"
		},
		"29": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"30": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"31": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "options"
		},
		"32": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"33": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"34": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "_config"
		},
		"35": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"36": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"37": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "config"
		},
		"38": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"39": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"40": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "config"
		},
		"41": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"42": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"43": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "config"
		},
		"44": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type"
		},
		"45": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type.recommended"
		},
		"46": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"47": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"48": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "options"
		},
		"49": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "paperWallet"
		},
		"50": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "paperWallet"
		},
		"51": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "_config"
		},
		"52": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"53": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"54": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "options"
		},
		"55": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"56": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"57": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "options"
		},
		"58": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"59": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"60": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "config"
		},
		"61": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type"
		},
		"62": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"63": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"64": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"65": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "wallet"
		},
		"66": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "config"
		},
		"67": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"68": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"69": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "options"
		},
		"70": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"71": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"72": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "config"
		},
		"73": {
			"sourceFileName": "src/wallet/wallets/walletConnectV1.tsx",
			"qualifiedName": "walletConnectV1"
		},
		"74": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnectV1"
		},
		"75": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "config"
		},
		"76": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"77": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"78": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "options"
		},
		"79": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"80": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"81": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "options"
		},
		"82": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "coreWallet"
		},
		"83": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "coreWallet"
		},
		"84": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "options"
		},
		"85": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "cryptoDefiWallet"
		},
		"86": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "cryptoDefiWallet"
		},
		"87": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "options"
		},
		"88": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "rabbyWallet"
		},
		"89": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "rabbyWallet"
		},
		"90": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "options"
		},
		"91": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "coin98Wallet"
		},
		"92": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "coin98Wallet"
		},
		"93": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "options"
		},
		"94": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"95": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"96": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"97": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"98": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"99": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"100": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "Theme"
		},
		"101": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "ThemeOverrides"
		},
		"102": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "en"
		},
		"103": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "en"
		},
		"104": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "overrides"
		},
		"105": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "ja"
		},
		"106": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "ja"
		},
		"107": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "overrides"
		},
		"108": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "es"
		},
		"109": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "es"
		},
		"110": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "overrides"
		},
		"111": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "ThirdwebLocale"
		},
		"112": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"113": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectWallet"
		},
		"114": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"115": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.agreement"
		},
		"116": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"117": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.and"
		},
		"118": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.prefix"
		},
		"119": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.privacyPolicy"
		},
		"120": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.termsOfService"
		},
		"121": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.backupWallet"
		},
		"122": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmInWallet"
		},
		"123": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectAWallet"
		},
		"124": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectedToSmartWallet"
		},
		"125": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"126": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.continueAsGuest"
		},
		"127": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.copyAddress"
		},
		"128": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.currentNetwork"
		},
		"129": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultButtonTitle"
		},
		"130": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultModalTitle"
		},
		"131": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.disconnectWallet"
		},
		"132": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.download"
		},
		"133": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"134": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.android"
		},
		"135": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.chrome"
		},
		"136": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.iOS"
		},
		"137": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStarted"
		},
		"138": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.guest"
		},
		"139": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.guestWalletWarning"
		},
		"140": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.installed"
		},
		"141": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.networkSelector"
		},
		"142": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"143": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.addCustomNetwork"
		},
		"144": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.allNetworks"
		},
		"145": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.categoryLabel"
		},
		"146": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"147": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.others"
		},
		"148": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.popular"
		},
		"149": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.recentlyUsed"
		},
		"150": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"151": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"152": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loading"
		},
		"153": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.mainnets"
		},
		"154": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.testnets"
		},
		"155": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"156": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newToWallets"
		},
		"157": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.or"
		},
		"158": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.personalWallet"
		},
		"159": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.receive"
		},
		"160": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.receiveFundsScreen"
		},
		"161": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"162": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"163": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"164": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.recommended"
		},
		"165": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.requestTestnetFunds"
		},
		"166": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.send"
		},
		"167": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendFundsScreen"
		},
		"168": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"169": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.amount"
		},
		"170": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.insufficientFunds"
		},
		"171": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidAddress"
		},
		"172": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.noTokensFound"
		},
		"173": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.searchToken"
		},
		"174": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.selectTokenTitle"
		},
		"175": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendTo"
		},
		"176": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sending"
		},
		"177": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"178": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.successMessage"
		},
		"179": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"180": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.token"
		},
		"181": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionFailed"
		},
		"182": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionRejected"
		},
		"183": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"184": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signatureScreen"
		},
		"185": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"186": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instructionScreen"
		},
		"187": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"188": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"189": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInButton"
		},
		"190": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"191": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signingScreen"
		},
		"192": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"193": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.approveTransactionInSafe"
		},
		"194": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSignIn"
		},
		"195": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"196": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.prompt"
		},
		"197": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.promptForSafe"
		},
		"198": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"199": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.tryAgain"
		},
		"200": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.smartWallet"
		},
		"201": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchAccount"
		},
		"202": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchNetwork"
		},
		"203": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchTo"
		},
		"204": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchingNetwork"
		},
		"205": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionHistory"
		},
		"206": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.welcomeScreen"
		},
		"207": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"208": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultSubtitle"
		},
		"209": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultTitle"
		},
		"210": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wallets"
		},
		"211": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"212": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coin98Wallet"
		},
		"213": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"214": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"215": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"216": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"217": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"218": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"219": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"220": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"221": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"222": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"223": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"224": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"225": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"226": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"227": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coinbaseWallet"
		},
		"228": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coreWallet"
		},
		"229": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.cryptoDefiWallet"
		},
		"230": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.embeddedWallet"
		},
		"231": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"232": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createPassword"
		},
		"233": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"234": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmation"
		},
		"235": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSetPassword"
		},
		"236": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"237": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"238": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.saveInstruction"
		},
		"239": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"240": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"241": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailLoginScreen"
		},
		"242": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"243": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterCodeSendTo"
		},
		"244": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterRecoveryCode"
		},
		"245": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSendCode"
		},
		"246": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCode"
		},
		"247": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCodeOrRecoveryCode"
		},
		"248": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newDeviceDetected"
		},
		"249": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.resendCode"
		},
		"250": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendingCode"
		},
		"251": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"252": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.verify"
		},
		"253": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"254": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"255": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterPassword"
		},
		"256": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"257": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"258": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"259": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"260": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"261": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wrongPassword"
		},
		"262": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"263": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"264": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithApple"
		},
		"265": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithFacebook"
		},
		"266": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithGoogle"
		},
		"267": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.socialLoginScreen"
		},
		"268": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"269": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"270": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"271": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"272": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"273": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"274": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.frameWallet"
		},
		"275": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"276": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionFailedScreen"
		},
		"277": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"278": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description"
		},
		"279": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.downloadFrame"
		},
		"280": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.supportLink"
		},
		"281": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"282": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"283": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"284": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"285": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"286": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"287": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"288": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"289": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"290": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"291": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"292": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"293": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"294": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"295": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.localWallet"
		},
		"296": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"297": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmPasswordLabel"
		},
		"298": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createScreen"
		},
		"299": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"300": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"301": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createNewWallet"
		},
		"302": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.importWallet"
		},
		"303": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"304": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterYourPassword"
		},
		"305": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.exportScreen"
		},
		"306": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"307": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description1"
		},
		"308": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description2"
		},
		"309": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.download"
		},
		"310": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"311": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.walletAddress"
		},
		"312": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.importScreen"
		},
		"313": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"314": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description1"
		},
		"315": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description2"
		},
		"316": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.import"
		},
		"317": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"318": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.uploadJSON"
		},
		"319": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.uploadedSuccessfully"
		},
		"320": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.passwordLabel"
		},
		"321": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.reconnectScreen"
		},
		"322": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"323": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.continue"
		},
		"324": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createNewWallet"
		},
		"325": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.savedWallet"
		},
		"326": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"327": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.warningScreen"
		},
		"328": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"329": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.backupWallet"
		},
		"330": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"331": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.warning"
		},
		"332": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.magicLink"
		},
		"333": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"334": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.countryCodeMissing"
		},
		"335": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailOrPhoneRequired"
		},
		"336": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"337": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"338": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"339": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmailOrPhone"
		},
		"340": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidPhone"
		},
		"341": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWith"
		},
		"342": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWithEmailOrPhone"
		},
		"343": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWithPhone"
		},
		"344": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.phoneRequired"
		},
		"345": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"346": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"347": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.metamaskWallet"
		},
		"348": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.okxWallet"
		},
		"349": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.paperWallet"
		},
		"350": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"351": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailLoginScreen"
		},
		"352": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"353": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterCodeSendTo"
		},
		"354": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterRecoveryCode"
		},
		"355": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSendCode"
		},
		"356": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCode"
		},
		"357": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCodeOrRecoveryCode"
		},
		"358": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newDeviceDetected"
		},
		"359": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.resendCode"
		},
		"360": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendingCode"
		},
		"361": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"362": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.verify"
		},
		"363": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"364": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"365": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.googleLoginScreen"
		},
		"366": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"367": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"368": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"369": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"370": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"371": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"372": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"373": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithGoogle"
		},
		"374": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"375": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.phantomWallet"
		},
		"376": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.rabbyWallet"
		},
		"377": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.rainbowWallet"
		},
		"378": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.safeWallet"
		},
		"379": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"380": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.accountDetailsScreen"
		},
		"381": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"382": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectToSafe"
		},
		"383": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"384": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.dashboardLink"
		},
		"385": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToConnect"
		},
		"386": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"387": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.findSafeAddressIn"
		},
		"388": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidChainConfig"
		},
		"389": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.mainnets"
		},
		"390": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.network"
		},
		"391": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.safeAddress"
		},
		"392": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.selectNetworkPlaceholder"
		},
		"393": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchNetwork"
		},
		"394": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchingNetwork"
		},
		"395": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.testnets"
		},
		"396": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"397": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectWalletScreen"
		},
		"398": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"399": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.learnMoreLink"
		},
		"400": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"401": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"402": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.smartWallet"
		},
		"403": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"404": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"405": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToConnect"
		},
		"406": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wrongNetworkScreen"
		},
		"407": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"408": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"409": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"410": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"411": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.trustWallet"
		},
		"412": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.walletConnect"
		},
		"413": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"414": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanInstruction"
		},
		"415": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.zerionWallet"
		},
		"416": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "ExtensionAndQRScreensLocale"
		},
		"417": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"418": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"419": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"420": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"421": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"422": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"423": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"424": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"425": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"426": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"427": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"428": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"429": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"430": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"431": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"432": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"433": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"434": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"435": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "useSafe"
		},
		"436": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "useSafe"
		},
		"437": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "__function"
		},
		"438": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "__function"
		},
		"439": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "connectProps"
		},
		"440": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "useMagic"
		},
		"441": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "useMagic"
		},
		"442": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "__function"
		},
		"443": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "__function"
		},
		"444": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "options"
		},
		"445": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWallet"
		},
		"446": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWallet"
		},
		"447": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "props"
		},
		"448": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWalletProps"
		},
		"449": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"450": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.className"
		},
		"451": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.theme"
		},
		"452": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.btnTitle"
		},
		"453": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitle"
		},
		"454": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitleIconUrl"
		},
		"455": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.detailsBtn"
		},
		"456": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"457": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"458": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.dropdownPosition"
		},
		"459": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.auth"
		},
		"460": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"461": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"462": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"463": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"464": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"465": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "token"
		},
		"466": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"467": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"468": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"469": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.style"
		},
		"470": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.networkSelector"
		},
		"471": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideTestnetFaucet"
		},
		"472": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.switchToActiveChain"
		},
		"473": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"474": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"475": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"476": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"477": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.supportedTokens"
		},
		"478": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.displayBalanceToken"
		},
		"479": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideSwitchToPersonalWallet"
		},
		"480": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "WelcomeScreen"
		},
		"481": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"482": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.title"
		},
		"483": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"484": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.img"
		},
		"485": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"486": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.src"
		},
		"487": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.width"
		},
		"488": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.height"
		},
		"489": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"490": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"498": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelector"
		},
		"499": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelector"
		},
		"500": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "props"
		},
		"501": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelectorProps"
		},
		"502": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"503": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.theme"
		},
		"504": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onClose"
		},
		"505": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"506": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"507": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.open"
		},
		"508": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.chains"
		},
		"509": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.popularChains"
		},
		"510": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.recentChains"
		},
		"511": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.renderChain"
		},
		"512": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onSwitch"
		},
		"513": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"514": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"515": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "chain"
		},
		"516": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onCustomClick"
		},
		"517": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"518": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"519": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelectorChainProps"
		},
		"520": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"521": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.chain"
		},
		"522": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switchChain"
		},
		"523": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"524": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"525": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switching"
		},
		"526": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switchFailed"
		},
		"527": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.close"
		},
		"528": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"529": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"530": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"531": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"532": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "TAction"
		},
		"533": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "props"
		},
		"534": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps"
		},
		"535": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.className"
		},
		"536": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.contractAddress"
		},
		"537": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.contractAbi"
		},
		"538": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onSuccess"
		},
		"539": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"540": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"541": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "result"
		},
		"542": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onError"
		},
		"543": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"544": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"545": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "error"
		},
		"546": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onSubmit"
		},
		"547": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"548": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"549": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.isDisabled"
		},
		"550": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.action"
		},
		"551": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.type"
		},
		"552": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.theme"
		},
		"553": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object"
		},
		"554": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.type"
		},
		"555": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.colors"
		},
		"556": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object"
		},
		"557": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.primaryText"
		},
		"558": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.secondaryText"
		},
		"559": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.accentText"
		},
		"560": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.danger"
		},
		"561": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.success"
		},
		"562": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.modalOverlayBg"
		},
		"563": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.accentButtonBg"
		},
		"564": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.accentButtonText"
		},
		"565": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.primaryButtonBg"
		},
		"566": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.primaryButtonText"
		},
		"567": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.secondaryButtonBg"
		},
		"568": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.secondaryButtonText"
		},
		"569": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.secondaryButtonHoverBg"
		},
		"570": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.modalBg"
		},
		"571": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.dropdownBg"
		},
		"572": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.tooltipBg"
		},
		"573": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.tooltipText"
		},
		"574": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.inputAutofillBg"
		},
		"575": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.scrollbarBg"
		},
		"576": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.walletSelectorButtonHoverBg"
		},
		"577": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.separatorLine"
		},
		"578": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.secondaryIconColor"
		},
		"579": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.secondaryIconHoverBg"
		},
		"580": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.secondaryIconHoverColor"
		},
		"581": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.borderColor"
		},
		"582": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.skeletonBg"
		},
		"583": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.selectedTextColor"
		},
		"584": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.selectedTextBg"
		},
		"585": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.connectedButtonBg"
		},
		"586": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.connectedButtonBgHover"
		},
		"587": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__object.fontFamily"
		},
		"588": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.style"
		},
		"589": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.connectWallet"
		},
		"590": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"591": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.className"
		},
		"592": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.btnTitle"
		},
		"593": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalTitle"
		},
		"594": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalTitleIconUrl"
		},
		"595": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.auth"
		},
		"596": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"597": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"598": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"599": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"600": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"601": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "token"
		},
		"602": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"603": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"604": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"605": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.style"
		},
		"606": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"607": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"608": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"609": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"610": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.TActionFn"
		},
		"611": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"612": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"613": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "TChains"
		},
		"614": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"615": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"616": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"617": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"618": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"619": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"620": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"621": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"622": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"623": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"624": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"625": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"626": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"627": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"628": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"629": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"630": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"631": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"632": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"633": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "props"
		},
		"634": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "DefaultChains"
		},
		"635": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps"
		},
		"636": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.supportedWallets"
		},
		"637": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.theme"
		},
		"638": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.signer"
		},
		"639": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.locale"
		},
		"640": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.TChains"
		},
		"641": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps"
		},
		"642": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.src"
		},
		"643": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.alt"
		},
		"644": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.poster"
		},
		"645": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.gatewayUrl"
		},
		"646": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.width"
		},
		"647": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.height"
		},
		"648": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"649": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"650": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"651": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"652": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"653": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"654": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps"
		},
		"655": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"656": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"657": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.width"
		},
		"658": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.height"
		},
		"659": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"660": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"661": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"662": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"670": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "useRainbowWallet"
		},
		"671": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "useRainbowWallet"
		},
		"672": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__function"
		},
		"673": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__function"
		},
		"674": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"675": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__type"
		},
		"676": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"677": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "useTrustWallet"
		},
		"678": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "useTrustWallet"
		},
		"679": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__function"
		},
		"680": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__function"
		},
		"681": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"682": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__type"
		},
		"683": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"684": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "useMetamask"
		},
		"685": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "useMetamask"
		},
		"686": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__function"
		},
		"687": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__function"
		},
		"688": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "connectOptions"
		},
		"689": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__type"
		},
		"690": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__type.chainId"
		},
		"691": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "useCoinbaseWallet"
		},
		"692": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "useCoinbaseWallet"
		},
		"693": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__function"
		},
		"694": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__function"
		},
		"695": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"696": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__type"
		},
		"697": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"698": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "useFrameWallet"
		},
		"699": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "useFrameWallet"
		},
		"700": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__function"
		},
		"701": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__function"
		},
		"702": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "connectOptions"
		},
		"703": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__type"
		},
		"704": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__type.chainId"
		},
		"705": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "useBloctoWallet"
		},
		"706": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "useBloctoWallet"
		},
		"707": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__function"
		},
		"708": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__function"
		},
		"709": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "options"
		},
		"710": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__type"
		},
		"711": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"712": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"713": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"714": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object"
		},
		"715": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"716": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"717": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"718": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "authParams"
		},
		"719": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.sendVerificationEmail"
		},
		"720": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"721": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"722": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__0"
		},
		"723": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type"
		},
		"724": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type.email"
		},
		"725": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWalletUserEmail"
		},
		"726": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWalletUserEmail"
		},
		"727": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"728": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"729": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"730": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"731": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "email"
		},
		"732": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWalletUserEmail"
		},
		"733": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWalletUserEmail"
		},
		"734": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWallet"
		},
		"735": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWallet"
		},
		"736": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__function"
		},
		"737": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__function"
		},
		"738": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "options"
		},
		"739": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type"
		},
		"740": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type.chainId"
		},
		"741": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type.email"
		},
		"742": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnect"
		},
		"743": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnect"
		},
		"744": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"745": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"746": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "options"
		},
		"747": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type"
		},
		"748": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.chainId"
		},
		"749": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.projectId"
		},
		"750": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.qrModalOptions"
		},
		"751": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnectV1"
		},
		"752": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnectV1"
		},
		"753": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"754": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"755": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "options"
		},
		"756": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type"
		},
		"757": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.chainId"
		},
		"758": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "SupportedTokens"
		},
		"759": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"760": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"761": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "uri"
		},
		"762": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "mimeType"
		},
		"763": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "gatewayUrl"
		},
		"764": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object"
		},
		"765": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.url"
		},
		"766": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.mimeType"
		},
		"767": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaRenderer"
		},
		"768": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MediaRenderer"
		},
		"769": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"770": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType"
		},
		"771": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.url"
		},
		"772": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.mimeType"
		},
		"773": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps"
		},
		"774": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.metadata"
		},
		"775": {
			"sourceFileName": "../sdk/src/core/schema/nft.ts",
			"qualifiedName": "__type"
		},
		"776": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.width"
		},
		"777": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.height"
		},
		"778": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"779": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"780": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"781": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"782": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"783": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"784": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"785": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"786": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		}
	}
}
