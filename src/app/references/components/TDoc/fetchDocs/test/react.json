{
	"id": 0,
	"name": "@thirdweb-dev/react",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 730,
			"name": "MediaRendererProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 732,
					"name": "alt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The alt text for the media."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 49,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 741,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 750,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 737,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 744,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 740,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 749,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 734,
					"name": "gatewayUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The IPFS gateway URL to use"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L57"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 736,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS height property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 65,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L65"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 747,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 742,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 751,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 733,
					"name": "poster",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media poster image uri. (if applicable)"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L53"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 739,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media.\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 748,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 731,
					"name": "src",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The media source uri."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L45"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 738,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 745,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 735,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS width property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 61,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 746,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						732, 741, 737, 740, 734, 736, 742, 733, 739, 731, 738, 735
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/types.ts",
					"line": 41,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L41"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 743,
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 866,
			"name": "MediaType",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 868,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 501,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L501"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 867,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 500,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L500"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [868, 867]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 499,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L499"
				}
			]
		},
		{
			"id": 743,
			"name": "SharedMediaProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 750,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				},
				{
					"id": 744,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 749,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 747,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS height property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 19,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 751,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 748,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media.\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 745,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					}
				},
				{
					"id": 746,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The CSS width property to apply on the rendered element."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [750, 744, 749, 747, 751, 748, 745, 746]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/types.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L3"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 730,
					"name": "MediaRendererProps"
				},
				{
					"type": "reference",
					"target": 869,
					"name": "ThirdwebNftMediaProps"
				}
			]
		},
		{
			"id": 869,
			"name": "ThirdwebNftMediaProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 878,
					"name": "children",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 750,
						"name": "SharedMediaProps.children"
					}
				},
				{
					"id": 874,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The className to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 744,
						"name": "SharedMediaProps.className"
					}
				},
				{
					"id": 877,
					"name": "controls",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Show the media controls (where applicable)\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 31,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 749,
						"name": "SharedMediaProps.controls"
					}
				},
				{
					"id": 873,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "CSS height of the media"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 18,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/NftMedia.tsx#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 747,
						"name": "SharedMediaProps.height"
					}
				},
				{
					"id": 870,
					"name": "metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NFT metadata of the NFT returned by the thirdweb sdk."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 10,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/NftMedia.tsx#L10"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
							"qualifiedName": "objectOutputType"
						},
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 871,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/sdk/dist/declarations/src/core/schema/nft.d.ts",
											"line": 278,
											"character": 303
										}
									]
								}
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
									"qualifiedName": "ZodUnion"
								},
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodEffects"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
															"qualifiedName": "ZodUnion"
														},
														"typeArguments": [
															{
																"type": "tuple",
																"elements": [
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodBigInt"
																		},
																		"name": "ZodBigInt",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																					"qualifiedName": "BigNumber"
																				},
																				"name": "BigNumber",
																				"package": "@ethersproject/bignumber"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	},
																	{
																		"type": "reference",
																		"target": {
																			"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																			"qualifiedName": "ZodType"
																		},
																		"typeArguments": [
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
																					"qualifiedName": "ZodTypeDef"
																				},
																				"name": "ZodTypeDef",
																				"package": "zod"
																			},
																			{
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																					"qualifiedName": "BN"
																				},
																				"name": "BN",
																				"package": "@types/bn.js"
																			}
																		],
																		"name": "ZodType",
																		"package": "zod"
																	}
																]
															}
														],
														"name": "ZodUnion",
														"package": "zod"
													},
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "bigint"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bignumber@5.7.0/node_modules/@ethersproject/bignumber/src.ts/bignumber.ts",
																	"qualifiedName": "BigNumber"
																},
																"name": "BigNumber",
																"package": "@ethersproject/bignumber"
															},
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../../node_modules/.pnpm/@types+bn.js@5.1.1/node_modules/@types/bn.js/index.d.ts",
																	"qualifiedName": "BN"
																},
																"name": "BN",
																"package": "@types/bn.js"
															}
														]
													}
												],
												"name": "ZodEffects",
												"package": "zod"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/zod@3.22.3/node_modules/zod/lib/types.d.ts",
													"qualifiedName": "ZodUnknown"
												},
												"name": "ZodUnknown",
												"package": "zod"
											}
										]
									}
								],
								"name": "ZodUnion",
								"package": "zod"
							},
							{
								"type": "literal",
								"value": "strip"
							}
						],
						"name": "objectOutputType",
						"package": "zod"
					}
				},
				{
					"id": 879,
					"name": "mimeType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Provide the [MIME type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of the media if it is known"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 751,
						"name": "SharedMediaProps.mimeType"
					}
				},
				{
					"id": 876,
					"name": "requireInteraction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Require user interaction to play the media.\n\nBy default it is set to "
							},
							{
								"kind": "code",
								"text": "`false`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 748,
						"name": "SharedMediaProps.requireInteraction"
					}
				},
				{
					"id": 875,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply on the rendered element to add custom styling."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/types.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/types.ts#L11"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 745,
						"name": "SharedMediaProps.style"
					}
				},
				{
					"id": 872,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "CSS width of the media"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/NftMedia.tsx",
							"line": 14,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/NftMedia.tsx#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"overwrites": {
						"type": "reference",
						"target": 746,
						"name": "SharedMediaProps.width"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [878, 874, 877, 873, 870, 879, 876, 875, 872]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 6,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/NftMedia.tsx#L6"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 743,
					"name": "SharedMediaProps",
					"package": "@thirdweb-dev/react"
				}
			]
		},
		{
			"id": 724,
			"name": "ThirdwebProviderProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 728,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "locale object contains text used for all thirdweb components\n\nit allows you to change the language used in UI components or override the texts used in the UI\n\nReact SDK comes out of the box with Spanish and Japanese locale functions, but you can add support for any language you want just by passing an object with the required strings"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "## Using Built-in Locales\n\n### Using the Spanish locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, es } from \"@thirdweb-dev/react\";\n\nconst spanish = es();\n\n<ThirdwebProvider locale={spanish}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Using the Japanese locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, jp } from \"@thirdweb-dev/react\";\n\nconst japanese = jp();\n\n<ThirdwebProvider locale={japanese}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Using English locale ( default )\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\nconst english = en();\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n## Overriding the locale\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider, en } from \"@thirdweb-dev/react\";\n\n// override some texts\nconst english = en({\n  connectWallet: {\n    confirmInWallet: \"Confirm in your wallet\",\n  },\n  wallets: {\n    metamaskWallet: {\n      connectionScreen: {\n        inProgress: \"Awaiting Confirmation\",\n        instruction: \"Accept connection request in your MetaMask wallet\",\n      },\n    },\n  },\n});\n\n<ThirdwebProvider locale={english}>\n  <App />\n</ThirdwebProvider>;\n\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Custom locale object\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider locale={{ .... }}>\n  <App />\n</ThirdwebProvider>;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 158,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L158"
						}
					],
					"type": {
						"type": "reference",
						"target": 226,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				},
				{
					"id": 727,
					"name": "signer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Use a signer instead of "
							},
							{
								"kind": "code",
								"text": "`supportedWallets`"
							},
							{
								"kind": "text",
								"text": " if you want to provide your own wallet connection logic."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 81,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L81"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+abstract-signer@5.7.0/node_modules/@ethersproject/abstract-signer/src.ts/index.ts",
							"qualifiedName": "Signer"
						},
						"name": "Signer",
						"package": "@ethersproject/abstract-signer"
					}
				},
				{
					"id": 725,
					"name": "supportedWallets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Wallets supported by the dApp\n\nIf no wallets are provided, the default wallets will be used which is equivalent to the following:\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n[\n metamaskWallet(),\n coinbaseWallet(),\n walletConnect(),\n trustWallet(),\n rainbowWallet(),\n zerionWallet(),\n phantomWallet(),\n]\n```"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nimport { metamaskWallet, coinbaseWallet, walletConnect } from \"@thirdweb-dev/react\";\n\n<ThirdwebProvider\n supportedWallets={[\n   metamaskWallet(),\n   coinbaseWallet(),\n   walletConnect()\n ]}\n/>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 55,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L55"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../react-core/src/core/types/wallet.ts",
								"qualifiedName": "WalletConfig"
							},
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "WalletConfig",
							"package": "@thirdweb-dev/react-core"
						}
					}
				},
				{
					"id": 726,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Set the theme for all thirdweb components\n\nBy default it is set to \"dark\".\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object.\n\nYou can also import "
							},
							{
								"kind": "code",
								"text": "`lightTheme`"
							},
							{
								"kind": "text",
								"text": " or "
							},
							{
								"kind": "code",
								"text": "`darkTheme`"
							},
							{
								"kind": "text",
								"text": " functions from "
							},
							{
								"kind": "code",
								"text": "`@thirdweb-dev/react`"
							},
							{
								"kind": "text",
								"text": " to use the default themes as base and overrides parts of it."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 76,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L76"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/design-system/index.ts",
							"qualifiedName": "ThemeObjectOrType"
						},
						"name": "ThemeObjectOrType",
						"package": "@thirdweb-dev/react"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [728, 727, 725, 726]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 20,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L20"
				}
			],
			"typeParameters": [
				{
					"id": 729,
					"name": "TChains",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": {
								"sourceFileName": "../chains/src/types.ts",
								"qualifiedName": "Chain"
							},
							"name": "Chain",
							"package": "@thirdweb-dev/chains"
						}
					}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Omit"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": {
								"sourceFileName": "../react-core/src/core/providers/thirdweb-provider.tsx",
								"qualifiedName": "ThirdwebProviderCoreProps"
							},
							"typeArguments": [
								{
									"type": "reference",
									"target": -1,
									"name": "TChains",
									"refersToTypeParameter": true
								}
							],
							"name": "ThirdwebProviderCoreProps",
							"package": "@thirdweb-dev/react-core"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "literal",
									"value": "createWalletStorage"
								},
								{
									"type": "literal",
									"value": "supportedWallets"
								},
								{
									"type": "literal",
									"value": "theme"
								},
								{
									"type": "literal",
									"value": "signerWallet"
								}
							]
						}
					],
					"name": "Omit",
					"package": "typescript"
				}
			]
		},
		{
			"id": 654,
			"name": "Web3ButtonProps",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 670,
					"name": "action",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The logic to execute when the button is clicked.\n\nThe contract instance is available as the first argument of the function for you to interact with.\n\nIf the action you are performing is async, make sure to return a Promise from the action function so that the SDK knows when the action is complete"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button\n contractAddress=\"0x...\"\n action={(contract) => contract.erc721.claim(1)}\n>\n Claim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 95,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L95"
						}
					],
					"type": {
						"type": "reference",
						"target": -1,
						"name": "TActionFn",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 655,
					"name": "className",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the class to apply to the button for adding custom styles"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button className=\"my-custom-class\" contractAddress={contractAddress} action={someAction} >\nClaim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 42,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 674,
					"name": "connectWallet",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Web3Button renders a "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " if no wallet is connected. You can pass props for that component by passing a "
							},
							{
								"kind": "code",
								"text": "`connectWallet`"
							},
							{
								"kind": "text",
								"text": " prop to Web3Button"
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\n<Web3Button\n contractAddress=\"0x...\"\n action={(contract) => contract.erc721.claim(1)}\n>\n Claim NFT\n</Web3Button>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 125,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L125"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 675,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 680,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 152,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L152"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 681,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 682,
													"name": "loginOptional",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 153,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L153"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "boolean"
													}
												},
												{
													"id": 683,
													"name": "onLogin",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 154,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L154"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 684,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																	"line": 154,
																	"character": 16,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L154"
																}
															],
															"signatures": [
																{
																	"id": 685,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																			"line": 154,
																			"character": 16,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L154"
																		}
																	],
																	"parameters": [
																		{
																			"id": 686,
																			"name": "token",
																			"variant": "param",
																			"kind": 32768,
																			"flags": {},
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												},
												{
													"id": 687,
													"name": "onLogout",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
															"line": 155,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L155"
														}
													],
													"type": {
														"type": "reflection",
														"declaration": {
															"id": 688,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																	"line": 155,
																	"character": 17,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L155"
																}
															],
															"signatures": [
																{
																	"id": 689,
																	"name": "__type",
																	"variant": "signature",
																	"kind": 4096,
																	"flags": {},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
																			"line": 155,
																			"character": 17,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L155"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "void"
																	}
																}
															]
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [682, 683, 687]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
													"line": 152,
													"character": 11,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L152"
												}
											]
										}
									}
								},
								{
									"id": 677,
									"name": "btnTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "text to render in ConnectWallet button\n\nThe default is "
											},
											{
												"kind": "code",
												"text": "`\"Connect Wallet\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 136,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L136"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 676,
									"name": "className",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The class to apply to the ConnectWallet component for adding custom styles"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 129,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L129"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 691,
									"name": "modalSize",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Set the size of the modal - "
											},
											{
												"kind": "code",
												"text": "`compact`"
											},
											{
												"kind": "text",
												"text": " or "
											},
											{
												"kind": "code",
												"text": "`wide`"
											},
											{
												"kind": "text",
												"text": " on desktop\n\nModal size is always "
											},
											{
												"kind": "code",
												"text": "`compact`"
											},
											{
												"kind": "text",
												"text": " on mobile.\n\nBy default it is set to "
											},
											{
												"kind": "code",
												"text": "`\"wide\"`"
											},
											{
												"kind": "text",
												"text": " for desktop"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 170,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L170"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "compact"
											},
											{
												"type": "literal",
												"value": "wide"
											}
										]
									}
								},
								{
									"id": 678,
									"name": "modalTitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "title of the "
											},
											{
												"kind": "code",
												"text": "`ConnectWallet`"
											},
											{
												"kind": "text",
												"text": " Modal.\n\nThe default is "
											},
											{
												"kind": "code",
												"text": "`\"Connect\"`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 143,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L143"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 679,
									"name": "modalTitleIconUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 150,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L150"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 693,
									"name": "privacyPolicyUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, ConnectWallet Modal will show a Privacy Policy message at the bottom with below link"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 180,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L180"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 690,
									"name": "style",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "apply custom styles to ConnectWallet button element"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 161,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L161"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.CSSProperties"
										},
										"name": "CSSProperties",
										"package": "@types/react",
										"qualifiedName": "React.CSSProperties"
									}
								},
								{
									"id": 692,
									"name": "termsOfServiceUrl",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If provided, ConnectWallet Modal will show a Terms of Service message at the bottom with below link"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 175,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L175"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 694,
									"name": "welcomeScreen",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Customize the welcome screen of the ConnectWallet Modal\n\nEither provide a component to replace the default screen entirely or an object with title, subtitle and imgSrc to change the content of the default screen"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 187,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L187"
										}
									],
									"type": {
										"type": "reference",
										"target": 596,
										"name": "WelcomeScreen",
										"package": "@thirdweb-dev/react"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [680, 677, 676, 691, 678, 679, 693, 690, 692, 694]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 125,
									"character": 18,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L125"
								}
							]
						}
					}
				},
				{
					"id": 657,
					"name": "contractAbi",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The [Application Binary Interface](https://docs.soliditylang.org/en/v0.8.17/abi-spec.html) (ABI) of the contract.\n\nThis is only required if you have not imported your contract to the [thirdweb dashboard](https://thirdweb.com/dashboard)."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 54,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L54"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@ethersproject+contracts@5.7.0/node_modules/@ethersproject/contracts/src.ts/index.ts",
							"qualifiedName": "ContractInterface"
						},
						"name": "ContractInterface",
						"package": "@ethersproject/contracts"
					}
				},
				{
					"id": 656,
					"name": "contractAddress",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "the address of the contract\n\nIf you have not imported your contract to [thirdweb dashboard](https://thirdweb.com/dashboard), you must additionally specify the contractAbi prop."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 48,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 669,
					"name": "isDisabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the button should be disabled or not\n\nThe button is disabled and shows a spinner when the transaction is executing."
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 76,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 662,
					"name": "onError",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 64,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L64"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 663,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 64,
									"character": 12,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L64"
								}
							],
							"signatures": [
								{
									"id": 664,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run when the contract method call fails."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 64,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L64"
										}
									],
									"parameters": [
										{
											"id": 665,
											"name": "error",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "error thrown when running given "
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": " function"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 666,
					"name": "onSubmit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 69,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L69"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 667,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 69,
									"character": 13,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L69"
								}
							],
							"signatures": [
								{
									"id": 668,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run after the user has confirmed the transaction.\nIt is called just before the "
											},
											{
												"kind": "code",
												"text": "`action`"
											},
											{
												"kind": "text",
												"text": " function is called"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 69,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L69"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 658,
					"name": "onSuccess",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 59,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L59"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 659,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
									"line": 59,
									"character": 14,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L59"
								}
							],
							"signatures": [
								{
									"id": 660,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Callback function to be run when the contract method call is successful."
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
											"line": 59,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L59"
										}
									],
									"parameters": [
										{
											"id": 661,
											"name": "result",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "value returned from given "
													},
													{
														"kind": "code",
														"text": "`action`"
													},
													{
														"kind": "text",
														"text": " function when it is called"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Awaited"
												},
												"typeArguments": [
													{
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "ReturnType"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": -1,
																"name": "TActionFn",
																"refersToTypeParameter": true
															}
														],
														"name": "ReturnType",
														"package": "typescript"
													}
												],
												"name": "Awaited",
												"package": "typescript"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				},
				{
					"id": 673,
					"name": "style",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The style to apply to the button element"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 110,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L110"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.CSSProperties"
						},
						"name": "CSSProperties",
						"package": "@types/react",
						"qualifiedName": "React.CSSProperties"
					}
				},
				{
					"id": 672,
					"name": "theme",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The theme to use for the button"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 105,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L105"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "light"
							},
							{
								"type": "literal",
								"value": "dark"
							},
							{
								"type": "reference",
								"target": 180,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						]
					}
				},
				{
					"id": 671,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "button element's "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": " attribute"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 100,
							"character": 2,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L100"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "button"
							},
							{
								"type": "literal",
								"value": "reset"
							},
							{
								"type": "literal",
								"value": "submit"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						670, 655, 674, 657, 656, 669, 662, 666, 658, 673, 672, 671
					]
				}
			],
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 31,
					"character": 17,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L31"
				}
			],
			"typeParameters": [
				{
					"id": 695,
					"name": "TActionFn",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 696,
						"name": "ActionFn",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 696,
			"name": "ActionFn",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 27,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L27"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 697,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 27,
							"character": 23,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L27"
						}
					],
					"signatures": [
						{
							"id": 698,
							"name": "__type",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"parameters": [
								{
									"id": 699,
									"name": "contract",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../sdk/src/evm/contracts/smart-contract.ts",
											"qualifiedName": "SmartContract"
										},
										"name": "SmartContract",
										"package": "@thirdweb-dev/sdk"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					]
				}
			}
		},
		{
			"id": 35,
			"name": "BloctoWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
					"line": 4,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L4"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 36,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 37,
							"name": "appId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "To get advanced features and support from Blocto, you can create an appId from [blocto dashboard](https://docs.blocto.app/blocto-sdk/register-app-id)"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
									"line": 8,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 38,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
									"line": 13,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L13"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [37, 38]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
							"line": 4,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L4"
						}
					]
				}
			}
		},
		{
			"id": 170,
			"name": "Coin98WalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 171,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 172,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Coin98 using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
									"line": 17,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [172, 173]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
							"line": 5,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L5"
						}
					]
				}
			}
		},
		{
			"id": 42,
			"name": "CoinbaseWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
					"line": 15,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L15"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 43,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 44,
							"name": "qrmodal",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to use the Coinbase's default QR Code modal or show the custom UI in ConnectWallet Modal\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"custom\"`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
									"line": 21,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L21"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "coinbase"
									},
									{
										"type": "literal",
										"value": "custom"
									}
								]
							}
						},
						{
							"id": 45,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
									"line": 26,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L26"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [44, 45]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
							"line": 15,
							"character": 42,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L15"
						}
					]
				}
			}
		},
		{
			"id": 564,
			"name": "ConnectWalletProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 40,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L40"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 565,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 575,
							"name": "auth",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Enforce that users must sign in with their wallet using [auth](https://portal.thirdweb.com/auth) after connecting their wallet.\n\nThis requires the "
									},
									{
										"kind": "code",
										"text": "`authConfig`"
									},
									{
										"kind": "text",
										"text": " prop to be set on the "
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": " component."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 138,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L138"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 576,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 577,
											"name": "loginOptional",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "specify whether signing in is optional or not.\n\nBy default it is "
													},
													{
														"kind": "code",
														"text": "`true`"
													},
													{
														"kind": "text",
														"text": " if "
													},
													{
														"kind": "code",
														"text": "`authConfig`"
													},
													{
														"kind": "text",
														"text": " is set on "
													},
													{
														"kind": "code",
														"text": "`ThirdWebProvider`"
													}
												]
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 144,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L144"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 578,
											"name": "onLogin",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 148,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L148"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 579,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 148,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L148"
														}
													],
													"signatures": [
														{
															"id": 580,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs in with their wallet"
																	}
																]
															},
															"parameters": [
																{
																	"id": 581,
																	"name": "token",
																	"variant": "param",
																	"kind": 32768,
																	"flags": {},
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										},
										{
											"id": 582,
											"name": "onLogout",
											"variant": "declaration",
											"kind": 1024,
											"flags": {
												"isOptional": true
											},
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
													"line": 152,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L152"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 583,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
															"line": 152,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L152"
														}
													],
													"signatures": [
														{
															"id": 584,
															"name": "__type",
															"variant": "signature",
															"kind": 4096,
															"flags": {},
															"comment": {
																"summary": [
																	{
																		"kind": "text",
																		"text": "Callback to be called after user signs out"
																	}
																]
															},
															"type": {
																"type": "intrinsic",
																"name": "void"
															}
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [577, 578, 582]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 138,
											"character": 9,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L138"
										}
									]
								}
							}
						},
						{
							"id": 568,
							"name": "btnTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "set custom label for the button.\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"Connect\"`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet btnTitle=\"Sign in\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 82,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L82"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 566,
							"name": "className",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "CSS class to apply to the button element\n\nFor some CSS properties, you may need to use the !important to override the default styles\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet className=\"my-custom-class\" />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 50,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L50"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 571,
							"name": "detailsBtn",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 115,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L115"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 572,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
											"line": 115,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L115"
										}
									],
									"signatures": [
										{
											"id": 573,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Render a custom button to display connected wallet details instead of the default one\n\n"
													},
													{
														"kind": "code",
														"text": "```tsx\nconst address = useAddress();\n\n<ConnectWallet\n detailsBtn={() => {\n   return (\n     <button>\n       connected to {address}\n     </button>\n   )\n }}\n/>\n```"
													}
												]
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
													"qualifiedName": "__global.JSX.Element"
												},
												"name": "JSX.Element",
												"package": "@types/react",
												"qualifiedName": "__global.JSX.Element"
											}
										}
									]
								}
							}
						},
						{
							"id": 594,
							"name": "displayBalanceToken",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Display the balance of a token instead of the native token in ConnectWallet details button."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { Base } from \"@thirdweb-dev/chains\";\n\n<ConnectWallet balanceToken={{\n   1: \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599\" // show USDC balance when connected to Ethereum mainnet\n   [Base.chainId]: \"0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb\", // show Dai stablecoin token balance when connected to Base mainnet\n }}\n/>\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 298,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L298"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 574,
							"name": "dropdownPosition",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When user connects the wallet using ConnectWallet Modal, a \"Details Button\" is rendered. Clicking on this button opens a dropdown which opens in a certain direction relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "`dropdownPosition`"
									},
									{
										"kind": "text",
										"text": " prop allows you to customize the direction the dropdown should open relative to the Details button.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n dropdownPosition={{\n   side: \"bottom\", // or use:  \"top\" | \"bottom\" | \"left\" | \"right\"\n   align: \"end\", // or use:  \"start\" | \"center\" | \"end\";\n }}\n />\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 131,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L131"
								}
							],
							"type": {
								"type": "reference",
								"target": 646,
								"name": "DropDownPosition",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 595,
							"name": "hideSwitchToPersonalWallet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide the \"Switch to Personal wallet\" option in the wallet modal which is shown when wallet is connected to either Smart Wallet or Safe.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet hideSwitchToPersonalWallet={true} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 310,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L310"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 587,
							"name": "hideTestnetFaucet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Hide the \"Request Testnet funds\" link in ConnectWallet dropdown which is shown when user is connected to a testnet.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet hideTestnetFaucet={false} />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 178,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L178"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 589,
							"name": "modalSize",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the size of the modal - "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`wide`"
									},
									{
										"kind": "text",
										"text": " on desktop\n\nModal size is always "
									},
									{
										"kind": "code",
										"text": "`compact`"
									},
									{
										"kind": "text",
										"text": " on mobile\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`\"wide\"`"
									},
									{
										"kind": "text",
										"text": " for desktop."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 198,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L198"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "compact"
									},
									{
										"type": "literal",
										"value": "wide"
									}
								]
							}
						},
						{
							"id": 569,
							"name": "modalTitle",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Change the title of ConnectWallet Modal\n\nThe default is "
									},
									{
										"kind": "code",
										"text": "`\"Connect\"`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 89,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L89"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 570,
							"name": "modalTitleIconUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Replace the thirdweb icon next to modalTitle and set your own iconUrl\n\nSet to empty string to hide the icon"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 96,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L96"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 586,
							"name": "networkSelector",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "customize the Network selector shown"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 163,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L163"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Omit"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 617,
										"name": "NetworkSelectorProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "theme"
											},
											{
												"type": "literal",
												"value": "onClose"
											},
											{
												"type": "literal",
												"value": "chains"
											},
											{
												"type": "literal",
												"value": "open"
											}
										]
									}
								],
								"name": "Omit",
								"package": "typescript"
							}
						},
						{
							"id": 591,
							"name": "privacyPolicyUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Modal will show a Privacy Policy message at the bottom with below link"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet privacyPolicyUrl=\"https://your-privacy-policy-url.com\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 218,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L218"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 585,
							"name": "style",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "CSS styles to apply to the button element"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 158,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L158"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.CSSProperties"
								},
								"name": "React.CSSProperties",
								"package": "@types/react"
							}
						},
						{
							"id": 593,
							"name": "supportedTokens",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the tokens shown in the \"Send Funds\" screen for various networks.\n\nBy default, The \"Send Funds\" screen shows a few popular tokens for default chains and the native token. For other chains it only shows the native token."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "text",
												"text": "supportedTokens prop allows you to customize this list as shown below which shows  \"Dai Stablecoin\" when users wallet is connected to the \"Base\" mainnet.\n\n"
											},
											{
												"kind": "code",
												"text": "```tsx\nimport { ConnectWallet } from '@thirdweb-dev/react';\nimport { Base } from '@thirdweb-dev/chains';\n\nfunction Example() {\n  return (\n\t\t<ConnectWallet\n\t\t\tsupportedTokens={{\n\t\t\t\t[Base.chainId]: [\n\t\t\t\t\t{\n\t\t\t\t\t\taddress: '0x50c5725949A6F0c72E6C4a641F24049A917DB0Cb', // token contract address\n\t\t\t\t\t\tname: 'Dai Stablecoin',\n\t\t\t\t\t\tsymbol: 'DAI',\n\t\t\t\t\t\ticon: 'https://assets.coingecko.com/coins/images/9956/small/Badge_Dai.png?1687143508',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}}\n\t\t/>\n\t);\n}\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 282,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L282"
								}
							],
							"type": {
								"type": "reference",
								"target": 847,
								"name": "SupportedTokens",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"id": 588,
							"name": "switchToActiveChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Whether to show \"Switch Network\" button if the wallet is connected,\nbut it is not connected to the "
									},
									{
										"kind": "code",
										"text": "`activeChain`"
									},
									{
										"kind": "text",
										"text": " provided in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "\n\nPlease, note that if you support multiple networks in your app this prop should\nbe set to "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " to allow users to switch between networks.\n\nBy default it is "
									},
									{
										"kind": "code",
										"text": "`false`"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 189,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L189"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 590,
							"name": "termsOfServiceUrl",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If provided, Modal will show a Terms of Service message at the bottom with below link"
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\n<ConnectWallet termsOfServiceUrl=\"https://your-terms-of-service-url.com\" />\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 208,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L208"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 567,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the theme for the button and modal.\n\nBy default it is set to \"dark\" if "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is not set on "
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": "\nIf a "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " is set on "
									},
									{
										"kind": "code",
										"text": "`ThirdWebProvider`"
									},
									{
										"kind": "text",
										"text": " then that theme will be used by default which can be overridden by setting "
									},
									{
										"kind": "code",
										"text": "`theme`"
									},
									{
										"kind": "text",
										"text": " prop on "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component\n\ntheme can be set to either \"dark\" or \"light\" or a custom theme object. You can also import "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " functions from "
									},
									{
										"kind": "code",
										"text": "`@thirdweb-dev/react`"
									},
									{
										"kind": "text",
										"text": " to use the default themes as base and overrides parts of it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nimport { lightTheme } from \"@thirdweb-dev/react\";\nconst customTheme = lightTheme({\n colors: {\n   modalBg: 'red'\n }\n})\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 70,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L70"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 180,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						},
						{
							"id": 592,
							"name": "welcomeScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Customize the welcome screen. This prop is only applicable when modalSize prop is set to \"wide\". On \"wide\" Modal size, a welcome screen is shown on the right side of the modal.\n\nThis screen can be customized in two ways\n\n### 1. Customize Metadata and Image\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet welcomeScreen={{\n title: \"your title\",\n subtitle: \"your subtitle\",\n img: {\n  src: \"https://your-image-url.png\",\n  width: 300,\n  height: 50,\n },\n}} />\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### 2. Render Custom Component\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ConnectWallet\n welcomeScreen={() => {\n return <YourCustomComponent />\n}}\n/>\n```"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
									"line": 249,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L249"
								}
							],
							"type": {
								"type": "reference",
								"target": 596,
								"name": "WelcomeScreen",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								575, 568, 566, 571, 594, 574, 595, 587, 589, 569, 570, 586, 591,
								585, 593, 588, 590, 567, 592
							]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
							"line": 40,
							"character": 33,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L40"
						}
					]
				}
			}
		},
		{
			"id": 149,
			"name": "CoreWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 150,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 151,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Core using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
									"line": 15,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 152,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [151, 152]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
							"line": 8,
							"character": 38,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L8"
						}
					]
				}
			}
		},
		{
			"id": 156,
			"name": "CryptoDefiWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 157,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 158,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Defi wallet using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
									"line": 15,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 159,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [158, 159]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
							"line": 8,
							"character": 44,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L8"
						}
					]
				}
			}
		},
		{
			"id": 723,
			"name": "DefaultChains",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Array of default supported chains by the thirdweb SDK"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 164,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L164"
				}
			],
			"type": {
				"type": "query",
				"queryType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../chains/src/index.ts",
						"qualifiedName": "defaultChains"
					},
					"name": "defaultChains",
					"package": "@thirdweb-dev/chains"
				}
			}
		},
		{
			"id": 646,
			"name": "DropDownPosition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
					"line": 78,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/Details.tsx#L78"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 647,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 649,
							"name": "align",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
									"line": 80,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/Details.tsx#L80"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "start"
									},
									{
										"type": "literal",
										"value": "center"
									},
									{
										"type": "literal",
										"value": "end"
									}
								]
							}
						},
						{
							"id": 648,
							"name": "side",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
									"line": 79,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/Details.tsx#L79"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "top"
									},
									{
										"type": "literal",
										"value": "bottom"
									},
									{
										"type": "literal",
										"value": "left"
									},
									{
										"type": "literal",
										"value": "right"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [649, 648]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/Details.tsx",
							"line": 78,
							"character": 31,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/Details.tsx#L78"
						}
					]
				}
			}
		},
		{
			"id": 49,
			"name": "EmbeddedWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L8"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/types.ts",
									"qualifiedName": "EmbeddedWalletAdditionalOptions"
								},
								"name": "EmbeddedWalletAdditionalOptions",
								"package": "@thirdweb-dev/wallets"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "chain"
									},
									{
										"type": "literal",
										"value": "clientId"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 50,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 52,
									"name": "auth",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Choose which auth providers to show in the wallet connection UI\n\nBy default, all auth methods are enabled, which is equivalent to setting the following:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{\n options: [\"email\", \"google\", \"apple\", \"facebook\"]\n}\n```"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
											"line": 28,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L28"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 53,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 54,
													"name": "options",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
															"line": 29,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L29"
														}
													],
													"type": {
														"type": "array",
														"elementType": {
															"type": "reference",
															"target": {
																"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
																"qualifiedName": "AuthOption"
															},
															"name": "AuthOption",
															"package": "@thirdweb-dev/react"
														}
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [54]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
													"line": 28,
													"character": 9,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L28"
												}
											]
										}
									}
								},
								{
									"id": 51,
									"name": "recommended",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
											"line": 15,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L15"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [52, 51]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/embeddedWallet/types.ts",
									"line": 11,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/types.ts#L11"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 532,
			"name": "ExtensionAndQRScreensLocale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/types.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L1"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 533,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 534,
							"name": "connectionScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L2"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 535,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 536,
											"name": "failed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 3,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L3"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 537,
											"name": "inProgress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 4,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L4"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 538,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 5,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L5"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 539,
											"name": "retry",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 6,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L6"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [536, 537, 538, 539]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 2,
											"character": 20,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L2"
										}
									]
								}
							}
						},
						{
							"id": 540,
							"name": "getStartedLink",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 8,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L8"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 541,
							"name": "getStartedScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 9,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L9"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 542,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 543,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 9,
													"character": 22,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L9"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [543]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 9,
											"character": 20,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L9"
										}
									]
								}
							}
						},
						{
							"id": 544,
							"name": "scanScreen",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 10,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L10"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 545,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 546,
											"name": "instruction",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 10,
													"character": 16,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L10"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [546]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 10,
											"character": 14,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L10"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [534, 540, 541, 544]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/types.ts",
							"line": 1,
							"character": 42,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L1"
						}
					]
				}
			}
		},
		{
			"id": 58,
			"name": "FrameWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 59,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 60,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
									"line": 9,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L9"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [60]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
							"line": 5,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L5"
						}
					]
				}
			}
		},
		{
			"id": 64,
			"name": "LocalWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/localWallet/types.ts",
					"line": 4,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/localWallet/types.ts#L4"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 65,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 66,
							"name": "persist",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ", the encrypted wallet JSON will be stored on localStorage with user's password.\nthe user will not need to enter their password again when they visit the site. Because of this, the wallet can not be auto connected.\n\nIf "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": ", wallet will not be stored, and no password will be required to connect.\nthe wallet will be lost when the user leaves or reloads the page.\n\nBy default, it is set to "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/localWallet/types.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/localWallet/types.ts#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [66]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/localWallet/types.ts",
							"line": 4,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/localWallet/types.ts#L4"
						}
					]
				}
			}
		},
		{
			"id": 70,
			"name": "MagicWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
					"line": 46,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/magic/magicLink.tsx#L46"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../wallets/src/evm/wallets/magic.ts",
							"qualifiedName": "MagicLinkAdditionalOptions"
						},
						"name": "MagicLinkAdditionalOptions",
						"package": "@thirdweb-dev/wallets"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 71,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 72,
									"name": "recommended",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
											"line": 50,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/magic/magicLink.tsx#L50"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [72]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
									"line": 46,
									"character": 68,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/magic/magicLink.tsx#L46"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 76,
			"name": "MetamaskWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 77,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 78,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting MetaMask using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
									"line": 15,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L15"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 79,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [78, 79]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
							"line": 8,
							"character": 42,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L8"
						}
					]
				}
			}
		},
		{
			"id": 635,
			"name": "NetworkSelectorChainProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 37,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L37"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 636,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 637,
							"name": "chain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "`Chain`"
									},
									{
										"kind": "text",
										"text": " object for the chain to be displayed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 41,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L41"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../chains/src/types.ts",
									"qualifiedName": "Chain"
								},
								"name": "Chain",
								"package": "@thirdweb-dev/chains"
							}
						},
						{
							"id": 643,
							"name": "close",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 57,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L57"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 644,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 57,
											"character": 10,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L57"
										}
									],
									"signatures": [
										{
											"id": 645,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "function to close the modal"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 638,
							"name": "switchChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 45,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L45"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 639,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 45,
											"character": 15,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L45"
										}
									],
									"signatures": [
										{
											"id": 640,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "function to be called for switching to the given chain"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 642,
							"name": "switchFailed",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "flag indicating whether the SDK failed to switch to the given chain"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 53,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 641,
							"name": "switching",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "flag indicating whether the SDK is currently switching to the given chain"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 49,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [637, 643, 638, 642, 641]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 37,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L37"
						}
					]
				}
			}
		},
		{
			"id": 617,
			"name": "NetworkSelectorProps",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 60,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L60"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 618,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 624,
							"name": "chains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed in the modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 94,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L94"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 620,
							"name": "onClose",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 86,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L86"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 621,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 86,
											"character": 12,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L86"
										}
									],
									"signatures": [
										{
											"id": 622,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when modal is closed by the user"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 632,
							"name": "onCustomClick",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 118,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L118"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 633,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 118,
											"character": 18,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L118"
										}
									],
									"signatures": [
										{
											"id": 634,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when the \"Add Custom Network\" button is clicked\n\nThe \"Add Custom Network\" button is displayed at the bottom of the modal - only if this prop is provided"
													}
												]
											},
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 628,
							"name": "onSwitch",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 112,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L112"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 629,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
											"line": 112,
											"character": 13,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L112"
										}
									],
									"signatures": [
										{
											"id": 630,
											"name": "__type",
											"variant": "signature",
											"kind": 4096,
											"flags": {},
											"comment": {
												"summary": [
													{
														"kind": "text",
														"text": "Callback to be called when a chain is successfully switched"
													}
												]
											},
											"parameters": [
												{
													"id": 631,
													"name": "chain",
													"variant": "param",
													"kind": 32768,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "the new chain that is switched to"
															}
														]
													},
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../chains/src/types.ts",
															"qualifiedName": "Chain"
														},
														"name": "Chain",
														"package": "@thirdweb-dev/chains"
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									]
								}
							}
						},
						{
							"id": 623,
							"name": "open",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Specify whether the Modal should be open or closed"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 90,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L90"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 625,
							"name": "popularChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed under \"Popular\" section"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 98,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L98"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 626,
							"name": "recentChains",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Array of chains to be displayed under \"Recent\" section"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 102,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L102"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							}
						},
						{
							"id": 627,
							"name": "renderChain",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Override how the chain button is rendered in the Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 106,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L106"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.FC"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 635,
										"name": "NetworkSelectorChainProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "React.FC",
								"package": "@types/react"
							}
						},
						{
							"id": 619,
							"name": "theme",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Theme to use in Modal\n\nEither specify string \"dark\" or \"light\" to use the default themes, or provide a custom theme object.\n\nYou can also use "
									},
									{
										"kind": "code",
										"text": "`darkTheme`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`lightTheme`"
									},
									{
										"kind": "text",
										"text": " functions to use the default themes as base and override it."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```tsx\nimport { darkTheme } from \"@thirdweb-dev/react\";\n\n<NetworkSelector\n open={true}\n theme={darkTheme({\n   colors: {\n     modalBg: \"#000000\",\n   }\n })}\n/>\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
									"line": 82,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L82"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "dark"
									},
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "reference",
										"target": 180,
										"name": "Theme",
										"package": "@thirdweb-dev/react"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [624, 620, 632, 628, 623, 625, 626, 627, 619]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 60,
							"character": 35,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L60"
						}
					]
				}
			}
		},
		{
			"id": 142,
			"name": "OKXWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 143,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 144,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting OKX using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 145,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
									"line": 17,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [144, 145]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
							"line": 5,
							"character": 37,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L5"
						}
					]
				}
			}
		},
		{
			"id": 851,
			"name": "OneKeyWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 852,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 853,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting OneKey wallet using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 854,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
									"line": 17,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [853, 854]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
							"line": 5,
							"character": 40,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L5"
						}
					]
				}
			}
		},
		{
			"id": 83,
			"name": "PaperWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/paper/types.ts",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/types.ts#L5"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Omit"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/connectors/paper/types.ts",
									"qualifiedName": "PaperWalletAdditionalOptions"
								},
								"name": "PaperWalletAdditionalOptions",
								"package": "@thirdweb-dev/wallets"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "chain"
									},
									{
										"type": "literal",
										"value": "clientId"
									}
								]
							}
						],
						"name": "Omit",
						"package": "typescript"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 84,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 86,
									"name": "oauthOptions",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Enable or Disable OAuth logins and specify which providers to use for OAuth\n\nBy default, google is enabled which is equivalent to setting the following:\n\n"
											},
											{
												"kind": "code",
												"text": "```ts\n{\n providers: [\"google\"]\n}\n```"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/paper/types.ts",
											"line": 25,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/types.ts#L25"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reflection",
												"declaration": {
													"id": 87,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 88,
															"name": "providers",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/wallet/wallets/paper/types.ts",
																	"line": 27,
																	"character": 8,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/types.ts#L27"
																}
															],
															"type": {
																"type": "array",
																"elementType": {
																	"type": "reference",
																	"target": {
																		"sourceFileName": "src/wallet/wallets/paper/types.ts",
																		"qualifiedName": "OAuthProvider"
																	},
																	"name": "OAuthProvider",
																	"package": "@thirdweb-dev/react"
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [88]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/wallet/wallets/paper/types.ts",
															"line": 26,
															"character": 6,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/types.ts#L26"
														}
													]
												}
											},
											{
												"type": "literal",
												"value": false
											}
										]
									}
								},
								{
									"id": 85,
									"name": "recommended",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/wallets/paper/types.ts",
											"line": 12,
											"character": 2,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/types.ts#L12"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [86, 85]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/paper/types.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/types.ts#L8"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 92,
			"name": "PhantomWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
					"line": 8,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L8"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 93,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 94,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [94]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
							"line": 8,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L8"
						}
					]
				}
			}
		},
		{
			"id": 163,
			"name": "RabbyWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
					"line": 5,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L5"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 164,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 165,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Rabby using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
									"line": 12,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L12"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 166,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
									"line": 17,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [165, 166]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
							"line": 5,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L5"
						}
					]
				}
			}
		},
		{
			"id": 98,
			"name": "RainbowWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
					"line": 10,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L10"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 99,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 100,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Rainbow using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
									"line": 17,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 101,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
									"line": 22,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [100, 101]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
							"line": 10,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L10"
						}
					]
				}
			}
		},
		{
			"id": 105,
			"name": "SafeWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
					"line": 16,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L16"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 106,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 107,
							"name": "personalWallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An array of personalWallets to show in ConnectWallet Modal to use with SafeWallet"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
									"line": 20,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L20"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../react-core/src/core/types/wallet.ts",
										"qualifiedName": "WalletConfig"
									},
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "any"
										}
									],
									"name": "WalletConfig",
									"package": "@thirdweb-dev/react-core"
								}
							}
						},
						{
							"id": 108,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"recommended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
									"line": 25,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [107, 108]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
							"line": 16,
							"character": 38,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L16"
						}
					]
				}
			}
		},
		{
			"id": 113,
			"name": "SmartWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/smartWallet/types.ts",
					"line": 3,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/smartWallet/types.ts#L3"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": {
							"sourceFileName": "../wallets/src/evm/connectors/smart-wallet/types.ts",
							"qualifiedName": "SmartWalletConfig"
						},
						"name": "SmartWalletConfig",
						"package": "@thirdweb-dev/wallets"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "chain"
							},
							{
								"type": "literal",
								"value": "clientId"
							},
							{
								"type": "literal",
								"value": "secretKey"
							}
						]
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 847,
			"name": "SupportedTokens",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L32"
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Record"
				},
				"typeArguments": [
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 2,
							"name": "TokenInfo",
							"package": "@thirdweb-dev/react"
						}
					}
				],
				"name": "Record",
				"package": "typescript"
			}
		},
		{
			"id": 180,
			"name": "Theme",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 48,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L48"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 181,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 183,
							"name": "colors",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/design-system/index.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L50"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 184,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 191,
											"name": "accentButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 192,
											"name": "accentButtonText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 61,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 187,
											"name": "accentText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 53,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L53"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 209,
											"name": "borderColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 86,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L86"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 213,
											"name": "connectedButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 92,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L92"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 214,
											"name": "connectedButtonBgHover",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 93,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L93"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 188,
											"name": "danger",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 55,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L55"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 199,
											"name": "dropdownBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 71,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L71"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 202,
											"name": "inputAutofillBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L76"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 198,
											"name": "modalBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L70"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 190,
											"name": "modalOverlayBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 58,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 193,
											"name": "primaryButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L63"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 194,
											"name": "primaryButtonText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 64,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L64"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 185,
											"name": "primaryText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 51,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L51"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 203,
											"name": "scrollbarBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 77,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L77"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 195,
											"name": "secondaryButtonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 66,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L66"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 197,
											"name": "secondaryButtonHoverBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 68,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L68"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 196,
											"name": "secondaryButtonText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 67,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L67"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 206,
											"name": "secondaryIconColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 82,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L82"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 207,
											"name": "secondaryIconHoverBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 83,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L83"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 208,
											"name": "secondaryIconHoverColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 84,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L84"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 186,
											"name": "secondaryText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 52,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L52"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 212,
											"name": "selectedTextBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 90,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L90"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 211,
											"name": "selectedTextColor",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L89"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 205,
											"name": "separatorLine",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 80,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L80"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 210,
											"name": "skeletonBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 87,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L87"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 189,
											"name": "success",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 56,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L56"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 200,
											"name": "tooltipBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 73,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L73"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 201,
											"name": "tooltipText",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 74,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L74"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 204,
											"name": "walletSelectorButtonHoverBg",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/design-system/index.ts",
													"line": 78,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L78"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												191, 192, 187, 209, 213, 214, 188, 199, 202, 198, 190,
												193, 194, 185, 203, 195, 197, 196, 206, 207, 208, 186,
												212, 211, 205, 210, 189, 200, 201, 204
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/design-system/index.ts",
											"line": 50,
											"character": 10,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L50"
										}
									]
								}
							}
						},
						{
							"id": 215,
							"name": "fontFamily",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/design-system/index.ts",
									"line": 95,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L95"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 182,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/design-system/index.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L49"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "light"
									},
									{
										"type": "literal",
										"value": "dark"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [183, 215, 182]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 48,
							"character": 20,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L48"
						}
					]
				}
			}
		},
		{
			"id": 216,
			"name": "ThemeOverrides",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 155,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L155"
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "key",
				"parameterType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Exclude"
					},
					"typeArguments": [
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"target": 180,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						},
						{
							"type": "literal",
							"value": "type"
						}
					],
					"name": "Exclude",
					"package": "typescript"
				},
				"templateType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Partial"
					},
					"typeArguments": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": -1,
								"name": "key",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 180,
								"name": "Theme",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"name": "Partial",
					"package": "typescript"
				},
				"optionalModifier": "+"
			}
		},
		{
			"id": 226,
			"name": "ThirdwebLocale",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/types.ts",
					"line": 13,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L13"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 227,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 228,
							"name": "connectWallet",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 14,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L14"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 229,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 230,
											"name": "agreement",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 15,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L15"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 231,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 232,
															"name": "and",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 16,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L16"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 233,
															"name": "prefix",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 17,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L17"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 234,
															"name": "privacyPolicy",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 18,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L18"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 235,
															"name": "termsOfService",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 19,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L19"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [232, 233, 234, 235]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 15,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L15"
														}
													]
												}
											}
										},
										{
											"id": 236,
											"name": "backupWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 21,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L21"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 237,
											"name": "confirmInWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 22,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L22"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 238,
											"name": "connectAWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 23,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L23"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 239,
											"name": "connectedToSmartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 24,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L24"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 240,
											"name": "connecting",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 25,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L25"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 241,
											"name": "continueAsGuest",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 26,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L26"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 242,
											"name": "copyAddress",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 27,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L27"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 243,
											"name": "currentNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 28,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L28"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 244,
											"name": "defaultButtonTitle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L29"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 245,
											"name": "defaultModalTitle",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 30,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L30"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 246,
											"name": "disconnectWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 31,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L31"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 247,
											"name": "download",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 32,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L32"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 248,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 249,
															"name": "android",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 32,
																	"character": 16,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L32"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 250,
															"name": "chrome",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 32,
																	"character": 33,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L32"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 251,
															"name": "iOS",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 32,
																	"character": 49,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L32"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [249, 250, 251]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 32,
															"character": 14,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L32"
														}
													]
												}
											}
										},
										{
											"id": 252,
											"name": "getStarted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 33,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L33"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 253,
											"name": "guest",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 34,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L34"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 254,
											"name": "guestWalletWarning",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 35,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L35"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 255,
											"name": "installed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 36,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L36"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 256,
											"name": "networkSelector",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 37,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L37"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 257,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 258,
															"name": "addCustomNetwork",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 38,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L38"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 259,
															"name": "allNetworks",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 39,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L39"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 260,
															"name": "categoryLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 40,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L40"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 261,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 262,
																			"name": "others",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 41,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L41"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 263,
																			"name": "popular",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 42,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L42"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 264,
																			"name": "recentlyUsed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 43,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L43"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [262, 263, 264]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 40,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L40"
																		}
																	]
																}
															}
														},
														{
															"id": 265,
															"name": "failedToSwitch",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 45,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L45"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 266,
															"name": "inputPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 46,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L46"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 267,
															"name": "loading",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 47,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L47"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 268,
															"name": "mainnets",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 48,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L48"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 269,
															"name": "testnets",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 49,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L49"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 270,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 50,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L50"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																258, 259, 260, 265, 266, 267, 268, 269, 270
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 37,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L37"
														}
													]
												}
											}
										},
										{
											"id": 271,
											"name": "newToWallets",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 52,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L52"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 272,
											"name": "or",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 53,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L53"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 273,
											"name": "personalWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 54,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L54"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 274,
											"name": "receive",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 55,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L55"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 275,
											"name": "receiveFundsScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 56,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L56"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 276,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 277,
															"name": "instruction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 56,
																	"character": 26,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L56"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 278,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 56,
																	"character": 47,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L56"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [277, 278]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 56,
															"character": 24,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L56"
														}
													]
												}
											}
										},
										{
											"id": 279,
											"name": "recommended",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 57,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L57"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 280,
											"name": "requestTestnetFunds",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 58,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 281,
											"name": "send",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 59,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L59"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 282,
											"name": "sendFundsScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L60"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 283,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 284,
															"name": "amount",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 61,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L61"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 285,
															"name": "insufficientFunds",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 62,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L62"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 286,
															"name": "invalidAddress",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 63,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L63"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 287,
															"name": "noTokensFound",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 64,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L64"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 288,
															"name": "searchToken",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 65,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L65"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 289,
															"name": "selectTokenTitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 66,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L66"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 290,
															"name": "sendTo",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 67,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L67"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 291,
															"name": "sending",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 68,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L68"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 292,
															"name": "submitButton",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 69,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L69"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 293,
															"name": "successMessage",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 70,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L70"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 294,
															"name": "title",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 71,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L71"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 295,
															"name": "token",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 72,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L72"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 296,
															"name": "transactionFailed",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 73,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L73"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 297,
															"name": "transactionRejected",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 74,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L74"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																284, 285, 286, 287, 288, 289, 290, 291, 292,
																293, 294, 295, 296, 297
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 60,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L60"
														}
													]
												}
											}
										},
										{
											"id": 298,
											"name": "signIn",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L76"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 299,
											"name": "signatureScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 77,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L77"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 300,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 301,
															"name": "instructionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 78,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L78"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 302,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 303,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 79,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L79"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 304,
																			"name": "signInButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 80,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L80"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 305,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 81,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L81"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [303, 304, 305]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 78,
																			"character": 25,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L78"
																		}
																	]
																}
															}
														},
														{
															"id": 306,
															"name": "signingScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 83,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L83"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 307,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 308,
																			"name": "approveTransactionInSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 84,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L84"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 309,
																			"name": "failedToSignIn",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 85,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L85"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 310,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 86,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L86"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 311,
																			"name": "prompt",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 87,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L87"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 312,
																			"name": "promptForSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 88,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L88"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 313,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 89,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L89"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 314,
																			"name": "tryAgain",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 90,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L90"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				308, 309, 310, 311, 312, 313, 314
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 83,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L83"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [301, 306]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 77,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L77"
														}
													]
												}
											}
										},
										{
											"id": 315,
											"name": "smartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 93,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L93"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 316,
											"name": "switchAccount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 94,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L94"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 317,
											"name": "switchNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 95,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L95"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 318,
											"name": "switchTo",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 96,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L96"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 319,
											"name": "switchingNetwork",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L97"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 320,
											"name": "transactionHistory",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 98,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L98"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 321,
											"name": "welcomeScreen",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 99,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L99"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 322,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 323,
															"name": "defaultSubtitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 99,
																	"character": 21,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L99"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 324,
															"name": "defaultTitle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 99,
																	"character": 46,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L99"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [323, 324]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 99,
															"character": 19,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L99"
														}
													]
												}
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												230, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
												246, 247, 252, 253, 254, 255, 256, 271, 272, 273, 274,
												275, 279, 280, 281, 282, 298, 299, 315, 316, 317, 318,
												319, 320, 321
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 14,
											"character": 17,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L14"
										}
									]
								}
							}
						},
						{
							"id": 325,
							"name": "wallets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/locales/types.ts",
									"line": 101,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L101"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 326,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 327,
											"name": "coin98Wallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 102,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L102"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 328,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 329,
															"name": "connectionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 103,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L103"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 330,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 331,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 104,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L104"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 332,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 105,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L105"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 333,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 106,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L106"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 334,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 107,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L107"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [331, 332, 333, 334]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 103,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L103"
																		}
																	]
																}
															}
														},
														{
															"id": 335,
															"name": "getStartedLink",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 109,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L109"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 336,
															"name": "getStartedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 110,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L110"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 337,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 338,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 110,
																					"character": 26,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L110"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [338]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 110,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L110"
																		}
																	]
																}
															}
														},
														{
															"id": 339,
															"name": "scanScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 111,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L111"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 340,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 341,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 111,
																					"character": 20,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L111"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [341]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 111,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L111"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [329, 335, 336, 339]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 102,
															"character": 18,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L102"
														}
													]
												}
											}
										},
										{
											"id": 342,
											"name": "coinbaseWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 113,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L113"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 343,
											"name": "coreWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 114,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L114"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 344,
											"name": "cryptoDefiWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 115,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L115"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 345,
											"name": "embeddedWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 116,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L116"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 346,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 347,
															"name": "createPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 117,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L117"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 348,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 349,
																			"name": "confirmation",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 118,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L118"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 350,
																			"name": "failedToSetPassword",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 119,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L119"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 351,
																			"name": "inputPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 120,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L120"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 352,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 121,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L121"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 353,
																			"name": "saveInstruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 122,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L122"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 354,
																			"name": "submitButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 123,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L123"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 355,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 124,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L124"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				349, 350, 351, 352, 353, 354, 355
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 117,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L117"
																		}
																	]
																}
															}
														},
														{
															"id": 356,
															"name": "emailLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 126,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L126"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 357,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 358,
																			"name": "enterCodeSendTo",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 127,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L127"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 359,
																			"name": "enterRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 128,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L128"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 360,
																			"name": "failedToSendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 129,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L129"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 361,
																			"name": "invalidCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 130,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L130"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 362,
																			"name": "invalidCodeOrRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 131,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L131"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 363,
																			"name": "newDeviceDetected",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 132,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L132"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 364,
																			"name": "resendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 133,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L133"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 365,
																			"name": "sendingCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 134,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L134"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 366,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 135,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L135"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 367,
																			"name": "verify",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 136,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L136"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				358, 359, 360, 361, 362, 363, 364, 365,
																				366, 367
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 126,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L126"
																		}
																	]
																}
															}
														},
														{
															"id": 368,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 138,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L138"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 369,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 139,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L139"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 370,
															"name": "enterPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 140,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L140"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 371,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 372,
																			"name": "inputPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 141,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L141"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 373,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 142,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L142"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 374,
																			"name": "submitButton",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 143,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L143"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 375,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 144,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L144"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 376,
																			"name": "wrongPassword",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 145,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L145"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [372, 373, 374, 375, 376]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 140,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L140"
																		}
																	]
																}
															}
														},
														{
															"id": 377,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 147,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L147"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 378,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 148,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L148"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 379,
															"name": "signInWithApple",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 149,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L149"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 380,
															"name": "signInWithFacebook",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 150,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L150"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 381,
															"name": "signInWithGoogle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 151,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L151"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 382,
															"name": "socialLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 152,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L152"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 383,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 384,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 153,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L153"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 385,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 154,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L154"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 386,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 155,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L155"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 387,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 156,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L156"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [384, 385, 386, 387]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 152,
																			"character": 25,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L152"
																		}
																	]
																}
															}
														},
														{
															"id": 388,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 158,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L158"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																347, 356, 368, 369, 370, 377, 378, 379, 380,
																381, 382, 388
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 116,
															"character": 20,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L116"
														}
													]
												}
											}
										},
										{
											"id": 389,
											"name": "frameWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 160,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L160"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 390,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 391,
															"name": "connectionFailedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 161,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L161"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 392,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 393,
																			"name": "description",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 162,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L162"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 394,
																			"name": "downloadFrame",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 163,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L163"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 395,
																			"name": "supportLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 164,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L164"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 396,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 165,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L165"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [393, 394, 395, 396]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 161,
																			"character": 30,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L161"
																		}
																	]
																}
															}
														},
														{
															"id": 397,
															"name": "connectionScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 167,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L167"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 398,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 399,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 168,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L168"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 400,
																			"name": "inProgress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 169,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L169"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 401,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 170,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L170"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 402,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 171,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L171"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [399, 400, 401, 402]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 167,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L167"
																		}
																	]
																}
															}
														},
														{
															"id": 403,
															"name": "getStartedLink",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 173,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L173"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 404,
															"name": "getStartedScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 174,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L174"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 405,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 406,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 174,
																					"character": 26,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L174"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [406]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 174,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L174"
																		}
																	]
																}
															}
														},
														{
															"id": 407,
															"name": "scanScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 175,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L175"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 408,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 409,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 175,
																					"character": 20,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L175"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [409]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 175,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L175"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [391, 397, 403, 404, 407]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 160,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L160"
														}
													]
												}
											}
										},
										{
											"id": 410,
											"name": "localWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 177,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L177"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 411,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 412,
															"name": "confirmPasswordLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 178,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L178"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 413,
															"name": "createScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 179,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L179"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 414,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 415,
																			"name": "connecting",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 180,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L180"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 416,
																			"name": "createNewWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 181,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L181"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 417,
																			"name": "importWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 182,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L182"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 418,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 183,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L183"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [415, 416, 417, 418]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 179,
																			"character": 20,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L179"
																		}
																	]
																}
															}
														},
														{
															"id": 419,
															"name": "enterYourPassword",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 185,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L185"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 420,
															"name": "exportScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 186,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L186"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 421,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 422,
																			"name": "description1",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 187,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L187"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 423,
																			"name": "description2",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 188,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L188"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 424,
																			"name": "download",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 189,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L189"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 425,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 190,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L190"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 426,
																			"name": "walletAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 191,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L191"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [422, 423, 424, 425, 426]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 186,
																			"character": 20,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L186"
																		}
																	]
																}
															}
														},
														{
															"id": 427,
															"name": "importScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 193,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L193"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 428,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 429,
																			"name": "description1",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 194,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L194"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 430,
																			"name": "description2",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 195,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L195"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 431,
																			"name": "import",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 196,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L196"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 432,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 197,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L197"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 433,
																			"name": "uploadJSON",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 198,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L198"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 434,
																			"name": "uploadedSuccessfully",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 199,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L199"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [429, 430, 431, 432, 433, 434]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 193,
																			"character": 20,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L193"
																		}
																	]
																}
															}
														},
														{
															"id": 435,
															"name": "passwordLabel",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 201,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L201"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 436,
															"name": "reconnectScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 202,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L202"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 437,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 438,
																			"name": "continue",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 203,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L203"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 439,
																			"name": "createNewWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 204,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L204"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 440,
																			"name": "savedWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 205,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L205"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 441,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 206,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L206"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [438, 439, 440, 441]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 202,
																			"character": 23,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L202"
																		}
																	]
																}
															}
														},
														{
															"id": 442,
															"name": "warningScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 208,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L208"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 443,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 444,
																			"name": "backupWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 209,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L209"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 445,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 210,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L210"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 446,
																			"name": "warning",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 211,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L211"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [444, 445, 446]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 208,
																			"character": 21,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L208"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																412, 413, 419, 420, 427, 435, 436, 442
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 177,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L177"
														}
													]
												}
											}
										},
										{
											"id": 447,
											"name": "magicLink",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 214,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L214"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 448,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 449,
															"name": "countryCodeMissing",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 215,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L215"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 450,
															"name": "emailOrPhoneRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 216,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L216"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 451,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 217,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L217"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 452,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 218,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L218"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 453,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 219,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L219"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 454,
															"name": "invalidEmailOrPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 220,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L220"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 455,
															"name": "invalidPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 221,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L221"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 456,
															"name": "loginWith",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 222,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L222"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 457,
															"name": "loginWithEmailOrPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 223,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L223"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 458,
															"name": "loginWithPhone",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 224,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L224"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 459,
															"name": "phoneRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 225,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L225"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 460,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 226,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L226"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 461,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 227,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L227"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																449, 450, 451, 452, 453, 454, 455, 456, 457,
																458, 459, 460, 461
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 214,
															"character": 15,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L214"
														}
													]
												}
											}
										},
										{
											"id": 462,
											"name": "metamaskWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 229,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L229"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 463,
											"name": "okxWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 230,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L230"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 464,
											"name": "oneKeyWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 231,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L231"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 465,
											"name": "paperWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 232,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L232"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 466,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 467,
															"name": "emailLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 233,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L233"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 468,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 469,
																			"name": "enterCodeSendTo",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 234,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L234"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 470,
																			"name": "enterRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 235,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L235"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 471,
																			"name": "failedToSendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 236,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L236"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 472,
																			"name": "invalidCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 237,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L237"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 473,
																			"name": "invalidCodeOrRecoveryCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 238,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L238"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 474,
																			"name": "newDeviceDetected",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 239,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L239"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 475,
																			"name": "resendCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 240,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L240"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 476,
																			"name": "sendingCode",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 241,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L241"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 477,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 242,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L242"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 478,
																			"name": "verify",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 243,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L243"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				469, 470, 471, 472, 473, 474, 475, 476,
																				477, 478
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 233,
																			"character": 24,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L233"
																		}
																	]
																}
															}
														},
														{
															"id": 479,
															"name": "emailPlaceholder",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 245,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L245"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 480,
															"name": "emailRequired",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 246,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L246"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 481,
															"name": "googleLoginScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 247,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L247"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 482,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 483,
																			"name": "failed",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 248,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L248"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 484,
																			"name": "instruction",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 249,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L249"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 485,
																			"name": "retry",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 250,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L250"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 486,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 251,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L251"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [483, 484, 485, 486]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 247,
																			"character": 25,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L247"
																		}
																	]
																}
															}
														},
														{
															"id": 487,
															"name": "invalidEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 253,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L253"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 488,
															"name": "signIn",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 254,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L254"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 489,
															"name": "signInWithGoogle",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 255,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L255"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 490,
															"name": "submitEmail",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 256,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L256"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [
																467, 479, 480, 481, 487, 488, 489, 490
															]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 232,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L232"
														}
													]
												}
											}
										},
										{
											"id": 491,
											"name": "phantomWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 258,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L258"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 492,
											"name": "rabbyWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 259,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L259"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 493,
											"name": "rainbowWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 260,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L260"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 494,
											"name": "safeWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 261,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L261"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 495,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 496,
															"name": "accountDetailsScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 262,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L262"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 497,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 498,
																			"name": "connectToSafe",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 263,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L263"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 499,
																			"name": "connecting",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 264,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L264"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 500,
																			"name": "dashboardLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 265,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L265"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 501,
																			"name": "failedToConnect",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 266,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L266"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 502,
																			"name": "failedToSwitch",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 267,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L267"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 503,
																			"name": "findSafeAddressIn",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 268,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L268"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 504,
																			"name": "invalidChainConfig",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 269,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L269"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 505,
																			"name": "mainnets",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 270,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L270"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 506,
																			"name": "network",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 271,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L271"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 507,
																			"name": "safeAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 272,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L272"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 508,
																			"name": "selectNetworkPlaceholder",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 273,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L273"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 509,
																			"name": "switchNetwork",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 274,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L274"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 510,
																			"name": "switchingNetwork",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 275,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L275"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 511,
																			"name": "testnets",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 276,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L276"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 512,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 277,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L277"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [
																				498, 499, 500, 501, 502, 503, 504, 505,
																				506, 507, 508, 509, 510, 511, 512
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 262,
																			"character": 28,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L262"
																		}
																	]
																}
															}
														},
														{
															"id": 513,
															"name": "connectWalletScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 279,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L279"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 514,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 515,
																			"name": "learnMoreLink",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 280,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L280"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 516,
																			"name": "subtitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 281,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L281"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 517,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 282,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L282"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [515, 516, 517]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 279,
																			"character": 27,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L279"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [496, 513]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 261,
															"character": 16,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L261"
														}
													]
												}
											}
										},
										{
											"id": 518,
											"name": "smartWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 285,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L285"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 519,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 520,
															"name": "connecting",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 286,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L286"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 521,
															"name": "failedToConnect",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 287,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L287"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 522,
															"name": "wrongNetworkScreen",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 288,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L288"
																}
															],
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 523,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 524,
																			"name": "failedToSwitch",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 289,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L289"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 525,
																			"name": "subtitle",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 290,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L290"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		},
																		{
																			"id": 526,
																			"name": "title",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/locales/types.ts",
																					"line": 291,
																					"character": 8,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L291"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [524, 525, 526]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/locales/types.ts",
																			"line": 288,
																			"character": 26,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L288"
																		}
																	]
																}
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [520, 521, 522]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 285,
															"character": 17,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L285"
														}
													]
												}
											}
										},
										{
											"id": 527,
											"name": "trustWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 294,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L294"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										},
										{
											"id": 528,
											"name": "walletConnect",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 295,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L295"
												}
											],
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 529,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 530,
															"name": "scanInstruction",
															"variant": "declaration",
															"kind": 1024,
															"flags": {},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/locales/types.ts",
																	"line": 295,
																	"character": 21,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L295"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [530]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/locales/types.ts",
															"line": 295,
															"character": 19,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L295"
														}
													]
												}
											}
										},
										{
											"id": 531,
											"name": "zerionWallet",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/locales/types.ts",
													"line": 296,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L296"
												}
											],
											"type": {
												"type": "reference",
												"target": 532,
												"name": "ExtensionAndQRScreensLocale",
												"package": "@thirdweb-dev/react"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												327, 342, 343, 344, 345, 389, 410, 447, 462, 463, 464,
												465, 491, 492, 493, 494, 518, 527, 528, 531
											]
										}
									],
									"sources": [
										{
											"fileName": "packages/react/src/evm/locales/types.ts",
											"line": 101,
											"character": 11,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L101"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [228, 325]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/types.ts",
							"line": 13,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/types.ts#L13"
						}
					]
				}
			}
		},
		{
			"id": 2,
			"name": "TokenInfo",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 1,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L1"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 6,
							"name": "address",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 4,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L4"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 7,
							"name": "icon",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 5,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L5"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 4,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 2,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L2"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 5,
							"name": "symbol",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
									"line": 3,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L3"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [6, 7, 4, 5]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
							"line": 1,
							"character": 24,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L1"
						}
					]
				}
			}
		},
		{
			"id": 117,
			"name": "TrustWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
					"line": 7,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L7"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 118,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 119,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting Trust using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
									"line": 14,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 120,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
									"line": 19,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [119, 120]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
							"line": 7,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L7"
						}
					]
				}
			}
		},
		{
			"id": 596,
			"name": "WelcomeScreen",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Render custom Welcome Screen in \"wide\" ConnectWallet Modal either by passing a custom React component or by passing an object with custom title, subtitle and image"
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "### Custom React component\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<ConnectWallet\n welcomeScreen={() => <div style={{\n   height: '100%',\n }}>\n   ...\n </div>}\n/>\n```"
							},
							{
								"kind": "text",
								"text": "\n\n### Custom title, subtitle and image\n"
							},
							{
								"kind": "code",
								"text": "```tsx\n<ConnectWallet\n welcomeScreen={{\n   title: 'Custom Title',\n   subtitle: 'Custom Subtitle',\n   img: {\n     src: 'https://example.com/image.png',\n     width: 100,\n     height: 100,\n   }\n })\n/>\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L32"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 597,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 600,
									"name": "img",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom image"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 45,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L45"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 601,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 604,
													"name": "height",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image height"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 57,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L57"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												},
												{
													"id": 602,
													"name": "src",
													"variant": "declaration",
													"kind": 1024,
													"flags": {},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image source"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 49,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L49"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "string"
													}
												},
												{
													"id": 603,
													"name": "width",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"comment": {
														"summary": [
															{
																"kind": "text",
																"text": "Image width"
															}
														]
													},
													"sources": [
														{
															"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
															"line": 53,
															"character": 8,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L53"
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "number"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [604, 602, 603]
												}
											],
											"sources": [
												{
													"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
													"line": 45,
													"character": 12,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L45"
												}
											]
										}
									}
								},
								{
									"id": 599,
									"name": "subtitle",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom subtitle"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 41,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L41"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 598,
									"name": "title",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Custom title"
											}
										]
									},
									"sources": [
										{
											"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
											"line": 37,
											"character": 6,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L37"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [600, 599, 598]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L33"
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 605,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/ConnectWallet/screens/types.ts",
									"line": 60,
									"character": 5,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/screens/types.ts#L60"
								}
							],
							"signatures": [
								{
									"id": 606,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.ReactNode"
										},
										"name": "React.ReactNode",
										"package": "@types/react"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 135,
			"name": "ZerionkWalletConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
					"line": 7,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L7"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 136,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 137,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "When connecting MetaMask using the QR Code - Wallet Connect connector is used which requires a project id.\nThis project id is Your project’s unique identifier for wallet connect that can be obtained at cloud.walletconnect.com.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
									"line": 14,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L14"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 138,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
									"line": 19,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L19"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [137, 138]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
							"line": 7,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L7"
						}
					]
				}
			}
		},
		{
			"id": 124,
			"name": "walletConnectConfigOptions",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
					"line": 9,
					"character": 12,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L9"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 125,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 126,
							"name": "projectId",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Your project’s unique identifier that can be obtained at https://cloud.walletconnect.com/\n\nEnables following functionalities within Web3Modal: wallet and chain logos, optional WalletConnect RPC, support for all wallets from our Explorer and WalletConnect v2 support. Defaults to undefined.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options#projectid-required"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
									"line": 17,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 127,
							"name": "qrModalOptions",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "options to customize QR Modal.\n\nhttps://docs.walletconnect.com/2.0/web3modal/options"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
									"line": 24,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L24"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WC2_QRModalOptions"
								},
								"name": "WC2_QRModalOptions",
								"package": "@thirdweb-dev/wallets"
							}
						},
						{
							"id": 128,
							"name": "recommended",
							"variant": "declaration",
							"kind": 1024,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "If true, the wallet will be tagged as \"reccomended\" in ConnectWallet Modal"
									}
								]
							},
							"sources": [
								{
									"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
									"line": 29,
									"character": 2,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [126, 127, 128]
						}
					],
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 9,
							"character": 41,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L9"
						}
					]
				}
			}
		},
		{
			"id": 1,
			"name": "defaultTokens",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Default tokens shown in "
					},
					{
						"kind": "code",
						"text": "`ConnectWallet`"
					},
					{
						"kind": "text",
						"text": "'s SendFunds screen for each network.\n\nYou can use the default tokens as a starting point for your own list of tokens and override tokens for specific networks."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "text",
								"text": "Below example shows adding a custom token for the Ethereum mainnet at start of the list of default tokens for the Ethereum mainnet. Here the "
							},
							{
								"kind": "code",
								"text": "`1`"
							},
							{
								"kind": "text",
								"text": " represents the chainId of Ethereum mainnet.\n\n"
							},
							{
								"kind": "code",
								"text": "```tsx\nconst ethereumChainId = 1;\n\n<ConnectWallet supportedTokens={{\n ...defaultTokens,\n [ethereumChainId]: [\n   {\n     address: 'YOUR_TOKEN_ADDRESS',\n     name: 'YOUR_TOKEN_NAME',\n     symbol: 'YOUR_TOKEN_SYMBOL',\n     icon: 'YOUR_TOKEN_ICON_URL'\n   },\n   ...defaultTokens[ethereumChainId],\n ]\n}} />\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/defaultTokens.ts",
					"line": 59,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/defaultTokens.ts#L59"
				}
			],
			"type": {
				"type": "reference",
				"target": 847,
				"name": "SupportedTokens",
				"package": "@thirdweb-dev/react"
			},
			"defaultValue": "..."
		},
		{
			"id": 8,
			"name": "defaultWallets",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The default wallets that are used by the "
					},
					{
						"kind": "code",
						"text": "`ThirdwebProvider`"
					},
					{
						"kind": "text",
						"text": " if no "
					},
					{
						"kind": "code",
						"text": "`supportedWallets`"
					},
					{
						"kind": "text",
						"text": " prop is provided.\n\nThe defaults wallets are:\n- Metamask\n- Coinbase\n- WalletConnect\n- TrustWallet\n- RainbowWallet\n- ZerionWallet\n- PhantomWallet"
					}
				]
			},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defaultWallets.ts",
					"line": 22,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/defaultWallets.ts#L22"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": {
						"sourceFileName": "../react-core/src/core/types/wallet.ts",
						"qualifiedName": "WalletConfig"
					},
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "any"
						}
					],
					"name": "WalletConfig",
					"package": "@thirdweb-dev/react-core"
				}
			},
			"defaultValue": "..."
		},
		{
			"id": 561,
			"name": "ConnectWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
					"line": 322,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L322"
				}
			],
			"signatures": [
				{
					"id": 562,
					"name": "ConnectWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A component that allows the user to connect their wallet.\n\nit renders a button which when clicked opens a modal to allow users to connect to wallets specified in the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "'s supportedWallets prop.\n\nThis component must be descendant of "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx",
							"line": 322,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/ConnectWallet.tsx#L322"
						}
					],
					"parameters": [
						{
							"id": 563,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 564,
								"name": "ConnectWalletProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 863,
			"name": "MediaRenderer",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 379,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L379"
				}
			],
			"signatures": [
				{
					"id": 864,
					"name": "MediaRenderer",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This component can be used to render any media type, including image, audio, video, and html files.\nIts convenient for rendering NFT media files, as these can be a variety of different types.\n\nThe component falls back to a external link if the media type is not supported.\n\nThe default size is 300px by 300px, but this can be changed using the "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " props."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "We can take a video file hosted on IPFS and render it using this component as follows\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  return <MediaRenderer\n    src=\"ipfs://Qmb9ZV5yznE4C4YvyJe8DVFv1LSVkebdekY6HjLVaKmHZi\"\n    alt=\"A mp4 video\"\n  />\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nYou can try switching out the "
									},
									{
										"kind": "code",
										"text": "`src`"
									},
									{
										"kind": "text",
										"text": " prop to different types of URLs and media types to explore the possibilities."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 865,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 730,
										"name": "MediaRendererProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 614,
			"name": "NetworkSelector",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
					"line": 153,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L153"
				}
			],
			"signatures": [
				{
					"id": 615,
					"name": "NetworkSelector",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Renders a Network Switcher Modal that allows users to switch their wallet to a different network."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```tsx\nimport { NetworkSelector } from \"@thirdweb-dev/react\";\n\nfunction Example() {\n const [open, setOpen] = useState(false);\n return (\n   <div>\n     <button onClick={() => setOpen(true)}>Open Modal</button>\n     <NetworkSelector open={open} onClose={() => setOpen(false)} />\n   </div>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx",
							"line": 153,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/ConnectWallet/NetworkSelector.tsx#L153"
						}
					],
					"parameters": [
						{
							"id": 616,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 617,
								"name": "NetworkSelectorProps",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 880,
			"name": "ThirdwebNftMedia",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/NftMedia.tsx",
					"line": 47,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/NftMedia.tsx#L47"
				}
			],
			"signatures": [
				{
					"id": 881,
					"name": "ThirdwebNftMedia",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This component can be used to render NFTs from the thirdweb SDK.\nIt will render the animation_url if it exists, otherwise it will render the image.\nThe default size is 300px by 300px, but this can be changed using the "
							},
							{
								"kind": "code",
								"text": "`width`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`height`"
							},
							{
								"kind": "text",
								"text": " props.\n\nProps: "
							},
							{
								"kind": "inline-tag",
								"tag": "@link",
								"text": "ThirdwebNftMediaProps",
								"target": 869,
								"tsLinkText": ""
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```jsx\nimport { ThirdwebNftMedia, useContract, useNFT } from \"@thirdweb-dev/react\";\nexport default function NFTCollectionRender() {\n  const { contract } = useContract(<your-contract-address>);\n  const { data: nft, isLoading } = useNFT(contract, 0);\n\n  return (\n    <div>\n      {!isLoading && nft ? (\n        <ThirdwebNftMedia metadata={nft.metadata} />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"line": 392,
							"character": 8
						}
					],
					"parameters": [
						{
							"id": 882,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "intersection",
								"types": [
									{
										"type": "reference",
										"target": 869,
										"name": "ThirdwebNftMediaProps",
										"package": "@thirdweb-dev/react"
									},
									{
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
											"qualifiedName": "React.RefAttributes"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.dom.d.ts",
													"qualifiedName": "HTMLMediaElement"
												},
												"name": "HTMLMediaElement",
												"package": "typescript"
											}
										],
										"name": "RefAttributes",
										"package": "@types/react",
										"qualifiedName": "React.RefAttributes"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
							"qualifiedName": "React.ReactNode"
						},
						"name": "ReactNode",
						"package": "@types/react",
						"qualifiedName": "React.ReactNode"
					}
				}
			]
		},
		{
			"id": 700,
			"name": "ThirdwebProvider",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
					"line": 187,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L187"
				}
			],
			"signatures": [
				{
					"id": 701,
					"name": "ThirdwebProvider",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`<ThirdwebProvider />`"
							},
							{
								"kind": "text",
								"text": " component lets you control what networks you want users to connect to,\nwhat types of wallets can connect to your app, and the settings for the [Thirdweb SDK](https://docs.thirdweb.com/typescript)."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "You can wrap your application with the provider as follows:\n\n"
									},
									{
										"kind": "code",
										"text": "```jsx title=\"App.jsx\"\nimport { ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/thirdweb-provider.tsx",
							"line": 187,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/thirdweb-provider.tsx#L187"
						}
					],
					"typeParameter": [
						{
							"id": 702,
							"name": "TChains",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "../chains/src/types.ts",
										"qualifiedName": "Chain"
									},
									"name": "Chain",
									"package": "@thirdweb-dev/chains"
								}
							},
							"default": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "reflection",
											"declaration": {
												"id": 703,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2313,
														"character": 37
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 704,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2370,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 705,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2413,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 706,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2463,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 707,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2512,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 708,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2545,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 709,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2585,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 710,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2615,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 711,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2665,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 712,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2702,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 713,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2751,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 714,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2786,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 715,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2826,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 716,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2855,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 717,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2900,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 718,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2935,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 719,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2967,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 720,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 2996,
														"character": 4
													}
												]
											}
										},
										{
											"type": "reflection",
											"declaration": {
												"id": 721,
												"name": "__type",
												"variant": "declaration",
												"kind": 65536,
												"flags": {},
												"sources": [
													{
														"fileName": "packages/chains/dist/declarations/src/index.d.ts",
														"line": 3020,
														"character": 4
													}
												]
											}
										}
									]
								}
							}
						}
					],
					"parameters": [
						{
							"id": 722,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 724,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TChains",
												"refersToTypeParameter": true
											}
										],
										"name": "ThirdwebProviderProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 650,
			"name": "Web3Button",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
					"line": 221,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L221"
				}
			],
			"signatures": [
				{
					"id": 651,
					"name": "Web3Button",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Button that executes a function on a smart contract from the connected wallet when clicked.\n\nIt ensures the following criteria before attempting to call the contract function:\n\n1. There is a connected wallet (if there is not, it renders a "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component instead.\n\n2. The connected wallet is on the correct network as specified in the "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": "'s "
							},
							{
								"kind": "code",
								"text": "`activeChain`"
							},
							{
								"kind": "text",
								"text": " prop. if it is not, it renders a \"switch network\" button instead.\n\nIf the action you are performing is async, make sure to return a "
							},
							{
								"kind": "code",
								"text": "`Promise`"
							},
							{
								"kind": "text",
								"text": " from the action function so that the SDK knows when the action is complete. This can be done by either using async/await or by returning a "
							},
							{
								"kind": "code",
								"text": "`Promise`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```javascript\nimport { Web3Button } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n return (\n  <div>\n    <Web3Button\n      contractAddress=\"0x...\"\n      action={(contract) => contract.erc721.transfer(\"0x...\", 1)}\n    >\n      Claim NFT\n    </Web3Button>\n  </div>\n )\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/Web3Button/index.tsx",
							"line": 221,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/Web3Button/index.tsx#L221"
						}
					],
					"typeParameter": [
						{
							"id": 652,
							"name": "TAction",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 696,
								"name": "ActionFn",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"parameters": [
						{
							"id": 653,
							"name": "props",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
									"qualifiedName": "React.PropsWithChildren"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 654,
										"typeArguments": [
											{
												"type": "reference",
												"target": -1,
												"name": "TAction",
												"refersToTypeParameter": true
											}
										],
										"name": "Web3ButtonProps",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "PropsWithChildren",
								"package": "@types/react",
								"qualifiedName": "React.PropsWithChildren"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/jsx-runtime.d.ts",
							"qualifiedName": "JSX.Element"
						},
						"name": "Element",
						"package": "@types/react",
						"qualifiedName": "JSX.Element"
					}
				}
			]
		},
		{
			"id": 32,
			"name": "bloctoWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
					"line": 54,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L54"
				}
			],
			"signatures": [
				{
					"id": 33,
					"name": "bloctoWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Blocto Wallet](https://blocto.io/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[bloctoWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst bloctoWalletConfig = bloctoWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(bloctoWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx",
							"line": 54,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/blocto/bloctoWallet.tsx#L54"
						}
					],
					"parameters": [
						{
							"id": 34,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 35,
								"name": "BloctoWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/blocto.ts",
									"qualifiedName": "BloctoWallet"
								},
								"name": "BloctoWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 167,
			"name": "coin98Wallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
					"line": 58,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L58"
				}
			],
			"signatures": [
				{
					"id": 168,
					"name": "coin98Wallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Coin98 Wallet](https://coin98.com/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[coin98Wallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst coin98Config = coin98Wallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(coin98Config, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx",
							"line": 58,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coin98/coin98Wallet.tsx#L58"
						}
					],
					"parameters": [
						{
							"id": 169,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 170,
								"name": "Coin98WalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/coin98.ts",
									"qualifiedName": "Coin98Wallet"
								},
								"name": "Coin98Wallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 39,
			"name": "coinbaseWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
					"line": 67,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L67"
				}
			],
			"signatures": [
				{
					"id": 40,
					"name": "coinbaseWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Coinbase Wallet](https://www.coinbase.com/wallet) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[coinbaseWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst coinbaseWalletConfig = coinbaseWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(coinbaseWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx",
							"line": 67,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coinbase/coinbaseWallet.tsx#L67"
						}
					],
					"parameters": [
						{
							"id": 41,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 42,
								"name": "CoinbaseWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/coinbase-wallet.ts",
									"qualifiedName": "CoinbaseWallet"
								},
								"name": "CoinbaseWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 146,
			"name": "coreWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
					"line": 61,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L61"
				}
			],
			"signatures": [
				{
					"id": 147,
					"name": "coreWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Core Wallet](https://core.app/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[coreWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst coreWalletConfig = coreWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(coreWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx",
							"line": 61,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/coreWallet/coreWallet.tsx#L61"
						}
					],
					"parameters": [
						{
							"id": 148,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 149,
								"name": "CoreWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/core-wallet.ts",
									"qualifiedName": "CoreWallet"
								},
								"name": "CoreWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 153,
			"name": "cryptoDefiWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
					"line": 61,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L61"
				}
			],
			"signatures": [
				{
					"id": 154,
					"name": "cryptoDefiWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Crypto.com Defi Wallet](https://crypto.com/defi-wallet) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[cryptoDefiWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst cryptoDefiWalletConfig = cryptoDefiWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(cryptoDefiWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
							"line": 61,
							"character": 32,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx#L61"
						}
					],
					"parameters": [
						{
							"id": 155,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 156,
								"name": "CryptoDefiWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/crypto-defi-wallet.ts",
									"qualifiedName": "CryptoDefiWallet"
								},
								"name": "CryptoDefiWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 174,
			"name": "darkTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 239,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L239"
				}
			],
			"signatures": [
				{
					"id": 175,
					"name": "darkTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a custom dark theme object by using the default dark theme as a base and applying overrides."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst customTheme = darkTheme({\n colors: {\n  modalBg: \"red\",\n }\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 239,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L239"
						}
					],
					"parameters": [
						{
							"id": 176,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 216,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 180,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 46,
			"name": "embeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
					"line": 135,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L135"
				}
			],
			"signatures": [
				{
					"id": 47,
					"name": "embeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Embedded Wallet](https://portal.thirdweb.com/wallet/embedded-wallet) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[embeddedWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useEmbeddedWallet\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe hook will return all the necessary functions you'll need to authenticate and connect to the embedded wallet.\n\n### Connect with Google/Facebook/Apple sign in\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useEmbeddedWallet } from \"@thirdweb-dev/react\";\n\nfunction App() {\n  const { connect } = useEmbeddedWallet();\n\n  async function handleConnect() {\n    const wallet = await connect({\n      strategy: \"google\", // or \"facebook\" or \"apple\"\n    });\n\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Connect with Email verification\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction App() {\n  const { connect, sendVerificationEmail } = useEmbeddedWallet();\n\n  const preLogin = async (email: string) => {\n    // send email verification code\n    await sendVerificationEmail({ email });\n  };\n\n  const handleLogin = async (email: string, verificationCode: string) => {\n    // verify email and connect\n    await connect({\n      strategy: \"email_verification\",\n      email,\n      verificationCode,\n    });\n  };\n\n  return <div> ... </div>;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Connecting with Iframe\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nfunction App() {\n  const { connect } = useEmbeddedWallet();\n\n  const handleConnect = async () => {\n    await connect({\n      strategy: \"iframe\",\n    });\n  };\n\n  return <div> ... </div>;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Connect with your own auth with JWT\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n function App() {\n  const { connect } = useEmbeddedWallet();\n\n  async function handleConnect() {\n    const wallet = await connect({\n      strategy: \"jwt\",\n      jwt: \"your_jwt_token\",\n    });\n\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
							"line": 135,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/embeddedWallet/embeddedWallet.tsx#L135"
						}
					],
					"parameters": [
						{
							"id": 48,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 49,
								"name": "EmbeddedWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
									"qualifiedName": "EmbeddedWallet"
								},
								"name": "EmbeddedWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 217,
			"name": "en",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/en.ts",
					"line": 349,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/en.ts#L349"
				}
			],
			"signatures": [
				{
					"id": 218,
					"name": "en",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default English locale object to be set on "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default English Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst english = en(); // default English locale object\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override English Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst english = en({\n connectWallet: {\n   signIn: \"Sign in!\"\n }\n})\n\n<ThirdwebProvider locale={english}>\n <App />\n</ThirdwebProvider>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/en.ts",
							"line": 349,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/en.ts#L349"
						}
					],
					"parameters": [
						{
							"id": 219,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 226,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 226,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 223,
			"name": "es",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/es.ts",
					"line": 357,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/es.ts#L357"
				}
			],
			"signatures": [
				{
					"id": 224,
					"name": "es",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default Spanish locale object to be set on "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default Spanish Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst spanish = es(); // default English locale object\n\n<ThirdwebProvider locale={english}> <App /> </ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override Spanish Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst spanish = es({\n connectWallet: {\n   signIn: \"Iniciar sesión\"\n }\n})\n\n<ThirdwebProvider locale={spanish}>\n <App />\n</ThirdwebProvider>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/es.ts",
							"line": 357,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/es.ts#L357"
						}
					],
					"parameters": [
						{
							"id": 225,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 226,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 226,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 55,
			"name": "frameWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
					"line": 50,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L50"
				}
			],
			"signatures": [
				{
					"id": 56,
					"name": "frameWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Frame Wallet](https://frame.sh/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[frameWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst frameWalletConfig = frameWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(frameWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/frame/frameWallet.tsx",
							"line": 50,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/frame/frameWallet.tsx#L50"
						}
					],
					"parameters": [
						{
							"id": 57,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 58,
								"name": "FrameWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/frame.ts",
									"qualifiedName": "FrameWallet"
								},
								"name": "FrameWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 220,
			"name": "ja",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/locales/ja.ts",
					"line": 351,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/ja.ts#L351"
				}
			],
			"signatures": [
				{
					"id": 221,
					"name": "ja",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Calling this function will return the default Japanese locale object to be set on "
							},
							{
								"kind": "code",
								"text": "`ThirdwebProvider`"
							},
							{
								"kind": "text",
								"text": " to localize the thirdweb components.\n\nYou can also overrides parts of the default locale object by passing an object with the same structure as the default locale object and only those parts will be overridden."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Use default Japanese Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst japanese = ja(); // default English locale object\n\n<ThirdwebProvider locale={japanese}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Override Japanese Locale\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst japanese = ja({\n connectWallet: {\n   signIn: \"サインイン\"\n }\n})\n\n<ThirdwebProvider locale={japanese}> <App /> </ThirdwebProvider>\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/locales/ja.ts",
							"line": 351,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/locales/ja.ts#L351"
						}
					],
					"parameters": [
						{
							"id": 222,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/evm/utils/applyOverrides.ts",
									"qualifiedName": "DeepPartial"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 226,
										"name": "ThirdwebLocale",
										"package": "@thirdweb-dev/react"
									}
								],
								"name": "DeepPartial",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 226,
						"name": "ThirdwebLocale",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 177,
			"name": "lightTheme",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/design-system/index.ts",
					"line": 220,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L220"
				}
			],
			"signatures": [
				{
					"id": 178,
					"name": "lightTheme",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Create a custom light theme object by using the default dark theme as a base and applying overrides."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nconst customTheme = lightTheme({\n colors: {\n  modalBg: \"red\",\n }\n})\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/design-system/index.ts",
							"line": 220,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/design-system/index.ts#L220"
						}
					],
					"parameters": [
						{
							"id": 179,
							"name": "overrides",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 216,
								"name": "ThemeOverrides",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": 180,
						"name": "Theme",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 61,
			"name": "localWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
					"line": 49,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L49"
				}
			],
			"signatures": [
				{
					"id": 62,
					"name": "localWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for Local wallet which allows integrating a \"Guest Login\" experience to app.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[localeWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst localeWalletConfig = localeWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(localeWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/localWallet/localWallet.tsx",
							"line": 49,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/localWallet/localWallet.tsx#L49"
						}
					],
					"parameters": [
						{
							"id": 63,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 64,
								"name": "LocalWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
							"qualifiedName": "LocalWalletConfig"
						},
						"name": "LocalWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 67,
			"name": "magicLink",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
					"line": 95,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/magic/magicLink.tsx#L95"
				}
			],
			"signatures": [
				{
					"id": 68,
					"name": "magicLink",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Magic Link](https://magic.link/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[magicLink({\n  apiKey: \"MAGIC_API_KEY,\n})]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst magicLinkConfig = magicLink({\n  apiKey: \"MAGIC_API_KEY,\n});\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(magicLinkConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/magic/magicLink.tsx",
							"line": 95,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/magic/magicLink.tsx#L95"
						}
					],
					"parameters": [
						{
							"id": 69,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 70,
								"name": "MagicWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/magic/types.ts",
							"qualifiedName": "ConfiguredMagicLinkWallet"
						},
						"name": "ConfiguredMagicLinkWallet",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 73,
			"name": "metamaskWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
					"line": 61,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L61"
				}
			],
			"signatures": [
				{
					"id": 74,
					"name": "metamaskWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [MetaMask Wallet](https://metamask.io/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[metamaskWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst metamaskWalletConfig = metamaskWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(metamaskWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx",
							"line": 61,
							"character": 30,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/metamask/metamaskWallet.tsx#L61"
						}
					],
					"parameters": [
						{
							"id": 75,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 76,
								"name": "MetamaskWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/metamask.ts",
									"qualifiedName": "MetaMaskWallet"
								},
								"name": "MetaMaskWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 139,
			"name": "okxWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
					"line": 58,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L58"
				}
			],
			"signatures": [
				{
					"id": 140,
					"name": "okxWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [OKX Wallet](https://www.okx.com/web3) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[okxWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst okxWalletConfig = okxWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(okxWalletConfig);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/okx/okxWallet.tsx",
							"line": 58,
							"character": 25,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/okx/okxWallet.tsx#L58"
						}
					],
					"parameters": [
						{
							"id": 141,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 142,
								"name": "OKXWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/okx.ts",
									"qualifiedName": "OKXWallet"
								},
								"name": "OKXWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 848,
			"name": "oneKeyWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
					"line": 58,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L58"
				}
			],
			"signatures": [
				{
					"id": 849,
					"name": "oneKeyWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Onekey Wallet](https://onekey.so/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[oneKeyWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst oneKeyWalletConfig = oneKeyWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(oneKeyWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx",
							"line": 58,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/oneKey/oneKeyWallet.tsx#L58"
						}
					],
					"parameters": [
						{
							"id": 850,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 851,
								"name": "OneKeyWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/onekey.ts",
									"qualifiedName": "OneKeyWallet"
								},
								"name": "OneKeyWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 80,
			"name": "paperWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/paper/paperWallet.tsx",
					"line": 29,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/paperWallet.tsx#L29"
				}
			],
			"signatures": [
				{
					"id": 81,
					"name": "paperWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Paper Wallet](https://withpaper.com/) which allows integrating the wallet with React."
							}
						],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "We have deprecated PaperWallet in favor of our "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "EmbeddedWallet"
									},
									{
										"kind": "text",
										"text": " which adds support for more sign in methods.\nLearn more here: https://portal.thirdweb.com/embedded-wallet"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/paper/paperWallet.tsx",
							"line": 29,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/paper/paperWallet.tsx#L29"
						}
					],
					"parameters": [
						{
							"id": 82,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 83,
								"name": "PaperWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/paper-wallet.ts",
									"qualifiedName": "PaperWallet"
								},
								"name": "PaperWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 89,
			"name": "phantomWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
					"line": 53,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L53"
				}
			],
			"signatures": [
				{
					"id": 90,
					"name": "phantomWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Phantom Wallet](https://phantom.app/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[phantomWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst phantomWalletConfig = phantomWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(phantomWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/phantom/phantomWallet.tsx",
							"line": 53,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/phantom/phantomWallet.tsx#L53"
						}
					],
					"parameters": [
						{
							"id": 91,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 92,
								"name": "PhantomWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/phantom.ts",
									"qualifiedName": "PhantomWallet"
								},
								"name": "PhantomWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 160,
			"name": "rabbyWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
					"line": 58,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L58"
				}
			],
			"signatures": [
				{
					"id": 161,
					"name": "rabbyWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Rabby Wallet](https://rabby.io/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[rabbyWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst rabbyWalletConfig = rabbyWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(rabbyWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx",
							"line": 58,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rabby/rabbyWallet.tsx#L58"
						}
					],
					"parameters": [
						{
							"id": 162,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 163,
								"name": "RabbyWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/rabby.ts",
									"qualifiedName": "RabbyWallet"
								},
								"name": "RabbyWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 95,
			"name": "rainbowWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
					"line": 63,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L63"
				}
			],
			"signatures": [
				{
					"id": 96,
					"name": "rainbowWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Rainbow Wallet](https://rainbow.me/en/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[rainbowWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst rainbowWalletConfig = rainbowWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(rainbowWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx",
							"line": 63,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/rainbow/RainbowWallet.tsx#L63"
						}
					],
					"parameters": [
						{
							"id": 97,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 98,
								"name": "RainbowWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/rainbow-wallet.ts",
									"qualifiedName": "RainbowWallet"
								},
								"name": "RainbowWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 102,
			"name": "safeWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
					"line": 66,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L66"
				}
			],
			"signatures": [
				{
					"id": 103,
					"name": "safeWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Safe](https://safe.global/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[safeWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst safeWalletConfig = safeWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(safeWalletConfig, options);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/safe/safeWallet.tsx",
							"line": 66,
							"character": 26,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/safe/safeWallet.tsx#L66"
						}
					],
					"parameters": [
						{
							"id": 104,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 105,
								"name": "SafeWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/wallet/wallets/safe/types.ts",
							"qualifiedName": "SafeWalletConfig"
						},
						"name": "SafeWalletConfig",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 109,
			"name": "smartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
					"line": 89,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L89"
				}
			],
			"signatures": [
				{
					"id": 110,
					"name": "smartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Smart Wallet](https://portal.thirdweb.com/wallet/smart-wallet) which allows integrating the wallet with React\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport {\n  smartWallet,\n  metamaskWallet,\n  coinbaseWallet,\n  walletConnect,\n} from \"@thirdweb-dev/react\";\n\nconst config = {\n  factoryAddress: \"0x...\",\n  gasless: true,\n}\n\n<ThirdwebProvider\n  supportedWallets={[\n    smartWallet(metamaskWallet(), config),\n    smartWallet(coinbaseWallet(), config),\n    smartWallet(walletConnect(), config),\n  ]}\n  clientId=\"your-client-id\"\n>\n  <YourApp />\n</ThirdwebProvider>;\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\nYou need to connect to a personal wallet first, You can use the useConnect hook to connect to a personal wallet first and then connect to the Smart Wallet. Make sure personal wallet is on the same network as the Smart Wallet.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nimport { useConnect, smartWallet, metamaskWallet } from \"@thirdweb-dev/react\";\nimport { Goerli } from \"@thirdweb-dev/chains\";\n\nconst personalWalletConfig = metamaskWallet(); // or use any other wallet\n\nconst smartWalletConfig = smartWallet(personalWalletConfig, {\n  factoryAddress: \"0x...\",\n  gasless: true,\n});\n\nfunction App() {\n  const connect = useConnect();\n\n  const handleConnect = async () => {\n    // 1. connect the personal wallet first on the network that the smart wallet is deployed to\n    const personalWallet = await connect(personalWalletConfig, {\n      chainId: Goerli.chainId,\n    });\n\n    // 2. connect to smart wallet\n    const smartWallet = await connect(smartWalletConfig, {\n      chainId: Goerli.chainId,\n      personalWallet: personalWallet,\n    });\n\n    console.log(\"connected to\", smartWallet);\n  };\n\n  return <div> ... </div>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx",
							"line": 89,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/smartWallet/smartWallet.tsx#L89"
						}
					],
					"parameters": [
						{
							"id": 111,
							"name": "wallet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletConfig"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 112,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 113,
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/smart-wallet.ts",
									"qualifiedName": "SmartWallet"
								},
								"name": "SmartWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 114,
			"name": "trustWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
					"line": 60,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L60"
				}
			],
			"signatures": [
				{
					"id": 115,
					"name": "trustWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Trust Wallet](https://trustwallet.com/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[trustWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst trustWalletConfig = trustWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(trustWalletConfig);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx",
							"line": 60,
							"character": 27,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/trustWallet/TrustWallet.tsx#L60"
						}
					],
					"parameters": [
						{
							"id": 116,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 117,
								"name": "TrustWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/trust.ts",
									"qualifiedName": "TrustWallet"
								},
								"name": "TrustWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 794,
			"name": "useBloctoWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 795,
					"name": "useBloctoWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 796,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 797,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
											"line": 8,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
										}
									],
									"parameters": [
										{
											"id": 798,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 799,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 800,
																	"name": "chainId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
																			"line": 8,
																			"character": 23,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [800]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useBloctoWallet.ts",
																	"line": 8,
																	"character": 21,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useBloctoWallet.ts#L8"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": 35,
														"name": "BloctoWalletConfigOptions",
														"package": "@thirdweb-dev/react"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/blocto.ts",
													"qualifiedName": "BloctoWallet"
												},
												"name": "BloctoWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 780,
			"name": "useCoinbaseWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 781,
					"name": "useCoinbaseWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 782,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 783,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 784,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 785,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 786,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [786]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useCoinbaseWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/coinbase-wallet.ts",
													"qualifiedName": "CoinbaseWallet"
												},
												"name": "CoinbaseWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 801,
			"name": "useEmbeddedWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
					"line": 26,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L26"
				}
			],
			"signatures": [
				{
					"id": 802,
					"name": "useEmbeddedWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Hook to authenticate and connect to an embedded wallet"
							}
						],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "a function to connect to an embedded wallet"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
							"line": 26,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L26"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 803,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 804,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 78,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L78"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 805,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 34,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L34"
												}
											],
											"signatures": [
												{
													"id": 806,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 34,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L34"
														}
													],
													"parameters": [
														{
															"id": 807,
															"name": "authParams",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/types.ts",
																	"qualifiedName": "AuthParams"
																},
																"name": "AuthParams",
																"package": "@thirdweb-dev/wallets"
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/embedded-wallet.ts",
																	"qualifiedName": "EmbeddedWallet"
																},
																"name": "EmbeddedWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 808,
									"name": "sendVerificationEmail",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
											"line": 79,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L79"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 809,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
												}
											],
											"signatures": [
												{
													"id": 810,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
															"line": 62,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
														}
													],
													"parameters": [
														{
															"id": 811,
															"name": "__namedParameters",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 812,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 813,
																			"name": "email",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																					"line": 62,
																					"character": 24,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [813]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
																			"line": 62,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L62"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
																	"qualifiedName": "SendEmailOtpReturnType"
																},
																"name": "SendEmailOtpReturnType",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [804, 808]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
									"line": 77,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L77"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 816,
			"name": "useEmbeddedWalletSendVerificationEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
					"line": 5,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 817,
					"name": "useEmbeddedWalletSendVerificationEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
							"line": 5,
							"character": 54,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 818,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 819,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
											"line": 9,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 820,
											"name": "email",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/connectors/embedded-wallet/implementations/interfaces/embedded-wallets/embedded-wallets.ts",
													"qualifiedName": "SendEmailOtpReturnType"
												},
												"name": "SendEmailOtpReturnType",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 814,
			"name": "useEmbeddedWalletUserEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
					"line": 83,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L83"
				}
			],
			"signatures": [
				{
					"id": 815,
					"name": "useEmbeddedWalletUserEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts",
							"line": 83,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useEmbeddedWallet.ts#L83"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 787,
			"name": "useFrameWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useFrame.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 788,
					"name": "useFrameWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useFrame.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 789,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 790,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 791,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 792,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 793,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [793]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useFrame.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useFrame.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/frame.ts",
													"qualifiedName": "FrameWallet"
												},
												"name": "FrameWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 547,
			"name": "useIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 80,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L80"
				}
			],
			"signatures": [
				{
					"id": 548,
					"name": "useIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 80,
							"character": 36,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L80"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			]
		},
		{
			"id": 556,
			"name": "useMagic",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
					"line": 6,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/magic/useMagic.ts#L6"
				}
			],
			"signatures": [
				{
					"id": 557,
					"name": "useMagic",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
							"line": 6,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/magic/useMagic.ts#L6"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 558,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/magic/useMagic.ts#L9"
								}
							],
							"signatures": [
								{
									"id": 559,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/connectors/magic/useMagic.ts",
											"line": 9,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/magic/useMagic.ts#L9"
										}
									],
									"parameters": [
										{
											"id": 560,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "Object"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/magic.ts",
													"qualifiedName": "MagicLink"
												},
												"name": "MagicLink",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 773,
			"name": "useMetamask",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useMetamask.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 774,
					"name": "useMetamask",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useMetamask.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 775,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 776,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 777,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 778,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 779,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [779]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useMetamask.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useMetamask.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/metamask.ts",
													"qualifiedName": "MetaMaskWallet"
												},
												"name": "MetaMaskWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 823,
			"name": "usePaperWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
					"line": 19,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
				}
			],
			"signatures": [
				{
					"id": 824,
					"name": "usePaperWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "We have deprecated "
									},
									{
										"kind": "code",
										"text": "`PaperWallet`"
									},
									{
										"kind": "text",
										"text": " in favor of our "
									},
									{
										"kind": "code",
										"text": "`EmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " which adds support for more sign in methods. use the "
									},
									{
										"kind": "code",
										"text": "`useEmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
							"line": 19,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L19"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 825,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
									"line": 22,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
								}
							],
							"signatures": [
								{
									"id": 826,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
											"line": 22,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
										}
									],
									"parameters": [
										{
											"id": 827,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "intersection",
												"types": [
													{
														"type": "reflection",
														"declaration": {
															"id": 828,
															"name": "__type",
															"variant": "declaration",
															"kind": 65536,
															"flags": {},
															"children": [
																{
																	"id": 829,
																	"name": "chainId",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																			"line": 22,
																			"character": 22,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "number"
																	}
																},
																{
																	"id": 830,
																	"name": "email",
																	"variant": "declaration",
																	"kind": 1024,
																	"flags": {
																		"isOptional": true
																	},
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																			"line": 22,
																			"character": 40,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
																		}
																	],
																	"type": {
																		"type": "intrinsic",
																		"name": "string"
																	}
																}
															],
															"groups": [
																{
																	"title": "Properties",
																	"children": [829, 830]
																}
															],
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
																	"line": 22,
																	"character": 20,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L22"
																}
															]
														}
													},
													{
														"type": "reference",
														"target": {
															"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
															"qualifiedName": "PaperConfig"
														},
														"name": "PaperConfig",
														"package": "@thirdweb-dev/react"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/paper-wallet.ts",
													"qualifiedName": "PaperWallet"
												},
												"name": "PaperWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 821,
			"name": "usePaperWalletUserEmail",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
					"line": 38,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L38"
				}
			],
			"signatures": [
				{
					"id": 822,
					"name": "usePaperWalletUserEmail",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "We have deprecated "
									},
									{
										"kind": "code",
										"text": "`PaperWallet`"
									},
									{
										"kind": "text",
										"text": " in favor of our "
									},
									{
										"kind": "code",
										"text": "`EmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " which adds support for more sign in methods. use the "
									},
									{
										"kind": "code",
										"text": "`useEmbeddedWallet`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/usePaper.ts",
							"line": 38,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/usePaper.ts#L38"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../../node_modules/.pnpm/@tanstack+react-query@4.33.0_react-native@0.71.11_react@18.2.0/node_modules/@tanstack/react-query/src/types.ts",
							"qualifiedName": "UseQueryResult"
						},
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "UseQueryResult",
						"package": "@tanstack/react-query"
					}
				}
			]
		},
		{
			"id": 759,
			"name": "useRainbowWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 760,
					"name": "useRainbowWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 761,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 762,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 763,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 764,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 765,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [765]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useRainbowWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useRainbowWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/rainbow-wallet.ts",
													"qualifiedName": "RainbowWallet"
												},
												"name": "RainbowWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 855,
			"name": "useResolvedMediaType",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
					"line": 529,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L529"
				}
			],
			"signatures": [
				{
					"id": 856,
					"name": "useResolvedMediaType",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@returns",
								"content": [
									{
										"kind": "text",
										"text": "the fully resolved url + mime type of the media"
									}
								]
							},
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "Usage with fully formed url:\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"https://example.com/video.mp4\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nUsage with ipfs cid:\n"
									},
									{
										"kind": "code",
										"text": "```jsx\nconst Component = () => {\n  const resolved = useResolvedMediaType(\"ipfs://QmWATWQ7fVPP2EFGu71UkfnqhYXDYH566qy47CnJDgvsd\");\n  console.log(\"mime type\", resolved.data.mimeType);\n  console.log(\"url\", resolved.data.url);\n  return null;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
							"line": 529,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L529"
						}
					],
					"parameters": [
						{
							"id": 857,
							"name": "uri",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "the uri to resolve (can be a url or a ipfs://\\<cid\\>)"
									}
								]
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 858,
							"name": "mimeType",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 859,
							"name": "gatewayUrl",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 860,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 862,
									"name": "mimeType",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 560,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L560"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "intrinsic",
												"name": "string"
											}
										]
									},
									"defaultValue": "resolvedMimType.data"
								},
								{
									"id": 861,
									"name": "url",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
											"line": 559,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L559"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									},
									"defaultValue": "resolvedUrl"
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [862, 861]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/components/MediaRenderer.tsx",
									"line": 558,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/components/MediaRenderer.tsx#L558"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 551,
			"name": "useSafe",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
					"line": 5,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/gnosis/useSafe.ts#L5"
				}
			],
			"signatures": [
				{
					"id": 552,
					"name": "useSafe",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
							"line": 5,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/gnosis/useSafe.ts#L5"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 553,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
									"line": 8,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/gnosis/useSafe.ts#L8"
								}
							],
							"signatures": [
								{
									"id": 554,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/connectors/gnosis/useSafe.ts",
											"line": 8,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/connectors/gnosis/useSafe.ts#L8"
										}
									],
									"parameters": [
										{
											"id": 555,
											"name": "connectProps",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/connectors/safe/types.ts",
													"qualifiedName": "SafeConnectionArgs"
												},
												"name": "SafeConnectionArgs",
												"package": "@thirdweb-dev/wallets"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/safe.ts",
													"qualifiedName": "SafeWallet"
												},
												"name": "SafeWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 549,
			"name": "useSetIsWalletModalOpen",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
					"line": 84,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L84"
				}
			],
			"signatures": [
				{
					"id": 550,
					"name": "useSetIsWalletModalOpen",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/providers/wallet-ui-states-provider.tsx",
							"line": 84,
							"character": 39,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/providers/wallet-ui-states-provider.tsx#L84"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
							"qualifiedName": "BoolSetter"
						},
						"name": "BoolSetter",
						"package": "@thirdweb-dev/react"
					}
				}
			]
		},
		{
			"id": 9,
			"name": "useSmartWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
					"line": 18,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L18"
				}
			],
			"signatures": [
				{
					"id": 10,
					"name": "useSmartWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
							"line": 18,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L18"
						}
					],
					"typeParameter": [
						{
							"id": 11,
							"name": "W",
							"variant": "typeParam",
							"kind": 131072,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletInstance"
								},
								"name": "WalletInstance",
								"package": "@thirdweb-dev/react-core"
							}
						}
					],
					"parameters": [
						{
							"id": 12,
							"name": "personalWallet",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "../react-core/src/core/types/wallet.ts",
									"qualifiedName": "WalletConfig"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": -1,
										"name": "W",
										"refersToTypeParameter": true
									}
								],
								"name": "WalletConfig",
								"package": "@thirdweb-dev/react-core"
							}
						},
						{
							"id": 13,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 113,
								"name": "SmartWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 14,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 15,
									"name": "connect",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 91,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L91"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 16,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 41,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
												}
											],
											"signatures": [
												{
													"id": 17,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 41,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
														}
													],
													"parameters": [
														{
															"id": 18,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isOptional": true
															},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 19,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 20,
																			"name": "connectPersonalWallet",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 42,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																				}
																			],
																			"type": {
																				"type": "reflection",
																				"declaration": {
																					"id": 21,
																					"name": "__type",
																					"variant": "declaration",
																					"kind": 65536,
																					"flags": {},
																					"sources": [
																						{
																							"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																							"line": 42,
																							"character": 30,
																							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																						}
																					],
																					"signatures": [
																						{
																							"id": 22,
																							"name": "__type",
																							"variant": "signature",
																							"kind": 4096,
																							"flags": {},
																							"sources": [
																								{
																									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																									"line": 42,
																									"character": 30,
																									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L42"
																								}
																							],
																							"parameters": [
																								{
																									"id": 23,
																									"name": "wallet",
																									"variant": "param",
																									"kind": 32768,
																									"flags": {},
																									"type": {
																										"type": "reference",
																										"target": -1,
																										"name": "W",
																										"refersToTypeParameter": true
																									}
																								}
																							],
																							"type": {
																								"type": "reference",
																								"target": {
																									"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																									"qualifiedName": "Promise"
																								},
																								"typeArguments": [
																									{
																										"type": "intrinsic",
																										"name": "void"
																									}
																								],
																								"name": "Promise",
																								"package": "typescript"
																							}
																						}
																					]
																				}
																			}
																		},
																		{
																			"id": 24,
																			"name": "connectionArgs",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 43,
																					"character": 6,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L43"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
																					"qualifiedName": "Omit"
																				},
																				"typeArguments": [
																					{
																						"type": "reference",
																						"target": {
																							"sourceFileName": "../wallets/src/evm/connectors/smart-wallet/types.ts",
																							"qualifiedName": "SmartWalletConnectionArgs"
																						},
																						"name": "SmartWalletConnectionArgs",
																						"package": "@thirdweb-dev/wallets"
																					},
																					{
																						"type": "literal",
																						"value": "personalWallet"
																					}
																				],
																				"name": "Omit",
																				"package": "typescript"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [20, 24]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 41,
																			"character": 18,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L41"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/src/evm/wallets/smart-wallet.ts",
																	"qualifiedName": "SmartWallet"
																},
																"name": "SmartWallet",
																"package": "@thirdweb-dev/wallets"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								},
								{
									"id": 25,
									"name": "predictAddress",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
											"line": 92,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L92"
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 26,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
													"line": 29,
													"character": 4,
													"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
												}
											],
											"signatures": [
												{
													"id": 27,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
															"line": 29,
															"character": 4,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
														}
													],
													"parameters": [
														{
															"id": 28,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {},
															"type": {
																"type": "reflection",
																"declaration": {
																	"id": 29,
																	"name": "__type",
																	"variant": "declaration",
																	"kind": 65536,
																	"flags": {},
																	"children": [
																		{
																			"id": 31,
																			"name": "data",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 29,
																					"character": 50,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																				}
																			],
																			"type": {
																				"type": "reference",
																				"target": {
																					"sourceFileName": "../../node_modules/.pnpm/@ethersproject+bytes@5.7.0/node_modules/@ethersproject/bytes/src.ts/index.ts",
																					"qualifiedName": "BytesLike"
																				},
																				"name": "BytesLike",
																				"package": "@ethersproject/bytes"
																			}
																		},
																		{
																			"id": 30,
																			"name": "personalWalletAddress",
																			"variant": "declaration",
																			"kind": 1024,
																			"flags": {},
																			"sources": [
																				{
																					"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																					"line": 29,
																					"character": 19,
																					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																				}
																			],
																			"type": {
																				"type": "intrinsic",
																				"name": "string"
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Properties",
																			"children": [31, 30]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
																			"line": 29,
																			"character": 17,
																			"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L29"
																		}
																	]
																}
															}
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Promise"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															}
														],
														"name": "Promise",
														"package": "typescript"
													}
												}
											]
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [15, 25]
								}
							],
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useSmartWallet.ts",
									"line": 90,
									"character": 9,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useSmartWallet.ts#L90"
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 766,
			"name": "useTrustWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
					"line": 4,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L4"
				}
			],
			"signatures": [
				{
					"id": 767,
					"name": "useTrustWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
							"line": 4,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L4"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 768,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
									"line": 7,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
								}
							],
							"signatures": [
								{
									"id": 769,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
											"line": 7,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
										}
									],
									"parameters": [
										{
											"id": 770,
											"name": "connectOptions",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 771,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 772,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
																	"line": 7,
																	"character": 30,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [772]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useTrustWallet.ts",
															"line": 7,
															"character": 28,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useTrustWallet.ts#L7"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/trust.ts",
													"qualifiedName": "TrustWallet"
												},
												"name": "TrustWallet",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 831,
			"name": "useWalletConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
					"line": 21,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L21"
				}
			],
			"signatures": [
				{
					"id": 832,
					"name": "useWalletConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
							"line": 21,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L21"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 833,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
									"line": 24,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L24"
								}
							],
							"signatures": [
								{
									"id": 834,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
											"line": 24,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L24"
										}
									],
									"parameters": [
										{
											"id": 835,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 836,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 837,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 25,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L25"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														},
														{
															"id": 838,
															"name": "projectId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 26,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L26"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "string"
															}
														},
														{
															"id": 839,
															"name": "qrModalOptions",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 27,
																	"character": 6,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L27"
																}
															],
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "../wallets/dist/declarations/src/evm/connectors/wallet-connect/qrModalOptions.d.ts",
																	"qualifiedName": "QRModalOptions"
																},
																"name": "QRModalOptions",
																"package": "@thirdweb-dev/wallets"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [837, 838, 839]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
															"line": 24,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L24"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
													"qualifiedName": "WalletConnect"
												},
												"name": "WalletConnect",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 840,
			"name": "useWalletConnectV1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
					"line": 8,
					"character": 16,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
				}
			],
			"signatures": [
				{
					"id": 841,
					"name": "useWalletConnectV1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "use the "
									},
									{
										"kind": "code",
										"text": "`useWalletConnect`"
									},
									{
										"kind": "text",
										"text": " hook instead"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
							"line": 8,
							"character": 16,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L8"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 842,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
									"line": 11,
									"character": 4,
									"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
								}
							],
							"signatures": [
								{
									"id": 843,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"sources": [
										{
											"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
											"line": 11,
											"character": 4,
											"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
										}
									],
									"parameters": [
										{
											"id": 844,
											"name": "options",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "reflection",
												"declaration": {
													"id": 845,
													"name": "__type",
													"variant": "declaration",
													"kind": 65536,
													"flags": {},
													"children": [
														{
															"id": 846,
															"name": "chainId",
															"variant": "declaration",
															"kind": 1024,
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
																	"line": 11,
																	"character": 23,
																	"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
																}
															],
															"type": {
																"type": "intrinsic",
																"name": "number"
															}
														}
													],
													"groups": [
														{
															"title": "Properties",
															"children": [846]
														}
													],
													"sources": [
														{
															"fileName": "packages/react/src/evm/hooks/wallets/useWalletConnect.ts",
															"line": 11,
															"character": 21,
															"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/evm/hooks/wallets/useWalletConnect.ts#L11"
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "../../node_modules/.pnpm/typescript@5.1.6/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
													"qualifiedName": "WalletConnect"
												},
												"name": "WalletConnect",
												"package": "@thirdweb-dev/wallets"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					}
				}
			]
		},
		{
			"id": 121,
			"name": "walletConnect",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
					"line": 70,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L70"
				}
			],
			"signatures": [
				{
					"id": 122,
					"name": "walletConnect",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [WalletConnect](https://walletconnect.com/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[walletConnect()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst walletConnectConfig = walletConnect();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(walletConnectConfig);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 70,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L70"
						}
					],
					"parameters": [
						{
							"id": 123,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 124,
								"name": "walletConnectConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WalletConnect"
								},
								"name": "WalletConnect",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 129,
			"name": "walletConnectV1",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/walletConnectV1.tsx",
					"line": 9,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnectV1.tsx#L9"
				}
			],
			"signatures": [
				{
					"id": 130,
					"name": "walletConnectV1",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [],
						"blockTags": [
							{
								"tag": "@deprecated",
								"content": [
									{
										"kind": "text",
										"text": "Use "
									},
									{
										"kind": "code",
										"text": "`walletConnect`"
									},
									{
										"kind": "text",
										"text": " instead\n\nThe WalletConnect v1.0 protocol has been shut down and no longer works.\nTo avoid breaking change, "
									},
									{
										"kind": "code",
										"text": "`walletConnectV1`"
									},
									{
										"kind": "text",
										"text": " is still available but is an alias of "
									},
									{
										"kind": "code",
										"text": "`walletConnect`"
									},
									{
										"kind": "text",
										"text": "."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx",
							"line": 70,
							"character": 29,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/walletConnect/walletConnect.tsx#L70"
						}
					],
					"parameters": [
						{
							"id": 131,
							"name": "config",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 124,
								"name": "walletConnectConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/wallet-connect.ts",
									"qualifiedName": "WalletConnect"
								},
								"name": "WalletConnect",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		},
		{
			"id": 132,
			"name": "zerionWallet",
			"variant": "declaration",
			"kind": 64,
			"flags": {},
			"sources": [
				{
					"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
					"line": 60,
					"character": 13,
					"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L60"
				}
			],
			"signatures": [
				{
					"id": 133,
					"name": "zerionWallet",
					"variant": "signature",
					"kind": 4096,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A wallet configurator for [Zerion Wallet](https://zerion.io/) which allows integrating the wallet with React.\n\nIt returns a "
							},
							{
								"kind": "code",
								"text": "`WalletConfig`"
							},
							{
								"kind": "text",
								"text": " object which can be used to connect the wallet to app via "
							},
							{
								"kind": "code",
								"text": "`ConnectWallet`"
							},
							{
								"kind": "text",
								"text": " component or "
							},
							{
								"kind": "code",
								"text": "`useConnect`"
							},
							{
								"kind": "text",
								"text": " hook."
							}
						],
						"blockTags": [
							{
								"tag": "@example",
								"content": [
									{
										"kind": "text",
										"text": "### Usage with ConnectWallet\n\nTo allow users to connect to this wallet using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component, you can add it to "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets prop.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\n<ThirdwebProvider supportedWallets={[zerionWallet()]}>\n <App />\n</ThirdwebProvider>\n```"
									},
									{
										"kind": "text",
										"text": "\n\n### Usage with useConnect\n\nyou can use the "
									},
									{
										"kind": "code",
										"text": "`useConnect`"
									},
									{
										"kind": "text",
										"text": " hook to programmatically connect to the wallet without using the "
									},
									{
										"kind": "code",
										"text": "`ConnectWallet`"
									},
									{
										"kind": "text",
										"text": " component.\n\nThe wallet also needs to be added in "
									},
									{
										"kind": "code",
										"text": "`ThirdwebProvider`"
									},
									{
										"kind": "text",
										"text": "'s supportedWallets if you want the wallet to auto-connect on next page load.\n\n"
									},
									{
										"kind": "code",
										"text": "```tsx\nconst zerionWalletConfig = zerionWallet();\n\nfunction App() {\n  const connect = useConnect();\n\n  async function handleConnect() {\n    const wallet = await connect(zerionWalletConfig);\n    console.log('connected to', wallet);\n  }\n\n  return <button onClick={handleConnect}> Connect </button>;\n}\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "packages/react/src/wallet/wallets/zerion/zerionWallet.tsx",
							"line": 60,
							"character": 28,
							"url": "https://github.com/thirdweb-dev/js/blob/a36c7e833/packages/react/src/wallet/wallets/zerion/zerionWallet.tsx#L60"
						}
					],
					"parameters": [
						{
							"id": 134,
							"name": "options",
							"variant": "param",
							"kind": 32768,
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"target": 135,
								"name": "ZerionkWalletConfigOptions",
								"package": "@thirdweb-dev/react"
							}
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "../react-core/src/core/types/wallet.ts",
							"qualifiedName": "WalletConfig"
						},
						"typeArguments": [
							{
								"type": "reference",
								"target": {
									"sourceFileName": "../wallets/src/evm/wallets/zerion.ts",
									"qualifiedName": "ZerionWallet"
								},
								"name": "ZerionWallet",
								"package": "@thirdweb-dev/wallets"
							}
						],
						"name": "WalletConfig",
						"package": "@thirdweb-dev/react-core"
					}
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"children": [730, 866, 743, 869, 724, 654]
		},
		{
			"title": "Type Aliases",
			"children": [
				696, 35, 170, 42, 564, 149, 156, 723, 646, 49, 532, 58, 64, 70, 76, 635,
				617, 142, 851, 83, 92, 163, 98, 105, 113, 847, 180, 216, 226, 2, 117,
				596, 135, 124
			]
		},
		{
			"title": "Variables",
			"children": [1, 8]
		},
		{
			"title": "Functions",
			"children": [
				561, 863, 614, 880, 700, 650, 32, 167, 39, 146, 153, 174, 46, 217, 223,
				55, 220, 177, 61, 67, 73, 139, 848, 80, 89, 160, 95, 102, 109, 114, 794,
				780, 801, 816, 814, 787, 547, 556, 773, 823, 821, 759, 855, 551, 549, 9,
				766, 831, 840, 121, 129, 132
			]
		}
	],
	"packageName": "@thirdweb-dev/react",
	"readme": [
		{
			"kind": "text",
			"text": "<p align=\"center\">\n<br />\n<a href=\"https://thirdweb.com\"><img src=\"https://github.com/thirdweb-dev/js/blob/main/packages/sdk/logo.svg?raw=true\" width=\"200\" alt=\"\"/></a>\n<br />\n</p>\n<h1 align=\"center\">thirdweb React SDK</h1>\n<p align=\"center\">\n<a href=\"https://www.npmjs.com/package/@thirdweb-dev/react\"><img src=\"https://img.shields.io/npm/v/@thirdweb-dev/react?color=red&label=npm&logo=npm\" alt=\"npm version\"/></a>\n<a href=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml\"><img alt=\"Build Status\" src=\"https://github.com/thirdweb-dev/js/actions/workflows/build-test-lint.yml/badge.svg\"/></a>\n<a href=\"https://discord.gg/thirdweb\"><img alt=\"Join our Discord!\" src=\"https://img.shields.io/discord/834227967404146718.svg?color=7289da&label=discord&logo=discord&style=flat\"/></a>\n\n</p>\n<p align=\"center\"><strong>Ultimate collection of React hooks for your web3 apps</strong></p>\n<br />\n\n<br />\n\n## Installation\n\nThe easiest way to get started with the React SDK is to use the CLI:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpx thirdweb create --app\n```"
		},
		{
			"kind": "text",
			"text": "\n\nAlternatively, you can install the SDK into your existing project using npm or yarn:\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nnpm install @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n"
		},
		{
			"kind": "code",
			"text": "```sh\nyarn add @thirdweb-dev/react @thirdweb-dev/sdk ethers@5\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Getting Started\n\nOur SDK uses a [Provider Pattern](https://flexiple.com/react/provider-pattern-with-react-context-api/); meaning any component within the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " will have access to the SDK. If you use the CLI to initialize your project, this is already set up for you.\n\nLet's take a look at a typical setup:\n\n<br />\n\n### Configure the "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": "\n\nSpecify the network your smart contracts are deployed to in the "
		},
		{
			"kind": "code",
			"text": "`desiredChainId`"
		},
		{
			"kind": "text",
			"text": " prop and wrap your application like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst App = () => {\n  return (\n    <ThirdwebProvider desiredChainId={ChainId.Mainnet}>\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nBelow are examples of where to set this up in your application:\n\n<p>\n  <a href=\"https://github.com/thirdweb-example/cra-javascript-starter/blob/main/src/index.js\">Create React App</a> •\n  <a href=\"https://github.com/thirdweb-example/next-javascript-starter/blob/main/pages/_app.js\">Next.js</a> •\n  <a href=\"https://github.com/thirdweb-example/vite-javascript-starter/blob/main/src/main.jsx\">Vite</a>\n</p>\n\n<br />\n\n### Connect to a User's Wallet\n\nNow the provider is set up, we can use all of the hooks and UI components available in the SDK, such as the [ConnectWallet](https://portal.thirdweb.com/ui-components/connectwalletbutton) component.\n\nOnce the user has connected their wallet, all the calls we make to interact with contracts using the SDK will be on behalf of the user.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"ConnectMetamaskButton.jsx\"\nimport { ConnectWallet, useAddress } from \"@thirdweb-dev/react\";\n\nexport const YourApp = () => {\n  const address = useAddress();\n  return (\n    <div>\n      <ConnectWallet />\n    </div>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ConnectWallet`"
		},
		{
			"kind": "text",
			"text": " component handles everything for us, including switching networks, accounts, displaying balances and more.\n\nWe can then get the connected address using the "
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": " hook anywhere in the app.\n\n<br/>\n\n### Interact With Contracts\n\nConnect to your smart contract using the ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/getting-a-contract#connect-to-a-contract)\nhook like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n\n  // Now you can use the contract in the rest of the component!\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nYou can then use ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) and ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/custom-contracts/using-contracts) to read data and write transactions to the contract.\n\nYou pass the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " object returned from "
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": " to these hooks as the first parameter and the name of the function (or view/mapping, etc.) on your smart contract as the second parameter. If your function requires parameters, you can pass them as additional arguments.\n\nFor example, we can read the "
		},
		{
			"kind": "code",
			"text": "`name`"
		},
		{
			"kind": "text",
			"text": " of our contract like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useContractRead,\n  useContractWrite,\n} from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: name, isLoading: loadingName } = useContractRead(\n    contract,\n    \"name\", // The name of the view/mapping/variable on your contract\n  );\n  const { mutate: setName, isLoading: settingName } = useContractWrite(\n    contract,\n    \"setName\", // The name of the function on your contract\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### Using Extensions\n\nEach [extension](https://portal.thirdweb.com/extensions) you implement in your smart contract unlocks new functionality in the SDK.\n\nThese hooks make it easy to interact with your smart contracts by implementing the complex logic for you under the hood.\n\nFor example, if your smart contract implements [ERC721Supply](https://portal.thirdweb.com/solidity/extensions/erc721supply), you unlock the ability to [view all NFTs](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721supply#get-all-minted-nfts) on that contract using the SDK; which fetches all of your NFT metadata and the current owner of each NFT in parallel. In the React SDK, that is available using "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nIf we want to mint an NFT and our contract implements [ERC721Mintable](https://portal.thirdweb.com/solidity/extensions/erc721mintable), we can use the ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/sdk/interacting-with-contracts/erc721mintable) hook to mint an NFT from the connected wallet; handling all of the logic of uploading and pinning the metadata to IPFS for us behind the scenes.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx\nimport { useContract, useNFTs, useMintNFT } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n  const { mutate: mintNFT, isLoading: isMintingNFT } = useMintNFT(contract);\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n### UI Components\n\nThe SDK provides many UI components to help you build your application.\n\nFor example, we can render each of the NFTs using the ["
		},
		{
			"kind": "code",
			"text": "`NFT Media Renderer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/nft-renderer)\ncomponent, making use of the loading state from "
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": ":\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport { useContract, useNFTs, ThirdwebNftMedia } from \"@thirdweb-dev/react\";\n\nexport default function Home() {\n  const { contract } = useContract(\"<CONTRACT_ADDRESS>\");\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      <h2>My NFTs</h2>\n      {isReadingNfts ? (\n        <p>Loading...</p>\n      ) : (\n        <div>\n          {nfts.map((nft) => (\n            <ThirdwebNftMedia\n              key={nft.metadata.id}\n              metadata={nft.metadata}\n              height={200}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\nThe ["
		},
		{
			"kind": "code",
			"text": "`Web3Button`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/ui-components/web3button) component ensures the user has connected their wallet and is currently configured to the same network as your smart contract before calling the function. It also has access to the "
		},
		{
			"kind": "code",
			"text": "`contract`"
		},
		{
			"kind": "text",
			"text": " directly, allowing you to perform any action on your smart contract when the button is clicked.\n\nFor example, we can mint an NFT like so:\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"pages/index.jsx\"\nimport {\n  useContract,\n  useNFTs,\n  ThirdwebNftMedia,\n  Web3Button,\n} from \"@thirdweb-dev/react\";\n\nconst contractAddress = \"<CONTRACT_ADDRESS>\";\nexport default function Home() {\n  const { contract } = useContract(contractAddress);\n  const { data: nfts, isLoading: isReadingNfts } = useNFTs(contract);\n\n  return (\n    <div>\n      {/* ... Existing Display Logic here ... */}\n\n      <Web3Button\n        contractAddress={contractAddress}\n        action={(contract) =>\n          contract.erc721.mint({\n            name: \"Hello world!\",\n            image:\n              // You can use a file or URL here!\n              \"ipfs://QmZbovNXznTHpYn2oqgCFQYP4ZCpKDquenv5rFCX8irseo/0.png\",\n          })\n        }\n      >\n        Mint NFT\n      </Web3Button>\n    </div>\n  );\n}\n```"
		},
		{
			"kind": "text",
			"text": "\n\n<br />\n\n## Advanced Configuration\n\nThe "
		},
		{
			"kind": "code",
			"text": "`ThirdwebProvider`"
		},
		{
			"kind": "text",
			"text": " offers a number of configuration options to control the behavior of the React and Typescript SDK.\n\nThese are all the configuration options of the "
		},
		{
			"kind": "code",
			"text": "`<ThirdwebProvider />`"
		},
		{
			"kind": "text",
			"text": ".\nWe provide defaults for all of these, but you customize them to suit your needs.\n\n"
		},
		{
			"kind": "code",
			"text": "```jsx title=\"App.jsx\"\nimport { ChainId, IpfsStorage, ThirdwebProvider } from \"@thirdweb-dev/react\";\n\nconst KitchenSinkExample = () => {\n  return (\n    <ThirdwebProvider\n      desiredChainId={ChainId.Mainnet}\n      chainRpc={{ [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\" }}\n      dAppMeta={{\n        name: \"Example App\",\n        description: \"This is an example app\",\n        isDarkMode: false,\n        logoUrl: \"https://example.com/logo.png\",\n        url: \"https://example.com\",\n      }}\n      storageInterface={new IpfsStorage(\"https://your.ipfs.host.com\")}\n      supportedChains={[ChainId.Mainnet]}\n      walletConnectors={[\n        \"walletConnect\",\n        { name: \"injected\", options: { shimDisconnect: false } },\n        {\n          name: \"walletLink\",\n          options: {\n            appName: \"Example App\",\n          },\n        },\n        {\n          name: \"magic\",\n          options: {\n            apiKey: \"your-magic-api-key\",\n            rpcUrls: {\n              [ChainId.Mainnet]: \"https://mainnet.infura.io/v3\",\n            },\n          },\n        },\n      ]}\n      sdkOptions={{\n        gasSettings: { maxPriceInGwei: 500, speed: \"fast\" },\n        readonlySettings: {\n          chainId: ChainId.Mainnet,\n          rpcUrl: \"https://mainnet.infura.io/v3\",\n        },\n        gasless: {\n          openzeppelin: {\n            relayerUrl: \"your-relayer-url\",\n          },\n        },\n      }}\n    >\n      <YourApp />\n    </ThirdwebProvider>\n  );\n};\n```"
		},
		{
			"kind": "text",
			"text": "\n\n## Available hooks\n\n### Main hooks\n\n| Hook                                                                                 | Description                                                                |\n| ------------------------------------------------------------------------------------ | -------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSDK`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesdk)                           | Access the instance of the thirdweb SDK created by the ThirdwebProvider.   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContract`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontract)                 | Use this resolve a contract address to a smart contract instance.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractWrite`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractwrite)       | Use this to get data from a contract read-function call.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractRead`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractread)         | Use this to get a function to make a write call to your contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractEvents`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractevents)     | Use this to get the contract metadata for a (built-in or custom) contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useContractMetadata`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecontractmetadata) | Use this to get the contract metadata for a (built-in or custom) contract. |\n\n### Wallet connection\n\n| Hook                                                                             | Description                                                 |\n| -------------------------------------------------------------------------------- | ----------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAddress`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useaddress)               | Hook for accessing the address of the connected wallet.     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMetamask`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemetamask)             | Hook for connecting to a Metamask wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWalletConnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewalletconnect)   | Hook for connecting to a mobile wallet with Wallet Connect. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCoinbaseWallet`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecoinbasewallet) | Hook for connecting to a Coinbase wallet.                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMagic`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemagic)                   | Hook for connecting to an email wallet using magic link.    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGnosis`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegnosis)                 | Hook for connecting to a Gnosis Safe.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDisconnect`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedisconnect)         | Hook for disconnecting the currently connected wallet.      |\n\n### Network connection\n\n| Hook                                                                               | Description                                                                                                                                  |\n| ---------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useChainId`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usechainid)                 | Hook for accessing the chain ID of the network the current wallet is connected to                                                            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetwork`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetwork)                 | Hook for getting metadata about the network the current wallet is connected to and switching networks.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNetworkMismatch`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenetworkmismatch) | Hook for checking whether the connected wallet is on the correct network specified by the desiredChainId passed to the <ThirdwebProvider />. |\n\n### NFT\n\n| Hook                                                                                             | Description                                                                         |\n| ------------------------------------------------------------------------------------------------ | ----------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenft)                                       | Use this to get an individual NFT token of your NFTContract.                        |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenfts)                                     | Use this to get a list of NFT tokens of your NFTContract.                           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCirculatingSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcirculatingsupply) | Use this to get a the total (minted) supply of your NFTContract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useOwnedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useownednfts)                           | Use this to get a the owned NFTs for a specific Erc721OrErc1155 and wallet address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useNFTBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usenftbalance)                         | Use this to get a the total balance of a NFTContract and wallet address.            |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTotalCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetotalcount)                         | Use this to get the total count of NFT tokens of your NFTContract.                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnft)                               | Use this to mint a new NFT on your Erc721OrErc1155.                                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemintnftsupply)                   | Use this mint extra supply on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfernft)                       | Use this to transfer tokens on your NFTContract.                                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAirdropNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useairdropnft)                         | Use this to airdrop tokens on your Erc1155.                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburnnft)                               | Use this to burn an NFT on your Erc721OrErc1155.                                    |\n\n### Token\n\n| Hook                                                                                     | Description                                                        |\n| ---------------------------------------------------------------------------------------- | ------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokensupply)               | Use this to get a the total supply of your contract.               |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenBalance`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokenbalance)             | Use this to get the balance of your contract for a given address.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTokenDecimals`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetokendecimals)           | Use this to get the decimals of your contract for a given address. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMintToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useminttoken)                   | Use this to mint new tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimtoken)                 | Use this to claim tokens from your contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransfertoken)           | Use this to transfer tokens on your contract.                      |\n| ["
		},
		{
			"kind": "code",
			"text": "`useTransferBatchToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usetransferbatchtoken) | Use this to transfer batch tokens on your contract.                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBurnToken`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useburntoken)                   | Use this to burn tokens on your contract.                          |\n\n### Marketplace\n\n| Hook                                                                                         | Description                                                                               |\n| -------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselisting)                           | Use this to get a specific listing from the marketplace.                                  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistings)                         | Use this to get a list all listings from your marketplace contract.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useListingsCount`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselistingscount)               | Use this to get a count of all listings on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveListings`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactivelistings)             | Use this to get a list active listings from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useWinningBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usewinningbid)                     | Use this to get a the winning bid for an auction listing from your marketplace contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAuctionWinner`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useauctionwinner)               | Use this to get the winner of an auction listing from your marketplace contract.          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBidBuffer`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebidbuffer)                       | Use this to get the buffer in basis points between offers from your marketplace contract. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreatedirectlisting)   | Use this to create a new Direct Listing on your marketplace contract.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCreateAuctionListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecreateauctionlisting) | Use this to create a new Auction Listing on your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useCancelListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usecancellisting)               | Use this to cancel a listing on your marketplace contract.                                |\n| ["
		},
		{
			"kind": "code",
			"text": "`useMakeBid`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usemakebid)                           | Use this to place a bid on an auction listing from your marketplace contract.             |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyNow`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebuynow)                             | Use this to buy out an auction listing from your marketplace contract.                    |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBuyDirectListing`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useBuyDirectListing)         | Use this to buy from a direct listing in your marketplace v3 contract.                    |\n\n### Permissions Controls\n\n| Hook                                                                                   | Description                                                                     |\n| -------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useallrolemembers)       | Use this to get the roles of all members.                                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userolemembers)             | Use this to get the members of a role.                                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useIsAddressRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useisaddressrole)         | Use this to check if a WalletAddress is a member of a role.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetAllRoleMembers`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetallrolemembers) | Use this to OVERWRITE the list of addresses that are members of specific roles. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useGrantRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usegrantrole)                 | Use this to grant a WalletAddress a specific role.                              |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevokeRole`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.userevokerole)               | Use this to revoke a WalletAddress a specific role.                             |\n\n### Drop\n\n| Hook                                                                                           | Description                                                                          |\n| ---------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------ |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednfts)                 | Use this to get a list of unclaimed NFT tokens of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTs`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednfts)                     | Use this to get a list of claimed (minted) NFT tokens of your ERC721 Drop contract.. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useUnclaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useunclaimednftsupply)       | Use this to get the total unclaimed NFT supply of your ERC721 Drop contract.         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimedNFTSupply`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimednftsupply)           | Use this to get the total claimed (minted) NFT supply of your ERC721 Drop contract.  |\n| ["
		},
		{
			"kind": "code",
			"text": "`useBatchesToReveal`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usebatchestoreveal)             | Use this to get a list of batches that are ready to be revealed.                     |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimNFT`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimnft)                           | Use this to claim a NFT on your DropContract                                         |\n| ["
		},
		{
			"kind": "code",
			"text": "`useLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.uselazymint)                           | Use this to lazy mint a batch of NFTs on your DropContract.                          |\n| ["
		},
		{
			"kind": "code",
			"text": "`useDelayedRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usedelayedreveallazymint) | Use this to lazy mint a batch of delayed reveal NFTs on your DropContract.           |\n| ["
		},
		{
			"kind": "code",
			"text": "`useRevealLazyMint`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usereveallazymint)               | Use this to reveal a batch of delayed reveal NFTs on your RevealableContract.        |\n\n### Claim Conditions\n\n| Hook                                                                                                   | Description                                                                                              |\n| ------------------------------------------------------------------------------------------------------ | -------------------------------------------------------------------------------------------------------- |\n| ["
		},
		{
			"kind": "code",
			"text": "`useActiveClaimCondition`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useactiveclaimcondition)           | Use this to get the active claim condition for ERC20, ERC721 or ERC1155 based contracts.                 |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimconditions)                     | Use this to get all claim conditions for ERC20, ERC721 or ERC1155 based contracts.                       |\n| ["
		},
		{
			"kind": "code",
			"text": "`useClaimIneligibilityReasons`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useclaimineligibilityreasons) | Use this to check for reasons that prevent claiming for either ERC20, ERC721 or ERC1155 based contracts. |\n| ["
		},
		{
			"kind": "code",
			"text": "`useSetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.usesetclaimconditions)               | Use this to set claim conditions on your DropContract.                                                   |\n| ["
		},
		{
			"kind": "code",
			"text": "`useResetClaimConditions`"
		},
		{
			"kind": "text",
			"text": "](https://portal.thirdweb.com/react/react.useresetclaimconditions)           | Use this to reset claim conditions on your DropContract.                                                 |"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "defaultTokens"
		},
		"2": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "TokenInfo"
		},
		"3": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type"
		},
		"4": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.name"
		},
		"5": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.symbol"
		},
		"6": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.address"
		},
		"7": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "__type.icon"
		},
		"8": {
			"sourceFileName": "src/wallet/wallets/defaultWallets.ts",
			"qualifiedName": "defaultWallets"
		},
		"9": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"10": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "useSmartWallet"
		},
		"11": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "W"
		},
		"12": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "personalWallet"
		},
		"13": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "options"
		},
		"14": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object"
		},
		"15": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"16": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"17": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"18": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"19": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"20": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectPersonalWallet"
		},
		"21": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"22": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"23": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "wallet"
		},
		"24": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.connectionArgs"
		},
		"25": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__object.predictAddress"
		},
		"26": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"27": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__function"
		},
		"28": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "args"
		},
		"29": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type"
		},
		"30": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.personalWalletAddress"
		},
		"31": {
			"sourceFileName": "src/evm/hooks/wallets/useSmartWallet.ts",
			"qualifiedName": "__type.data"
		},
		"32": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"33": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "bloctoWallet"
		},
		"34": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "options"
		},
		"35": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "BloctoWalletConfigOptions"
		},
		"36": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "__type"
		},
		"37": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "__type.appId"
		},
		"38": {
			"sourceFileName": "src/wallet/wallets/blocto/bloctoWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"39": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"40": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "coinbaseWallet"
		},
		"41": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "options"
		},
		"42": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "CoinbaseWalletConfigOptions"
		},
		"43": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "__type"
		},
		"44": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "__type.qrmodal"
		},
		"45": {
			"sourceFileName": "src/wallet/wallets/coinbase/coinbaseWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"46": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"47": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "embeddedWallet"
		},
		"48": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/embeddedWallet.tsx",
			"qualifiedName": "options"
		},
		"49": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "EmbeddedWalletConfigOptions"
		},
		"50": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type"
		},
		"51": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type.recommended"
		},
		"52": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type.auth"
		},
		"53": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type"
		},
		"54": {
			"sourceFileName": "src/wallet/wallets/embeddedWallet/types.ts",
			"qualifiedName": "__type.options"
		},
		"55": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"56": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "frameWallet"
		},
		"57": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "config"
		},
		"58": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "FrameWalletConfigOptions"
		},
		"59": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "__type"
		},
		"60": {
			"sourceFileName": "src/wallet/wallets/frame/frameWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"61": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"62": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "localWallet"
		},
		"63": {
			"sourceFileName": "src/wallet/wallets/localWallet/localWallet.tsx",
			"qualifiedName": "config"
		},
		"64": {
			"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
			"qualifiedName": "LocalWalletConfigOptions"
		},
		"65": {
			"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
			"qualifiedName": "__type"
		},
		"66": {
			"sourceFileName": "src/wallet/wallets/localWallet/types.ts",
			"qualifiedName": "__type.persist"
		},
		"67": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"68": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "magicLink"
		},
		"69": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "config"
		},
		"70": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "MagicWalletConfigOptions"
		},
		"71": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type"
		},
		"72": {
			"sourceFileName": "src/wallet/wallets/magic/magicLink.tsx",
			"qualifiedName": "__type.recommended"
		},
		"73": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"74": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "metamaskWallet"
		},
		"75": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "options"
		},
		"76": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "MetamaskWalletConfigOptions"
		},
		"77": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "__type"
		},
		"78": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"79": {
			"sourceFileName": "src/wallet/wallets/metamask/metamaskWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"80": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "paperWallet"
		},
		"81": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "paperWallet"
		},
		"82": {
			"sourceFileName": "src/wallet/wallets/paper/paperWallet.tsx",
			"qualifiedName": "options"
		},
		"83": {
			"sourceFileName": "src/wallet/wallets/paper/types.ts",
			"qualifiedName": "PaperWalletConfigOptions"
		},
		"84": {
			"sourceFileName": "src/wallet/wallets/paper/types.ts",
			"qualifiedName": "__type"
		},
		"85": {
			"sourceFileName": "src/wallet/wallets/paper/types.ts",
			"qualifiedName": "__type.recommended"
		},
		"86": {
			"sourceFileName": "src/wallet/wallets/paper/types.ts",
			"qualifiedName": "__type.oauthOptions"
		},
		"87": {
			"sourceFileName": "src/wallet/wallets/paper/types.ts",
			"qualifiedName": "__type"
		},
		"88": {
			"sourceFileName": "src/wallet/wallets/paper/types.ts",
			"qualifiedName": "__type.providers"
		},
		"89": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"90": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "phantomWallet"
		},
		"91": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "options"
		},
		"92": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "PhantomWalletConfigOptions"
		},
		"93": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "__type"
		},
		"94": {
			"sourceFileName": "src/wallet/wallets/phantom/phantomWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"95": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"96": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "rainbowWallet"
		},
		"97": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "options"
		},
		"98": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "RainbowWalletConfigOptions"
		},
		"99": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "__type"
		},
		"100": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"101": {
			"sourceFileName": "src/wallet/wallets/rainbow/RainbowWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"102": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"103": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "safeWallet"
		},
		"104": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "config"
		},
		"105": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "SafeWalletConfigOptions"
		},
		"106": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type"
		},
		"107": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type.personalWallets"
		},
		"108": {
			"sourceFileName": "src/wallet/wallets/safe/safeWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"109": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"110": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "smartWallet"
		},
		"111": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "wallet"
		},
		"112": {
			"sourceFileName": "src/wallet/wallets/smartWallet/smartWallet.tsx",
			"qualifiedName": "config"
		},
		"113": {
			"sourceFileName": "src/wallet/wallets/smartWallet/types.ts",
			"qualifiedName": "SmartWalletConfigOptions"
		},
		"114": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"115": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "trustWallet"
		},
		"116": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "options"
		},
		"117": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "TrustWalletConfigOptions"
		},
		"118": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "__type"
		},
		"119": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"120": {
			"sourceFileName": "src/wallet/wallets/trustWallet/TrustWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"121": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"122": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnect"
		},
		"123": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "config"
		},
		"124": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnectConfigOptions"
		},
		"125": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type"
		},
		"126": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type.projectId"
		},
		"127": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type.qrModalOptions"
		},
		"128": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "__type.recommended"
		},
		"129": {
			"sourceFileName": "src/wallet/wallets/walletConnectV1.tsx",
			"qualifiedName": "walletConnectV1"
		},
		"130": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "walletConnectV1"
		},
		"131": {
			"sourceFileName": "src/wallet/wallets/walletConnect/walletConnect.tsx",
			"qualifiedName": "config"
		},
		"132": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"133": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "zerionWallet"
		},
		"134": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "options"
		},
		"135": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "ZerionkWalletConfigOptions"
		},
		"136": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "__type"
		},
		"137": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"138": {
			"sourceFileName": "src/wallet/wallets/zerion/zerionWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"139": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"140": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "okxWallet"
		},
		"141": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "options"
		},
		"142": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "OKXWalletConfigOptions"
		},
		"143": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "__type"
		},
		"144": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"145": {
			"sourceFileName": "src/wallet/wallets/okx/okxWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"146": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "coreWallet"
		},
		"147": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "coreWallet"
		},
		"148": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "options"
		},
		"149": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "CoreWalletConfigOptions"
		},
		"150": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "__type"
		},
		"151": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"152": {
			"sourceFileName": "src/wallet/wallets/coreWallet/coreWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"153": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "cryptoDefiWallet"
		},
		"154": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "cryptoDefiWallet"
		},
		"155": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "options"
		},
		"156": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "CryptoDefiWalletConfigOptions"
		},
		"157": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "__type"
		},
		"158": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"159": {
			"sourceFileName": "src/wallet/wallets/defiWallet/cryptoDefiWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"160": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "rabbyWallet"
		},
		"161": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "rabbyWallet"
		},
		"162": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "options"
		},
		"163": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "RabbyWalletConfigOptions"
		},
		"164": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "__type"
		},
		"165": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"166": {
			"sourceFileName": "src/wallet/wallets/rabby/rabbyWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"167": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "coin98Wallet"
		},
		"168": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "coin98Wallet"
		},
		"169": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "options"
		},
		"170": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "Coin98WalletConfigOptions"
		},
		"171": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "__type"
		},
		"172": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"173": {
			"sourceFileName": "src/wallet/wallets/coin98/coin98Wallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"174": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"175": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "darkTheme"
		},
		"176": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"177": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"178": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "lightTheme"
		},
		"179": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "overrides"
		},
		"180": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "Theme"
		},
		"181": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type"
		},
		"182": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.type"
		},
		"183": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.colors"
		},
		"184": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type"
		},
		"185": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.primaryText"
		},
		"186": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryText"
		},
		"187": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.accentText"
		},
		"188": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.danger"
		},
		"189": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.success"
		},
		"190": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.modalOverlayBg"
		},
		"191": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.accentButtonBg"
		},
		"192": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.accentButtonText"
		},
		"193": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.primaryButtonBg"
		},
		"194": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.primaryButtonText"
		},
		"195": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryButtonBg"
		},
		"196": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryButtonText"
		},
		"197": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryButtonHoverBg"
		},
		"198": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.modalBg"
		},
		"199": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.dropdownBg"
		},
		"200": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.tooltipBg"
		},
		"201": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.tooltipText"
		},
		"202": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.inputAutofillBg"
		},
		"203": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.scrollbarBg"
		},
		"204": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.walletSelectorButtonHoverBg"
		},
		"205": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.separatorLine"
		},
		"206": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryIconColor"
		},
		"207": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryIconHoverBg"
		},
		"208": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.secondaryIconHoverColor"
		},
		"209": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.borderColor"
		},
		"210": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.skeletonBg"
		},
		"211": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.selectedTextColor"
		},
		"212": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.selectedTextBg"
		},
		"213": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.connectedButtonBg"
		},
		"214": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.connectedButtonBgHover"
		},
		"215": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "__type.fontFamily"
		},
		"216": {
			"sourceFileName": "src/design-system/index.ts",
			"qualifiedName": "ThemeOverrides"
		},
		"217": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "en"
		},
		"218": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "en"
		},
		"219": {
			"sourceFileName": "src/evm/locales/en.ts",
			"qualifiedName": "overrides"
		},
		"220": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "ja"
		},
		"221": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "ja"
		},
		"222": {
			"sourceFileName": "src/evm/locales/ja.ts",
			"qualifiedName": "overrides"
		},
		"223": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "es"
		},
		"224": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "es"
		},
		"225": {
			"sourceFileName": "src/evm/locales/es.ts",
			"qualifiedName": "overrides"
		},
		"226": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "ThirdwebLocale"
		},
		"227": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"228": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectWallet"
		},
		"229": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"230": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.agreement"
		},
		"231": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"232": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.and"
		},
		"233": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.prefix"
		},
		"234": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.privacyPolicy"
		},
		"235": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.termsOfService"
		},
		"236": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.backupWallet"
		},
		"237": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmInWallet"
		},
		"238": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectAWallet"
		},
		"239": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectedToSmartWallet"
		},
		"240": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"241": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.continueAsGuest"
		},
		"242": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.copyAddress"
		},
		"243": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.currentNetwork"
		},
		"244": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultButtonTitle"
		},
		"245": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultModalTitle"
		},
		"246": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.disconnectWallet"
		},
		"247": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.download"
		},
		"248": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"249": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.android"
		},
		"250": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.chrome"
		},
		"251": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.iOS"
		},
		"252": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStarted"
		},
		"253": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.guest"
		},
		"254": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.guestWalletWarning"
		},
		"255": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.installed"
		},
		"256": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.networkSelector"
		},
		"257": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"258": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.addCustomNetwork"
		},
		"259": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.allNetworks"
		},
		"260": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.categoryLabel"
		},
		"261": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"262": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.others"
		},
		"263": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.popular"
		},
		"264": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.recentlyUsed"
		},
		"265": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"266": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"267": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loading"
		},
		"268": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.mainnets"
		},
		"269": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.testnets"
		},
		"270": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"271": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newToWallets"
		},
		"272": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.or"
		},
		"273": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.personalWallet"
		},
		"274": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.receive"
		},
		"275": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.receiveFundsScreen"
		},
		"276": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"277": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"278": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"279": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.recommended"
		},
		"280": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.requestTestnetFunds"
		},
		"281": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.send"
		},
		"282": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendFundsScreen"
		},
		"283": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"284": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.amount"
		},
		"285": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.insufficientFunds"
		},
		"286": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidAddress"
		},
		"287": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.noTokensFound"
		},
		"288": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.searchToken"
		},
		"289": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.selectTokenTitle"
		},
		"290": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendTo"
		},
		"291": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sending"
		},
		"292": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"293": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.successMessage"
		},
		"294": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"295": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.token"
		},
		"296": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionFailed"
		},
		"297": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionRejected"
		},
		"298": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"299": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signatureScreen"
		},
		"300": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"301": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instructionScreen"
		},
		"302": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"303": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"304": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInButton"
		},
		"305": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"306": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signingScreen"
		},
		"307": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"308": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.approveTransactionInSafe"
		},
		"309": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSignIn"
		},
		"310": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"311": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.prompt"
		},
		"312": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.promptForSafe"
		},
		"313": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"314": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.tryAgain"
		},
		"315": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.smartWallet"
		},
		"316": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchAccount"
		},
		"317": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchNetwork"
		},
		"318": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchTo"
		},
		"319": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchingNetwork"
		},
		"320": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.transactionHistory"
		},
		"321": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.welcomeScreen"
		},
		"322": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"323": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultSubtitle"
		},
		"324": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.defaultTitle"
		},
		"325": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wallets"
		},
		"326": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coin98Wallet"
		},
		"328": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"329": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"330": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"331": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"332": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"333": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"334": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"335": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"336": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"337": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"338": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"339": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"340": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"341": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"342": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coinbaseWallet"
		},
		"343": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.coreWallet"
		},
		"344": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.cryptoDefiWallet"
		},
		"345": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.embeddedWallet"
		},
		"346": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"347": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createPassword"
		},
		"348": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"349": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmation"
		},
		"350": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSetPassword"
		},
		"351": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"352": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"353": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.saveInstruction"
		},
		"354": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"355": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"356": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailLoginScreen"
		},
		"357": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"358": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterCodeSendTo"
		},
		"359": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterRecoveryCode"
		},
		"360": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSendCode"
		},
		"361": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCode"
		},
		"362": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCodeOrRecoveryCode"
		},
		"363": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newDeviceDetected"
		},
		"364": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.resendCode"
		},
		"365": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendingCode"
		},
		"366": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"367": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.verify"
		},
		"368": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"369": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"370": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterPassword"
		},
		"371": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"372": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inputPlaceholder"
		},
		"373": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"374": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitButton"
		},
		"375": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"376": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wrongPassword"
		},
		"377": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"378": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"379": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithApple"
		},
		"380": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithFacebook"
		},
		"381": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithGoogle"
		},
		"382": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.socialLoginScreen"
		},
		"383": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"384": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"385": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"386": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"387": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"388": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"389": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.frameWallet"
		},
		"390": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"391": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionFailedScreen"
		},
		"392": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"393": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description"
		},
		"394": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.downloadFrame"
		},
		"395": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.supportLink"
		},
		"396": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"397": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"398": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"399": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"400": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"401": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"402": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"403": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"404": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"405": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"406": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"407": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"408": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"409": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"410": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.localWallet"
		},
		"411": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"412": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.confirmPasswordLabel"
		},
		"413": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createScreen"
		},
		"414": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"415": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"416": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createNewWallet"
		},
		"417": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.importWallet"
		},
		"418": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"419": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterYourPassword"
		},
		"420": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.exportScreen"
		},
		"421": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"422": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description1"
		},
		"423": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description2"
		},
		"424": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.download"
		},
		"425": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"426": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.walletAddress"
		},
		"427": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.importScreen"
		},
		"428": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"429": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description1"
		},
		"430": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.description2"
		},
		"431": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.import"
		},
		"432": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"433": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.uploadJSON"
		},
		"434": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.uploadedSuccessfully"
		},
		"435": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.passwordLabel"
		},
		"436": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.reconnectScreen"
		},
		"437": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"438": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.continue"
		},
		"439": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.createNewWallet"
		},
		"440": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.savedWallet"
		},
		"441": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"442": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.warningScreen"
		},
		"443": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"444": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.backupWallet"
		},
		"445": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"446": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.warning"
		},
		"447": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.magicLink"
		},
		"448": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"449": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.countryCodeMissing"
		},
		"450": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailOrPhoneRequired"
		},
		"451": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"452": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"453": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"454": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmailOrPhone"
		},
		"455": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidPhone"
		},
		"456": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWith"
		},
		"457": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWithEmailOrPhone"
		},
		"458": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.loginWithPhone"
		},
		"459": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.phoneRequired"
		},
		"460": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"461": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"462": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.metamaskWallet"
		},
		"463": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.okxWallet"
		},
		"464": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.oneKeyWallet"
		},
		"465": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.paperWallet"
		},
		"466": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"467": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailLoginScreen"
		},
		"468": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"469": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterCodeSendTo"
		},
		"470": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.enterRecoveryCode"
		},
		"471": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSendCode"
		},
		"472": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCode"
		},
		"473": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidCodeOrRecoveryCode"
		},
		"474": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.newDeviceDetected"
		},
		"475": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.resendCode"
		},
		"476": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.sendingCode"
		},
		"477": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"478": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.verify"
		},
		"479": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailPlaceholder"
		},
		"480": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.emailRequired"
		},
		"481": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.googleLoginScreen"
		},
		"482": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"483": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"484": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"485": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"486": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"487": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidEmail"
		},
		"488": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signIn"
		},
		"489": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.signInWithGoogle"
		},
		"490": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.submitEmail"
		},
		"491": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.phantomWallet"
		},
		"492": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.rabbyWallet"
		},
		"493": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.rainbowWallet"
		},
		"494": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.safeWallet"
		},
		"495": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"496": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.accountDetailsScreen"
		},
		"497": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"498": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectToSafe"
		},
		"499": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"500": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.dashboardLink"
		},
		"501": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToConnect"
		},
		"502": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"503": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.findSafeAddressIn"
		},
		"504": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.invalidChainConfig"
		},
		"505": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.mainnets"
		},
		"506": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.network"
		},
		"507": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.safeAddress"
		},
		"508": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.selectNetworkPlaceholder"
		},
		"509": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchNetwork"
		},
		"510": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.switchingNetwork"
		},
		"511": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.testnets"
		},
		"512": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"513": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectWalletScreen"
		},
		"514": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"515": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.learnMoreLink"
		},
		"516": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"517": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"518": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.smartWallet"
		},
		"519": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"520": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connecting"
		},
		"521": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToConnect"
		},
		"522": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.wrongNetworkScreen"
		},
		"523": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"524": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failedToSwitch"
		},
		"525": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"526": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.title"
		},
		"527": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.trustWallet"
		},
		"528": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.walletConnect"
		},
		"529": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"530": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanInstruction"
		},
		"531": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.zerionWallet"
		},
		"532": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "ExtensionAndQRScreensLocale"
		},
		"533": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"534": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.connectionScreen"
		},
		"535": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"536": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.failed"
		},
		"537": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.inProgress"
		},
		"538": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"539": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.retry"
		},
		"540": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedLink"
		},
		"541": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.getStartedScreen"
		},
		"542": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"543": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"544": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.scanScreen"
		},
		"545": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type"
		},
		"546": {
			"sourceFileName": "src/evm/locales/types.ts",
			"qualifiedName": "__type.instruction"
		},
		"547": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"548": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useIsWalletModalOpen"
		},
		"549": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"550": {
			"sourceFileName": "src/evm/providers/wallet-ui-states-provider.tsx",
			"qualifiedName": "useSetIsWalletModalOpen"
		},
		"551": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "useSafe"
		},
		"552": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "useSafe"
		},
		"553": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "__function"
		},
		"554": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "__function"
		},
		"555": {
			"sourceFileName": "src/evm/connectors/gnosis/useSafe.ts",
			"qualifiedName": "connectProps"
		},
		"556": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "useMagic"
		},
		"557": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "useMagic"
		},
		"558": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "__function"
		},
		"559": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "__function"
		},
		"560": {
			"sourceFileName": "src/evm/connectors/magic/useMagic.ts",
			"qualifiedName": "options"
		},
		"561": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWallet"
		},
		"562": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWallet"
		},
		"563": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "props"
		},
		"564": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "ConnectWalletProps"
		},
		"565": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"566": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.className"
		},
		"567": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.theme"
		},
		"568": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.btnTitle"
		},
		"569": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitle"
		},
		"570": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalTitleIconUrl"
		},
		"571": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.detailsBtn"
		},
		"572": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"573": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"574": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.dropdownPosition"
		},
		"575": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.auth"
		},
		"576": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"577": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"578": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"579": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"580": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"581": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "token"
		},
		"582": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"583": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"584": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type"
		},
		"585": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.style"
		},
		"586": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.networkSelector"
		},
		"587": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideTestnetFaucet"
		},
		"588": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.switchToActiveChain"
		},
		"589": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"590": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"591": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"592": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"593": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.supportedTokens"
		},
		"594": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.displayBalanceToken"
		},
		"595": {
			"sourceFileName": "src/wallet/ConnectWallet/ConnectWallet.tsx",
			"qualifiedName": "__type.hideSwitchToPersonalWallet"
		},
		"596": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "WelcomeScreen"
		},
		"597": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"598": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.title"
		},
		"599": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.subtitle"
		},
		"600": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.img"
		},
		"601": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"602": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.src"
		},
		"603": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.width"
		},
		"604": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type.height"
		},
		"605": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"606": {
			"sourceFileName": "src/wallet/ConnectWallet/screens/types.ts",
			"qualifiedName": "__type"
		},
		"614": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelector"
		},
		"615": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelector"
		},
		"616": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "props"
		},
		"617": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelectorProps"
		},
		"618": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"619": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.theme"
		},
		"620": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onClose"
		},
		"621": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"622": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"623": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.open"
		},
		"624": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.chains"
		},
		"625": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.popularChains"
		},
		"626": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.recentChains"
		},
		"627": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.renderChain"
		},
		"628": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onSwitch"
		},
		"629": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"630": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"631": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "chain"
		},
		"632": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.onCustomClick"
		},
		"633": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"634": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"635": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "NetworkSelectorChainProps"
		},
		"636": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"637": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.chain"
		},
		"638": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switchChain"
		},
		"639": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"640": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"641": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switching"
		},
		"642": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.switchFailed"
		},
		"643": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type.close"
		},
		"644": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"645": {
			"sourceFileName": "src/wallet/ConnectWallet/NetworkSelector.tsx",
			"qualifiedName": "__type"
		},
		"646": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "DropDownPosition"
		},
		"647": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "__type"
		},
		"648": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "__type.side"
		},
		"649": {
			"sourceFileName": "src/wallet/ConnectWallet/Details.tsx",
			"qualifiedName": "__type.align"
		},
		"650": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"651": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3Button"
		},
		"652": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "TAction"
		},
		"653": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "props"
		},
		"654": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps"
		},
		"655": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.className"
		},
		"656": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.contractAddress"
		},
		"657": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.contractAbi"
		},
		"658": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onSuccess"
		},
		"659": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"660": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"661": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "result"
		},
		"662": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onError"
		},
		"663": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"664": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"665": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "error"
		},
		"666": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.onSubmit"
		},
		"667": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"668": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"669": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.isDisabled"
		},
		"670": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.action"
		},
		"671": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.type"
		},
		"672": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.theme"
		},
		"673": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.style"
		},
		"674": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.connectWallet"
		},
		"675": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"676": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.className"
		},
		"677": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.btnTitle"
		},
		"678": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalTitle"
		},
		"679": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalTitleIconUrl"
		},
		"680": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.auth"
		},
		"681": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"682": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.loginOptional"
		},
		"683": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.onLogin"
		},
		"684": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"685": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"686": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "token"
		},
		"687": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.onLogout"
		},
		"688": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"689": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"690": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.style"
		},
		"691": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.modalSize"
		},
		"692": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.termsOfServiceUrl"
		},
		"693": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.privacyPolicyUrl"
		},
		"694": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type.welcomeScreen"
		},
		"695": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "Web3ButtonProps.TActionFn"
		},
		"696": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "ActionFn"
		},
		"697": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"698": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "__type"
		},
		"699": {
			"sourceFileName": "src/evm/components/Web3Button/index.tsx",
			"qualifiedName": "contract"
		},
		"700": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"701": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProvider"
		},
		"702": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "TChains"
		},
		"703": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"704": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"705": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"706": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"707": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"708": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"709": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"710": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"711": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"712": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"713": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"714": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"715": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"716": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"717": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"718": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"719": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"720": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"721": {
			"sourceFileName": "../chains/src/index.ts",
			"qualifiedName": "__type"
		},
		"722": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "props"
		},
		"723": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "DefaultChains"
		},
		"724": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps"
		},
		"725": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.supportedWallets"
		},
		"726": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.theme"
		},
		"727": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.signer"
		},
		"728": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.locale"
		},
		"729": {
			"sourceFileName": "src/evm/providers/thirdweb-provider.tsx",
			"qualifiedName": "ThirdwebProviderProps.TChains"
		},
		"730": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps"
		},
		"731": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.src"
		},
		"732": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.alt"
		},
		"733": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.poster"
		},
		"734": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.gatewayUrl"
		},
		"735": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.width"
		},
		"736": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "MediaRendererProps.height"
		},
		"737": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"738": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"739": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"740": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"741": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"742": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"743": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps"
		},
		"744": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"745": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"746": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.width"
		},
		"747": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.height"
		},
		"748": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"749": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"750": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"751": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"759": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "useRainbowWallet"
		},
		"760": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "useRainbowWallet"
		},
		"761": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__function"
		},
		"762": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__function"
		},
		"763": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"764": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__type"
		},
		"765": {
			"sourceFileName": "src/evm/hooks/wallets/useRainbowWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"766": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "useTrustWallet"
		},
		"767": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "useTrustWallet"
		},
		"768": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__function"
		},
		"769": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__function"
		},
		"770": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"771": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__type"
		},
		"772": {
			"sourceFileName": "src/evm/hooks/wallets/useTrustWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"773": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "useMetamask"
		},
		"774": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "useMetamask"
		},
		"775": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__function"
		},
		"776": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__function"
		},
		"777": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "connectOptions"
		},
		"778": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__type"
		},
		"779": {
			"sourceFileName": "src/evm/hooks/wallets/useMetamask.ts",
			"qualifiedName": "__type.chainId"
		},
		"780": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "useCoinbaseWallet"
		},
		"781": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "useCoinbaseWallet"
		},
		"782": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__function"
		},
		"783": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__function"
		},
		"784": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "connectOptions"
		},
		"785": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__type"
		},
		"786": {
			"sourceFileName": "src/evm/hooks/wallets/useCoinbaseWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"787": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "useFrameWallet"
		},
		"788": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "useFrameWallet"
		},
		"789": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__function"
		},
		"790": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__function"
		},
		"791": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "connectOptions"
		},
		"792": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__type"
		},
		"793": {
			"sourceFileName": "src/evm/hooks/wallets/useFrame.ts",
			"qualifiedName": "__type.chainId"
		},
		"794": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "useBloctoWallet"
		},
		"795": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "useBloctoWallet"
		},
		"796": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__function"
		},
		"797": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__function"
		},
		"798": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "options"
		},
		"799": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__type"
		},
		"800": {
			"sourceFileName": "src/evm/hooks/wallets/useBloctoWallet.ts",
			"qualifiedName": "__type.chainId"
		},
		"801": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"802": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWallet"
		},
		"803": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object"
		},
		"804": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.connect"
		},
		"805": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"806": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"807": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "authParams"
		},
		"808": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__object.sendVerificationEmail"
		},
		"809": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"810": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__function"
		},
		"811": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__0"
		},
		"812": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type"
		},
		"813": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "__type.email"
		},
		"814": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWalletUserEmail"
		},
		"815": {
			"sourceFileName": "src/evm/hooks/wallets/useEmbeddedWallet.ts",
			"qualifiedName": "useEmbeddedWalletUserEmail"
		},
		"816": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"817": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "useEmbeddedWalletSendVerificationEmail"
		},
		"818": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"819": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "__function"
		},
		"820": {
			"sourceFileName": "src/evm/hooks/useEmbeddedWalletSendVerificationEmail.ts",
			"qualifiedName": "email"
		},
		"821": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWalletUserEmail"
		},
		"822": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWalletUserEmail"
		},
		"823": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWallet"
		},
		"824": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "usePaperWallet"
		},
		"825": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__function"
		},
		"826": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__function"
		},
		"827": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "options"
		},
		"828": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type"
		},
		"829": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type.chainId"
		},
		"830": {
			"sourceFileName": "src/evm/hooks/wallets/usePaper.ts",
			"qualifiedName": "__type.email"
		},
		"831": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnect"
		},
		"832": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnect"
		},
		"833": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"834": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"835": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "options"
		},
		"836": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type"
		},
		"837": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.chainId"
		},
		"838": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.projectId"
		},
		"839": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.qrModalOptions"
		},
		"840": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnectV1"
		},
		"841": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "useWalletConnectV1"
		},
		"842": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"843": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__function"
		},
		"844": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "options"
		},
		"845": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type"
		},
		"846": {
			"sourceFileName": "src/evm/hooks/wallets/useWalletConnect.ts",
			"qualifiedName": "__type.chainId"
		},
		"847": {
			"sourceFileName": "src/wallet/ConnectWallet/defaultTokens.ts",
			"qualifiedName": "SupportedTokens"
		},
		"848": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "oneKeyWallet"
		},
		"849": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "oneKeyWallet"
		},
		"850": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "options"
		},
		"851": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "OneKeyWalletConfigOptions"
		},
		"852": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "__type"
		},
		"853": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "__type.projectId"
		},
		"854": {
			"sourceFileName": "src/wallet/wallets/oneKey/oneKeyWallet.tsx",
			"qualifiedName": "__type.recommended"
		},
		"855": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"856": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "useResolvedMediaType"
		},
		"857": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "uri"
		},
		"858": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "mimeType"
		},
		"859": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "gatewayUrl"
		},
		"860": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object"
		},
		"861": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.url"
		},
		"862": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "__object.mimeType"
		},
		"863": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaRenderer"
		},
		"864": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "MediaRenderer"
		},
		"865": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		},
		"866": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType"
		},
		"867": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.url"
		},
		"868": {
			"sourceFileName": "src/evm/components/MediaRenderer.tsx",
			"qualifiedName": "MediaType.mimeType"
		},
		"869": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps"
		},
		"870": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.metadata"
		},
		"871": {
			"sourceFileName": "../sdk/src/core/schema/nft.ts",
			"qualifiedName": "__type"
		},
		"872": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.width"
		},
		"873": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMediaProps.height"
		},
		"874": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.className"
		},
		"875": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.style"
		},
		"876": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.requireInteraction"
		},
		"877": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.controls"
		},
		"878": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.children"
		},
		"879": {
			"sourceFileName": "src/evm/components/types.ts",
			"qualifiedName": "SharedMediaProps.mimeType"
		},
		"880": {
			"sourceFileName": "src/evm/components/NftMedia.tsx",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"881": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "ThirdwebNftMedia"
		},
		"882": {
			"sourceFileName": "../../node_modules/.pnpm/@types+react@18.2.17/node_modules/@types/react/index.d.ts",
			"qualifiedName": "props"
		}
	}
}
